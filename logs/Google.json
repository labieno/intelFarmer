{
    "articles": [
        {
            "id": "tag:blogger.com,1999:blog-1176949257541686127.post-7329842243506396609",
            "guidislink": true,
            "link": "http://security.googleblog.com/2023/03/osv-and-vulnerability-life-cycle.html",
            "published": "2023-03-08T12:04:00.004-05:00",
            "published_parsed": [
                2023,
                3,
                8,
                17,
                4,
                0,
                2,
                67,
                0
            ],
            "updated": "2023-03-08T12:04:53.628-05:00",
            "updated_parsed": [
                2023,
                3,
                8,
                17,
                4,
                53,
                2,
                67,
                0
            ],
            "title": "OSV and the Vulnerability Life Cycle",
            "title_detail": {
                "type": "text/plain",
                "language": null,
                "base": "http://feeds.feedburner.com/GoogleOnlineSecurityBlog",
                "value": "OSV and the Vulnerability Life Cycle"
            },
            "content": [
                {
                    "type": "text/html",
                    "language": null,
                    "base": "http://feeds.feedburner.com/GoogleOnlineSecurityBlog",
                    "value": "<span class=\"byline-author\">Posted by Oliver Chang and Andrew Pollock, Google Open Source Security Team</span> <p>It is an interesting time for everyone concerned with open source vulnerabilities. The <a href=\"https://blog.google/technology/safety-security/how-google-supports-todays-critical-cybersecurity-efforts/\">U.S. Executive Order on Improving the Nation's Cybersecurity</a> requirements for vulnerability disclosure programs and assurances for software used by the US government will go into effect later this year. Finding and fixing security vulnerabilities has never been more important, yet with increasing interest in the area, the vulnerability management space has become fragmented\u2014there are a lot of new tools and competing standards. </p><p>In 2021, we announced the launch of <a href=\"https://osv.dev\">OSV</a>, a database of open source vulnerabilities built partially from vulnerabilities found through Google\u2019s <a href=\"https://security.googleblog.com/2023/02/taking-next-step-oss-fuzz-in-2023.html\">OSS-Fuzz program</a>. OSV has grown since then and now includes a widely adopted <a href=\"https://ossf.github.io/osv-schema/\">OpenSSF schema</a> and a <a href=\"https://github.com/google/osv-scanner\">vulnerability scanner</a>. In this blog post, we\u2019ll cover how these tools help maintainers track vulnerabilities from discovery to remediation, and how to use OSV together with other SBOM and VEX standards. </p><h2>Vulnerability Databases</h2>  <p>The lifecycle of a known vulnerability begins when it is discovered. To reach developers, the vulnerability needs to be added to a database. CVEs are the industry standard for describing vulnerabilities across all software, but there was a lack of an open source centric database. As a result, several independent vulnerability databases exist across different ecosystems. </p><p>To address this, we <a href=\"https://security.googleblog.com/2021/06/announcing-unified-vulnerability-schema.html\">announced the OSV Schema</a> to unify open source vulnerability databases. The schema is machine readable, and is designed so dependencies can be easily matched to vulnerabilities using automation. The <a href=\"https://ossf.github.io/osv-schema/\">OSV Schema</a> remains the only widely adopted schema that treats open source as a first class citizen. Since becoming a part of <a href=\"https://github.com/ossf/osv-schema\">OpenSSF</a>, the OSV Schema has seen adoption from services like <a href=\"https://github.com/github/advisory-database\">GitHub</a>, ecosystems such as <a href=\"https://github.com/RustSec/advisory-db/\">Rust</a> and <a href=\"https://github.com/pypa/advisory-database\">Python</a>, and Linux distributions such as <a href=\"https://distro-tools.rocky.page/apollo/openapi/#osv\">Rocky Linux</a>. </p><p>Thanks to such wide community adoption of the OSV Schema, <a href=\"https://OSV.dev\">OSV.dev</a> is able to provide a distributed vulnerability database and service that pulls from language specific authoritative sources. In total, the <a href=\"https://osv.dev/list\">OSV.dev database</a> now includes 43,302 vulnerabilities from 16 ecosystems as of March 2023. Users can check OSV for a comprehensive view of all known vulnerabilities in open source. </p><p>Every vulnerability in <a href=\"http://feeds.feedburner.com/OSV.dev\">OSV.dev</a> contains package manager versions and git commit hashes, so open source users can easily determine if their packages are impacted because of the familiar style of versioning. Maintainers are also familiar with OSV\u2019s community driven and distributed collaboration on the development of OSV\u2019s database, tools, and schema. </p><h2>Matching</h2>  <p>The next step in managing vulnerabilities is to determine project dependencies and their associated vulnerabilities. Last December we released <a href=\"https://security.googleblog.com/2022/12/announcing-osv-scanner-vulnerability.html\">OSV-Scanner</a>, a free, open source tool which scans software projects\u2019 lockfiles, SBOMs, or git repositories to identify vulnerabilities found in the <a href=\"http://feeds.feedburner.com/OSV.dev\">OSV.dev</a> database. When a project is scanned, the user gets a list of all known vulnerabilities in the project. </p><p>In the two months since launch, <a href=\"https://github.com/google/osv-scanner\">OSV-Scanner</a> has seen positive reception from the community, including over 4,600 stars and 130 PRs from 29 contributors. Thank you to the community, which has been incredibly helpful in identifying bugs, supporting new lockfile formats, and helping us prioritize new features for the tool.  </p><h2>Remediation</h2>  <p>Once a vulnerability has been identified, it needs to be remediated. Removing a vulnerability through upgrading the package is <a href=\"https://blog.deps.dev/after-the-advisory/\">often not as simple as it seems</a>. Sometimes an upgrade will break your project or cause another dependency to not function correctly. These complex dependency graph constraints can be difficult to resolve. We\u2019re currently working on building features in OSV-Scanner to improve this process by suggesting minimal upgrade paths. </p><p>Sometimes, it isn\u2019t even necessary to upgrade a package. A vulnerable component may be present in a project, but that doesn\u2019t mean it is exploitable\u2013and VEX statements provide this information to help in prioritization of vulnerability remediation. For example, it may not be necessary to update a vulnerable component if it is never called.  In cases like this, a VEX (Vulnerability Exploitability eXchange) statement can provide this justification. </p><p>Manually generating VEX statements is time intensive and complex, requiring deep expertise in the project\u2019s codebase and libraries included in its dependency tree. These costs are barriers to VEX adoption at scale, so we\u2019re working on the ability to auto-generate high quality VEX statements based on static analysis and manual ignore files. The format for this will likely be one or more of the current emerging VEX standards.  </p><h2>Compatibility</h2>  <p>Not only are there multiple emerging VEX standards (such as OpenVEX, CycloneDX, and CSAF),  there are also multiple advisory formats (CVE, CSAF) and SBOM formats (CycloneDX, SPDX). Compatibility is a concern for project maintainers and open source users throughout the process of identifying and fixing project vulnerabilities. A developer may be obligated to use another standard and wonder if OSV can be used alongside it.  </p><p>Fortunately, the answer is generally yes! OSV provides a focused, first-class experience for describing open source vulnerabilities, while providing an easy bridge to other standards.  </p><h2 style=\"text-align: left;\">CVE 5.0</h2>  <p>The OSV team has directly worked with the CVE Quality Working Group on a key new feature of the latest CVE 5.0 standard: <a href=\"https://github.com/CVEProject/cve-schema/blob/master/schema/v5.0/docs/versions.md\">a new versioning schema</a> that closely resembles OSV\u2019s own versioning schema. This will enable easy conversion from OSV to CVE 5.0, and vice versa. It also enables OSV to contribute high quality metadata directly back to CVE, and drive better machine readability and data quality across the open source ecosystem.  </p><h2 style=\"text-align: left;\">Other emerging standards</h2>  <p>Not all standards will convert as effortlessly as CVE to OSV. Emerging standards like CSAF are comparatively complicated because they support broader use cases. These standards often need to encode affected proprietary software, and CSAF includes rich mechanisms to express complicated nested product trees that are unnecessary for open source. As a result, the spec is roughly six times the size of OSV and difficult to use directly for open source. </p><p>OSV Schema's strong adoption shows that the open source community prefers a lightweight standard, tailored for open source. However, the OSV Schema maintains compatibility with CSAF for identification of packages through the <a href=\"https://github.com/package-url/purl-spec\">Package URL </a>and <a href=\"https://github.com/package-url/purl-spec/blob/version-range-spec/VERSION-RANGE-SPEC.rst\">vers</a> standards. CSAF records that use these mechanisms can be directly converted to OSV, and all OSV entries can be converted to CSAF.  </p><h2 style=\"text-align: left;\">SBOM and VEX standards</h2>  <p>Similarly, all emerging SBOM and VEX standards maintain compatibility with OSV through the Package URL specification. OSV-Scanner today also already provides scanning support for the SPDX and CycloneDX SBOM standards. </p><h2 style=\"text-align: left;\">OSV in 2023</h2>  <p>OSV already provides straightforward compatibility with established standards such as CVE, SPDX, and CycloneDX. While it\u2019s not clear yet which other emerging SBOM and VEX formats will become the standard, OSV has a clear path to supporting all of them. Open source developers and ecosystems will likely find OSV to be convenient for recording and consuming vulnerability information given OSV\u2019s focused, minimal design.  </p><p>OSV is not just built for open source, it is an open source project. We desire to build tools that will easily fit into your workflow and will help you identify and fix vulnerabilities in your projects. Your input, through contributions, questions, and feedback, is very valuable to us as we work towards that goal. Questions can be asked by opening an issue and all of our projects (<a href=\"https://github.com/google/osv.dev\">OSV.dev</a>, <a href=\"https://github.com/google/osv-scanner\">OSV-Scanner</a>, <a href=\"https://github.com/ossf/osv-schema\">OSV-Schema</a>) welcome contributors. </p><hr /><p>Want to keep up with the latest OSV developments? We\u2019ve just launched a project blog! Check out our first <a href=\"https://osv.dev/blog/posts/automating-and-scaling-vex-generation/\">major post</a>, all about how VEX could work at scale.  </p>"
                }
            ],
            "summary": "<span class=\"byline-author\">Posted by Oliver Chang and Andrew Pollock, Google Open Source Security Team</span> <p>It is an interesting time for everyone concerned with open source vulnerabilities. The <a href=\"https://blog.google/technology/safety-security/how-google-supports-todays-critical-cybersecurity-efforts/\">U.S. Executive Order on Improving the Nation's Cybersecurity</a> requirements for vulnerability disclosure programs and assurances for software used by the US government will go into effect later this year. Finding and fixing security vulnerabilities has never been more important, yet with increasing interest in the area, the vulnerability management space has become fragmented\u2014there are a lot of new tools and competing standards. </p><p>In 2021, we announced the launch of <a href=\"https://osv.dev\">OSV</a>, a database of open source vulnerabilities built partially from vulnerabilities found through Google\u2019s <a href=\"https://security.googleblog.com/2023/02/taking-next-step-oss-fuzz-in-2023.html\">OSS-Fuzz program</a>. OSV has grown since then and now includes a widely adopted <a href=\"https://ossf.github.io/osv-schema/\">OpenSSF schema</a> and a <a href=\"https://github.com/google/osv-scanner\">vulnerability scanner</a>. In this blog post, we\u2019ll cover how these tools help maintainers track vulnerabilities from discovery to remediation, and how to use OSV together with other SBOM and VEX standards. </p><h2>Vulnerability Databases</h2>  <p>The lifecycle of a known vulnerability begins when it is discovered. To reach developers, the vulnerability needs to be added to a database. CVEs are the industry standard for describing vulnerabilities across all software, but there was a lack of an open source centric database. As a result, several independent vulnerability databases exist across different ecosystems. </p><p>To address this, we <a href=\"https://security.googleblog.com/2021/06/announcing-unified-vulnerability-schema.html\">announced the OSV Schema</a> to unify open source vulnerability databases. The schema is machine readable, and is designed so dependencies can be easily matched to vulnerabilities using automation. The <a href=\"https://ossf.github.io/osv-schema/\">OSV Schema</a> remains the only widely adopted schema that treats open source as a first class citizen. Since becoming a part of <a href=\"https://github.com/ossf/osv-schema\">OpenSSF</a>, the OSV Schema has seen adoption from services like <a href=\"https://github.com/github/advisory-database\">GitHub</a>, ecosystems such as <a href=\"https://github.com/RustSec/advisory-db/\">Rust</a> and <a href=\"https://github.com/pypa/advisory-database\">Python</a>, and Linux distributions such as <a href=\"https://distro-tools.rocky.page/apollo/openapi/#osv\">Rocky Linux</a>. </p><p>Thanks to such wide community adoption of the OSV Schema, <a href=\"https://OSV.dev\">OSV.dev</a> is able to provide a distributed vulnerability database and service that pulls from language specific authoritative sources. In total, the <a href=\"https://osv.dev/list\">OSV.dev database</a> now includes 43,302 vulnerabilities from 16 ecosystems as of March 2023. Users can check OSV for a comprehensive view of all known vulnerabilities in open source. </p><p>Every vulnerability in <a href=\"http://feeds.feedburner.com/OSV.dev\">OSV.dev</a> contains package manager versions and git commit hashes, so open source users can easily determine if their packages are impacted because of the familiar style of versioning. Maintainers are also familiar with OSV\u2019s community driven and distributed collaboration on the development of OSV\u2019s database, tools, and schema. </p><h2>Matching</h2>  <p>The next step in managing vulnerabilities is to determine project dependencies and their associated vulnerabilities. Last December we released <a href=\"https://security.googleblog.com/2022/12/announcing-osv-scanner-vulnerability.html\">OSV-Scanner</a>, a free, open source tool which scans software projects\u2019 lockfiles, SBOMs, or git repositories to identify vulnerabilities found in the <a href=\"http://feeds.feedburner.com/OSV.dev\">OSV.dev</a> database. When a project is scanned, the user gets a list of all known vulnerabilities in the project. </p><p>In the two months since launch, <a href=\"https://github.com/google/osv-scanner\">OSV-Scanner</a> has seen positive reception from the community, including over 4,600 stars and 130 PRs from 29 contributors. Thank you to the community, which has been incredibly helpful in identifying bugs, supporting new lockfile formats, and helping us prioritize new features for the tool.  </p><h2>Remediation</h2>  <p>Once a vulnerability has been identified, it needs to be remediated. Removing a vulnerability through upgrading the package is <a href=\"https://blog.deps.dev/after-the-advisory/\">often not as simple as it seems</a>. Sometimes an upgrade will break your project or cause another dependency to not function correctly. These complex dependency graph constraints can be difficult to resolve. We\u2019re currently working on building features in OSV-Scanner to improve this process by suggesting minimal upgrade paths. </p><p>Sometimes, it isn\u2019t even necessary to upgrade a package. A vulnerable component may be present in a project, but that doesn\u2019t mean it is exploitable\u2013and VEX statements provide this information to help in prioritization of vulnerability remediation. For example, it may not be necessary to update a vulnerable component if it is never called.  In cases like this, a VEX (Vulnerability Exploitability eXchange) statement can provide this justification. </p><p>Manually generating VEX statements is time intensive and complex, requiring deep expertise in the project\u2019s codebase and libraries included in its dependency tree. These costs are barriers to VEX adoption at scale, so we\u2019re working on the ability to auto-generate high quality VEX statements based on static analysis and manual ignore files. The format for this will likely be one or more of the current emerging VEX standards.  </p><h2>Compatibility</h2>  <p>Not only are there multiple emerging VEX standards (such as OpenVEX, CycloneDX, and CSAF),  there are also multiple advisory formats (CVE, CSAF) and SBOM formats (CycloneDX, SPDX). Compatibility is a concern for project maintainers and open source users throughout the process of identifying and fixing project vulnerabilities. A developer may be obligated to use another standard and wonder if OSV can be used alongside it.  </p><p>Fortunately, the answer is generally yes! OSV provides a focused, first-class experience for describing open source vulnerabilities, while providing an easy bridge to other standards.  </p><h2 style=\"text-align: left;\">CVE 5.0</h2>  <p>The OSV team has directly worked with the CVE Quality Working Group on a key new feature of the latest CVE 5.0 standard: <a href=\"https://github.com/CVEProject/cve-schema/blob/master/schema/v5.0/docs/versions.md\">a new versioning schema</a> that closely resembles OSV\u2019s own versioning schema. This will enable easy conversion from OSV to CVE 5.0, and vice versa. It also enables OSV to contribute high quality metadata directly back to CVE, and drive better machine readability and data quality across the open source ecosystem.  </p><h2 style=\"text-align: left;\">Other emerging standards</h2>  <p>Not all standards will convert as effortlessly as CVE to OSV. Emerging standards like CSAF are comparatively complicated because they support broader use cases. These standards often need to encode affected proprietary software, and CSAF includes rich mechanisms to express complicated nested product trees that are unnecessary for open source. As a result, the spec is roughly six times the size of OSV and difficult to use directly for open source. </p><p>OSV Schema's strong adoption shows that the open source community prefers a lightweight standard, tailored for open source. However, the OSV Schema maintains compatibility with CSAF for identification of packages through the <a href=\"https://github.com/package-url/purl-spec\">Package URL </a>and <a href=\"https://github.com/package-url/purl-spec/blob/version-range-spec/VERSION-RANGE-SPEC.rst\">vers</a> standards. CSAF records that use these mechanisms can be directly converted to OSV, and all OSV entries can be converted to CSAF.  </p><h2 style=\"text-align: left;\">SBOM and VEX standards</h2>  <p>Similarly, all emerging SBOM and VEX standards maintain compatibility with OSV through the Package URL specification. OSV-Scanner today also already provides scanning support for the SPDX and CycloneDX SBOM standards. </p><h2 style=\"text-align: left;\">OSV in 2023</h2>  <p>OSV already provides straightforward compatibility with established standards such as CVE, SPDX, and CycloneDX. While it\u2019s not clear yet which other emerging SBOM and VEX formats will become the standard, OSV has a clear path to supporting all of them. Open source developers and ecosystems will likely find OSV to be convenient for recording and consuming vulnerability information given OSV\u2019s focused, minimal design.  </p><p>OSV is not just built for open source, it is an open source project. We desire to build tools that will easily fit into your workflow and will help you identify and fix vulnerabilities in your projects. Your input, through contributions, questions, and feedback, is very valuable to us as we work towards that goal. Questions can be asked by opening an issue and all of our projects (<a href=\"https://github.com/google/osv.dev\">OSV.dev</a>, <a href=\"https://github.com/google/osv-scanner\">OSV-Scanner</a>, <a href=\"https://github.com/ossf/osv-schema\">OSV-Schema</a>) welcome contributors. </p><hr /><p>Want to keep up with the latest OSV developments? We\u2019ve just launched a project blog! Check out our first <a href=\"https://osv.dev/blog/posts/automating-and-scaling-vex-generation/\">major post</a>, all about how VEX could work at scale.  </p>",
            "links": [
                {
                    "href": "http://security.googleblog.com/feeds/7329842243506396609/comments/default",
                    "rel": "replies",
                    "title": "Post Comments",
                    "type": "application/atom+xml"
                },
                {
                    "href": "http://www.blogger.com/comment.g?blogID=1176949257541686127&postID=7329842243506396609&isPopup=true",
                    "rel": "replies",
                    "title": "0 Comments",
                    "type": "text/html"
                },
                {
                    "href": "http://www.blogger.com/feeds/1176949257541686127/posts/default/7329842243506396609",
                    "rel": "edit",
                    "type": "application/atom+xml"
                },
                {
                    "href": "http://www.blogger.com/feeds/1176949257541686127/posts/default/7329842243506396609",
                    "rel": "self",
                    "type": "application/atom+xml"
                },
                {
                    "href": "http://security.googleblog.com/2023/03/osv-and-vulnerability-life-cycle.html",
                    "rel": "alternate",
                    "title": "OSV and the Vulnerability Life Cycle",
                    "type": "text/html"
                }
            ],
            "authors": [
                {
                    "name": "Google",
                    "href": "http://www.blogger.com/profile/11822708545141062574",
                    "email": "noreply@blogger.com"
                }
            ],
            "author_detail": {
                "name": "Google",
                "href": "http://www.blogger.com/profile/11822708545141062574",
                "email": "noreply@blogger.com"
            },
            "href": "http://www.blogger.com/profile/11822708545141062574",
            "author": "Google (noreply@blogger.com)",
            "gd_image": {
                "height": "16",
                "rel": "http://schemas.google.com/g/2005#thumbnail",
                "src": "https://img1.blogblog.com/img/b16-rounded.gif",
                "width": "16"
            },
            "thr_total": "0"
        },
        {
            "id": "tag:blogger.com,1999:blog-1176949257541686127.post-1446278575177326265",
            "guidislink": true,
            "link": "http://security.googleblog.com/2023/03/thank-you-and-goodbye-to-chrome-cleanup.html",
            "published": "2023-03-08T11:59:00.000-05:00",
            "published_parsed": [
                2023,
                3,
                8,
                16,
                59,
                0,
                2,
                67,
                0
            ],
            "updated": "2023-03-08T11:59:13.746-05:00",
            "updated_parsed": [
                2023,
                3,
                8,
                16,
                59,
                13,
                2,
                67,
                0
            ],
            "tags": [
                {
                    "term": "chrome",
                    "scheme": "http://www.blogger.com/atom/ns#",
                    "label": null
                },
                {
                    "term": "chrome security",
                    "scheme": "http://www.blogger.com/atom/ns#",
                    "label": null
                }
            ],
            "title": "Thank you and goodbye to the Chrome Cleanup Tool",
            "title_detail": {
                "type": "text/plain",
                "language": null,
                "base": "http://feeds.feedburner.com/GoogleOnlineSecurityBlog",
                "value": "Thank you and goodbye to the Chrome Cleanup Tool"
            },
            "content": [
                {
                    "type": "text/html",
                    "language": null,
                    "base": "http://feeds.feedburner.com/GoogleOnlineSecurityBlog",
                    "value": "<span class=\"byline-author\">Posted by Jasika Bawa, Chrome Security Team </span> <p>Starting in Chrome 111 we will begin to turn down the Chrome Cleanup Tool, an application distributed to Chrome users on Windows to help find and remove unwanted software (UwS). </p><h2>Origin story</h2>  <p>The Chrome Cleanup Tool was introduced in 2015 to help users recover from unexpected settings changes, and to detect and remove unwanted software. To date, it has performed more than 80 million cleanups, helping to pave the way for a cleaner, safer web. </p><h2>A changing landscape</h2>  <p>In recent years, several factors have led us to reevaluate the need for this application to keep Chrome users on Windows safe.  </p><p>First, the user perspective \u2013 Chrome user complaints about UwS have continued to fall over the years, averaging out to around 3% of total complaints in the past year.  Commensurate with this, we have observed a steady decline in UwS findings on users' machines. For example, last month just 0.06% of Chrome Cleanup Tool scans run by users detected known UwS. </p><p>Next, several positive changes in the platform ecosystem have contributed to a more proactive safety stance than a reactive one. For example, <a href=\"https://safebrowsing.google.com/\">Google Safe Browsing</a> as well as antivirus software both block file-based UwS more effectively now, which was originally the goal of the Chrome Cleanup Tool. Where file-based UwS migrated over to extensions, our substantial investments in the Chrome Web Store <a href=\"https://developer.chrome.com/docs/webstore/review-process/\">review process</a> have helped catch malicious extensions that violate the Chrome Web Store's policies. </p><p>Finally, we've observed changing trends in the malware space with techniques such as <a href=\"https://blog.google/threat-analysis-group/phishing-campaign-targets-youtube-creators-cookie-theft-malware/\">Cookie Theft</a> on the rise \u2013 as such, we've doubled down on defenses against such malware via a variety of improvements including hardened authentication workflows and advanced heuristics for blocking phishing and social engineering emails, malware landing pages, and downloads.  </p><h2>What to expect</h2>  <p>Starting in Chrome 111, users will no longer be able to request a Chrome Cleanup Tool scan through Safety Check or leverage the \"Reset settings and cleanup\" option offered in chrome://settings on Windows. Chrome will also remove the component that periodically scans Windows machines and prompts users for cleanup should it find anything suspicious. </p><p>Even without the Chrome Cleanup Tool, users are automatically protected by <a href=\"https://support.google.com/chrome/answer/9890866?hl=en&amp;co=GENIE.Platform%3DDesktop&amp;oco=0\">Safe Browsing in Chrome</a>. Users also have the option to turn on <a href=\"https://security.googleblog.com/2022/12/enhanced-protection-strongest-level-of.html\">Enhanced protection</a> by navigating to chrome://settings/security \u2013 this mode substantially increases protection from dangerous websites and downloads by sharing real-time data with Safe Browsing. </p><p>While we'll miss the Chrome Cleanup Tool, we wanted to take this opportunity to acknowledge its role in combating UwS for the past 8 years. We'll continue to monitor user feedback and trends in the malware ecosystem, and when adversaries adapt their techniques again \u2013 which they will \u2013\u00a0we'll be at the ready. </p><p>As always, please feel free to send us <a href=\"https://bugs.chromium.org/p/chromium/issues/list\">feedback</a> or find us on Twitter <a href=\"https://twitter.com/googlechrome\">@googlechrome</a>. </p>"
                }
            ],
            "summary": "<span class=\"byline-author\">Posted by Jasika Bawa, Chrome Security Team </span> <p>Starting in Chrome 111 we will begin to turn down the Chrome Cleanup Tool, an application distributed to Chrome users on Windows to help find and remove unwanted software (UwS). </p><h2>Origin story</h2>  <p>The Chrome Cleanup Tool was introduced in 2015 to help users recover from unexpected settings changes, and to detect and remove unwanted software. To date, it has performed more than 80 million cleanups, helping to pave the way for a cleaner, safer web. </p><h2>A changing landscape</h2>  <p>In recent years, several factors have led us to reevaluate the need for this application to keep Chrome users on Windows safe.  </p><p>First, the user perspective \u2013 Chrome user complaints about UwS have continued to fall over the years, averaging out to around 3% of total complaints in the past year.  Commensurate with this, we have observed a steady decline in UwS findings on users' machines. For example, last month just 0.06% of Chrome Cleanup Tool scans run by users detected known UwS. </p><p>Next, several positive changes in the platform ecosystem have contributed to a more proactive safety stance than a reactive one. For example, <a href=\"https://safebrowsing.google.com/\">Google Safe Browsing</a> as well as antivirus software both block file-based UwS more effectively now, which was originally the goal of the Chrome Cleanup Tool. Where file-based UwS migrated over to extensions, our substantial investments in the Chrome Web Store <a href=\"https://developer.chrome.com/docs/webstore/review-process/\">review process</a> have helped catch malicious extensions that violate the Chrome Web Store's policies. </p><p>Finally, we've observed changing trends in the malware space with techniques such as <a href=\"https://blog.google/threat-analysis-group/phishing-campaign-targets-youtube-creators-cookie-theft-malware/\">Cookie Theft</a> on the rise \u2013 as such, we've doubled down on defenses against such malware via a variety of improvements including hardened authentication workflows and advanced heuristics for blocking phishing and social engineering emails, malware landing pages, and downloads.  </p><h2>What to expect</h2>  <p>Starting in Chrome 111, users will no longer be able to request a Chrome Cleanup Tool scan through Safety Check or leverage the \"Reset settings and cleanup\" option offered in chrome://settings on Windows. Chrome will also remove the component that periodically scans Windows machines and prompts users for cleanup should it find anything suspicious. </p><p>Even without the Chrome Cleanup Tool, users are automatically protected by <a href=\"https://support.google.com/chrome/answer/9890866?hl=en&amp;co=GENIE.Platform%3DDesktop&amp;oco=0\">Safe Browsing in Chrome</a>. Users also have the option to turn on <a href=\"https://security.googleblog.com/2022/12/enhanced-protection-strongest-level-of.html\">Enhanced protection</a> by navigating to chrome://settings/security \u2013 this mode substantially increases protection from dangerous websites and downloads by sharing real-time data with Safe Browsing. </p><p>While we'll miss the Chrome Cleanup Tool, we wanted to take this opportunity to acknowledge its role in combating UwS for the past 8 years. We'll continue to monitor user feedback and trends in the malware ecosystem, and when adversaries adapt their techniques again \u2013 which they will \u2013\u00a0we'll be at the ready. </p><p>As always, please feel free to send us <a href=\"https://bugs.chromium.org/p/chromium/issues/list\">feedback</a> or find us on Twitter <a href=\"https://twitter.com/googlechrome\">@googlechrome</a>. </p>",
            "links": [
                {
                    "href": "http://security.googleblog.com/feeds/1446278575177326265/comments/default",
                    "rel": "replies",
                    "title": "Post Comments",
                    "type": "application/atom+xml"
                },
                {
                    "href": "http://www.blogger.com/comment.g?blogID=1176949257541686127&postID=1446278575177326265&isPopup=true",
                    "rel": "replies",
                    "title": "0 Comments",
                    "type": "text/html"
                },
                {
                    "href": "http://www.blogger.com/feeds/1176949257541686127/posts/default/1446278575177326265",
                    "rel": "edit",
                    "type": "application/atom+xml"
                },
                {
                    "href": "http://www.blogger.com/feeds/1176949257541686127/posts/default/1446278575177326265",
                    "rel": "self",
                    "type": "application/atom+xml"
                },
                {
                    "href": "http://security.googleblog.com/2023/03/thank-you-and-goodbye-to-chrome-cleanup.html",
                    "rel": "alternate",
                    "title": "Thank you and goodbye to the Chrome Cleanup Tool",
                    "type": "text/html"
                }
            ],
            "authors": [
                {
                    "name": "Edward Fernandez",
                    "href": "http://www.blogger.com/profile/03784424747198152685",
                    "email": "noreply@blogger.com"
                }
            ],
            "author_detail": {
                "name": "Edward Fernandez",
                "href": "http://www.blogger.com/profile/03784424747198152685",
                "email": "noreply@blogger.com"
            },
            "href": "http://www.blogger.com/profile/03784424747198152685",
            "author": "Edward Fernandez (noreply@blogger.com)",
            "gd_image": {
                "height": "16",
                "rel": "http://schemas.google.com/g/2005#thumbnail",
                "src": "https://img1.blogblog.com/img/b16-rounded.gif",
                "width": "16"
            },
            "thr_total": "0"
        },
        {
            "id": "tag:blogger.com,1999:blog-1176949257541686127.post-4025163291752105758",
            "guidislink": true,
            "link": "http://security.googleblog.com/2023/03/google-trust-services-now-offers-tls.html",
            "published": "2023-03-02T12:26:00.006-05:00",
            "published_parsed": [
                2023,
                3,
                2,
                17,
                26,
                0,
                3,
                61,
                0
            ],
            "updated": "2023-03-02T12:42:15.543-05:00",
            "updated_parsed": [
                2023,
                3,
                2,
                17,
                42,
                15,
                3,
                61,
                0
            ],
            "title": "Google Trust Services now offers TLS certificates for Google Domains customers",
            "title_detail": {
                "type": "text/plain",
                "language": null,
                "base": "http://feeds.feedburner.com/GoogleOnlineSecurityBlog",
                "value": "Google Trust Services now offers TLS certificates for Google Domains customers"
            },
            "content": [
                {
                    "type": "text/html",
                    "language": null,
                    "base": "http://feeds.feedburner.com/GoogleOnlineSecurityBlog",
                    "value": "<span class=\"byline-author\">Andy Warner, Google Trust Services, and Carl Krauss, Product Manager, Google Domains</span><div><br /></div><div><div><br /></div><div>We\u2019re excited to announce changes that make getting <a href=\"https://pki.goog/\">Google Trust Services </a>TLS certificates easier for Google Domains customers. With this integration, all Google Domains customers will be able to acquire public certificates for their websites at no additional cost, whether the site runs on a Google service or uses another provider. Additionally, Google Domains is now making <a href=\"https://domains.google/learn/gts-acme\">an API available</a>&nbsp;to allow for DNS-01 challenges with Google Domains DNS servers to issue and renew certificates automatically.</div><div><br /></div><div><br /></div><div><br /></div><div>Like the existing <a href=\"https://cloud.google.com/blog/products/identity-security/introducing-general-availability-of-google-cloud-certificate-manager\">Google Cloud</a>&nbsp;integration, Automatic Certificate Management Environment (<a href=\"https://datatracker.ietf.org/doc/html/rfc8555\">ACME</a>) protocol is used to enable seamless automatic lifecycle management of TLS certificates.&nbsp;</div><div><br /></div><div><br /></div><div><br /></div><div>These certificates are issued by the same Certificate Authority (CA) Google uses for its own sites, so they are widely supported across the entire spectrum of devices used to access your services.</div><div><br /></div><div><br /></div><div><br /></div><h3 style=\"text-align: left;\">How do I use it?</h3><div><br /></div><div><br /></div><div>Using ACME ensures your certificates are renewed automatically and many hosting services already support ACME. If you're running your own web servers / services, there are ACME clients that integrate easily with common servers. To use this feature, you will need an API key called an <a href=\"https://tools.ietf.org/html/rfc8555#section-7.3.4\">External Account Binding</a>&nbsp;key. This enables your certificate requests to be associated with your Google Domains account. You can get an API key by visiting <a href=\"https://domains.google.com/\">Google Domains</a> and navigating to the Security page for your domain. There you\u2019ll see a section for Google Trust Services where you can get your EAB Key.</div><div><br /></div><div><br /></div><div><span id=\"docs-internal-guid-3ea454f2-7fff-d7f1-b5ae-6411b6a5db41\"><span style=\"font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\"><span style=\"border: none; display: inline-block; height: 337px; overflow: hidden; width: 624px;\"><img height=\"337\" src=\"https://lh5.googleusercontent.com/E55DsekQeTDNVTgv3LIUUv_WS1xnp6PsjDI4qDruYRt3xCBqKL157NZVNDU2ZVdGwCZ0SmBZZXFeO-XLKqAxS9E0ijBysV52zGIUI8jw4uNAsV1JgK0-3upl7vY6Wn7FmQ8GQahyFh0EmUJrQj70GwQ\" style=\"margin-left: 0px; margin-top: 0px;\" width=\"624\" /></span></span></span></div><div><br /></div><div><span style=\"font-size: x-small;\"><i>Example of EAB Credentials in Google Domains</i></span></div><div><br /></div><div><br /></div><div><br /></div><div>As an example, with the popular <u>Certbot ACME</u> client, the configuration to register an account looks like:</div><div><br /></div><div><br /></div><div><span id=\"docs-internal-guid-4cc18f0f-7fff-b263-49bb-c3bec4eb5b77\"><span>certbot register --email &lt;CONTACT_EMAIL&gt; --no-eff-email --server \"https://dv.acme-v02.api.pki.goog/directory\"&nbsp; --eab-kid \"&lt;EAB_KEY_ID&gt;\" --eab-hmac-key \"&lt;EAB_HMAC_KEY&gt;\"</span></span></div><div><br /></div><div><br /></div><div><br /></div><div><br /></div><div>The EAB_KEY_ID and EAB_HMAC_KEY are both provided on your Google Domains security page.</div><div><br /></div><div><br /></div><div><br /></div><div>After the account is created, you may issue certificates by running:</div><div><br /></div><div><span id=\"docs-internal-guid-9cf7260f-7fff-db4f-7b17-ef6cbad8035d\"><span>certbot certonly -d &lt;domain.com&gt; --server \"https://dv.acme-v02.api.pki.goog/directory\" --standalone</span></span></div><div><br /></div><div><br /></div><div><br /></div><div>Then follow the prompts to complete validation and download your certificate. If you need additional information please visit the <a href=\"https://support.google.com/domains/answer/7630973\">Google Domains help center</a>.</div><div><br /></div><h3 style=\"text-align: left;\"><br /></h3><h3 style=\"text-align: left;\"><br /></h3><h3 style=\"text-align: left;\">Google Domains and ACME DNS-01</h3><div><br /></div><div><br /></div><div><br /></div><div>ACME uses challenges to validate domain control before issuing certificates. The <a href=\"https://www.rfc-editor.org/rfc/rfc8555.html#section-8.4\">ACME DNS-01</a> challenge can be an efficient way for users to automate the validation process and integrate with existing websites and web hosting services.</div><div><br /></div><div><br /></div><div><br /></div><div>Google Domains now provides an API for ACME DNS-01 challenges that helps streamline the process for users to authenticate domain control quickly and securely. This is now offered in some popular ACME clients like <a href=\"https://certbot.eff.org/\">Certbot</a> via <a href=\"https://github.com/aaomidi/certbot-dns-google-domains\">this plugin</a>, <a href=\"https://caddyserver.com/\">Caddy</a>, <a href=\"https://certifytheweb.com/\">Certify The Web</a>, <a href=\"https://poshac.me/\">Posh-ACME</a>. You can find additional information on the <a href=\"https://domains.google/learn/gts-acme\">Google Domains site</a>.</div><div><br /></div><div><br /></div><div><br /></div><div><br /></div><div><br /></div><div><span id=\"docs-internal-guid-9fde505e-7fff-d972-ce76-339f5743368f\"><span style=\"color: #434343; font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\"><span style=\"border: none; display: inline-block; height: 337px; overflow: hidden; width: 624px;\"><img height=\"337\" src=\"https://lh4.googleusercontent.com/yyVw4GcbfKacG3XstiUF7g2QhgqKRfiiWVrfuho9jkUxdmjrbdUPCeOuFPEN03ixzioBhif5F0rPs4qTVd8bFUD8e6vl7irm1_VZFrABLImO-cRDzRK36aqPe5DVi4g2iGoUtz6SD9OYoNGBPT7Ljhc\" style=\"margin-left: 0px; margin-top: 0px;\" width=\"624\" /></span></span></span></div><div><br /></div><div><span style=\"font-size: x-small;\"><i>Example of DNS API Access Token in Google Domains</i></span></div><div><br /></div><div><br /></div><div><br /></div><div>To set up automatic certificate provisioning with ACME and DNS-01, follow these steps:</div><div><br /></div><div><br /></div><div><br /></div><div><ol style=\"text-align: left;\"><li>Sign in to <a href=\"https://domains.google.com/registrar\">Google Domains</a>.</li><li>Select the domain that you want to use.</li><li>At the top left, click \u201cMenu\u201d and select \u201cSecurity\u201d.</li><li>Under section \u201cACME DNS API\u201d, click \u201cCreate token\u201d.</li><li>A dialog box will appear with an \u201cAPI Token\u201d. This is the API Token you will need to enter into your ACME client. You will need to copy this value and can do so by clicking the copy button next to the API Token.&nbsp;</li><ul><li><b>NOTE:</b>&nbsp;This value is only shown <b>once</b>. After the dialog box is closed you &nbsp;will not be able to see this API Token again. Store this token in a safe place, since anyone that has it&nbsp;gains the ability to modify some DNS TXT records for your Domain.&nbsp;&nbsp;</li><li>If you did not save this value before closing the dialog box, you can easily delete and create a new<span>&nbsp;</span>API token.</li><li>A limit of 10 API tokens per domain can exist at a time.&nbsp;</li></ul><li>Once the dialog box is closed you will be able to see in the list that the token has been created. You can delete this token at any time to revoke its access.&nbsp;</li><li>The API token can now be used in an ACME client that supports the Google Domains ACME DNS API. Each ACME client differs slightly on how to specify this API Token so you will need to read the documentation on your desired ACME client.&nbsp;</li></ol></div></div><div><div><br /></div><div><br /></div><div><br /></div><div><br /></div><div>Regardless of which ACME client you use, Google Domains and Google Trust Services are excited to offer a reliable option for no-cost TLS certificates. This continues the mission of helping build a safer internet by providing a transparent, trusted, and reliable Certificate Authority.</div><div><br /></div></div>"
                }
            ],
            "summary": "<span class=\"byline-author\">Andy Warner, Google Trust Services, and Carl Krauss, Product Manager, Google Domains</span><div><br /></div><div><div><br /></div><div>We\u2019re excited to announce changes that make getting <a href=\"https://pki.goog/\">Google Trust Services </a>TLS certificates easier for Google Domains customers. With this integration, all Google Domains customers will be able to acquire public certificates for their websites at no additional cost, whether the site runs on a Google service or uses another provider. Additionally, Google Domains is now making <a href=\"https://domains.google/learn/gts-acme\">an API available</a>&nbsp;to allow for DNS-01 challenges with Google Domains DNS servers to issue and renew certificates automatically.</div><div><br /></div><div><br /></div><div><br /></div><div>Like the existing <a href=\"https://cloud.google.com/blog/products/identity-security/introducing-general-availability-of-google-cloud-certificate-manager\">Google Cloud</a>&nbsp;integration, Automatic Certificate Management Environment (<a href=\"https://datatracker.ietf.org/doc/html/rfc8555\">ACME</a>) protocol is used to enable seamless automatic lifecycle management of TLS certificates.&nbsp;</div><div><br /></div><div><br /></div><div><br /></div><div>These certificates are issued by the same Certificate Authority (CA) Google uses for its own sites, so they are widely supported across the entire spectrum of devices used to access your services.</div><div><br /></div><div><br /></div><div><br /></div><h3 style=\"text-align: left;\">How do I use it?</h3><div><br /></div><div><br /></div><div>Using ACME ensures your certificates are renewed automatically and many hosting services already support ACME. If you're running your own web servers / services, there are ACME clients that integrate easily with common servers. To use this feature, you will need an API key called an <a href=\"https://tools.ietf.org/html/rfc8555#section-7.3.4\">External Account Binding</a>&nbsp;key. This enables your certificate requests to be associated with your Google Domains account. You can get an API key by visiting <a href=\"https://domains.google.com/\">Google Domains</a> and navigating to the Security page for your domain. There you\u2019ll see a section for Google Trust Services where you can get your EAB Key.</div><div><br /></div><div><br /></div><div><span id=\"docs-internal-guid-3ea454f2-7fff-d7f1-b5ae-6411b6a5db41\"><span style=\"font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\"><span style=\"border: none; display: inline-block; height: 337px; overflow: hidden; width: 624px;\"><img height=\"337\" src=\"https://lh5.googleusercontent.com/E55DsekQeTDNVTgv3LIUUv_WS1xnp6PsjDI4qDruYRt3xCBqKL157NZVNDU2ZVdGwCZ0SmBZZXFeO-XLKqAxS9E0ijBysV52zGIUI8jw4uNAsV1JgK0-3upl7vY6Wn7FmQ8GQahyFh0EmUJrQj70GwQ\" style=\"margin-left: 0px; margin-top: 0px;\" width=\"624\" /></span></span></span></div><div><br /></div><div><span style=\"font-size: x-small;\"><i>Example of EAB Credentials in Google Domains</i></span></div><div><br /></div><div><br /></div><div><br /></div><div>As an example, with the popular <u>Certbot ACME</u> client, the configuration to register an account looks like:</div><div><br /></div><div><br /></div><div><span id=\"docs-internal-guid-4cc18f0f-7fff-b263-49bb-c3bec4eb5b77\"><span>certbot register --email &lt;CONTACT_EMAIL&gt; --no-eff-email --server \"https://dv.acme-v02.api.pki.goog/directory\"&nbsp; --eab-kid \"&lt;EAB_KEY_ID&gt;\" --eab-hmac-key \"&lt;EAB_HMAC_KEY&gt;\"</span></span></div><div><br /></div><div><br /></div><div><br /></div><div><br /></div><div>The EAB_KEY_ID and EAB_HMAC_KEY are both provided on your Google Domains security page.</div><div><br /></div><div><br /></div><div><br /></div><div>After the account is created, you may issue certificates by running:</div><div><br /></div><div><span id=\"docs-internal-guid-9cf7260f-7fff-db4f-7b17-ef6cbad8035d\"><span>certbot certonly -d &lt;domain.com&gt; --server \"https://dv.acme-v02.api.pki.goog/directory\" --standalone</span></span></div><div><br /></div><div><br /></div><div><br /></div><div>Then follow the prompts to complete validation and download your certificate. If you need additional information please visit the <a href=\"https://support.google.com/domains/answer/7630973\">Google Domains help center</a>.</div><div><br /></div><h3 style=\"text-align: left;\"><br /></h3><h3 style=\"text-align: left;\"><br /></h3><h3 style=\"text-align: left;\">Google Domains and ACME DNS-01</h3><div><br /></div><div><br /></div><div><br /></div><div>ACME uses challenges to validate domain control before issuing certificates. The <a href=\"https://www.rfc-editor.org/rfc/rfc8555.html#section-8.4\">ACME DNS-01</a> challenge can be an efficient way for users to automate the validation process and integrate with existing websites and web hosting services.</div><div><br /></div><div><br /></div><div><br /></div><div>Google Domains now provides an API for ACME DNS-01 challenges that helps streamline the process for users to authenticate domain control quickly and securely. This is now offered in some popular ACME clients like <a href=\"https://certbot.eff.org/\">Certbot</a> via <a href=\"https://github.com/aaomidi/certbot-dns-google-domains\">this plugin</a>, <a href=\"https://caddyserver.com/\">Caddy</a>, <a href=\"https://certifytheweb.com/\">Certify The Web</a>, <a href=\"https://poshac.me/\">Posh-ACME</a>. You can find additional information on the <a href=\"https://domains.google/learn/gts-acme\">Google Domains site</a>.</div><div><br /></div><div><br /></div><div><br /></div><div><br /></div><div><br /></div><div><span id=\"docs-internal-guid-9fde505e-7fff-d972-ce76-339f5743368f\"><span style=\"color: #434343; font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\"><span style=\"border: none; display: inline-block; height: 337px; overflow: hidden; width: 624px;\"><img height=\"337\" src=\"https://lh4.googleusercontent.com/yyVw4GcbfKacG3XstiUF7g2QhgqKRfiiWVrfuho9jkUxdmjrbdUPCeOuFPEN03ixzioBhif5F0rPs4qTVd8bFUD8e6vl7irm1_VZFrABLImO-cRDzRK36aqPe5DVi4g2iGoUtz6SD9OYoNGBPT7Ljhc\" style=\"margin-left: 0px; margin-top: 0px;\" width=\"624\" /></span></span></span></div><div><br /></div><div><span style=\"font-size: x-small;\"><i>Example of DNS API Access Token in Google Domains</i></span></div><div><br /></div><div><br /></div><div><br /></div><div>To set up automatic certificate provisioning with ACME and DNS-01, follow these steps:</div><div><br /></div><div><br /></div><div><br /></div><div><ol style=\"text-align: left;\"><li>Sign in to <a href=\"https://domains.google.com/registrar\">Google Domains</a>.</li><li>Select the domain that you want to use.</li><li>At the top left, click \u201cMenu\u201d and select \u201cSecurity\u201d.</li><li>Under section \u201cACME DNS API\u201d, click \u201cCreate token\u201d.</li><li>A dialog box will appear with an \u201cAPI Token\u201d. This is the API Token you will need to enter into your ACME client. You will need to copy this value and can do so by clicking the copy button next to the API Token.&nbsp;</li><ul><li><b>NOTE:</b>&nbsp;This value is only shown <b>once</b>. After the dialog box is closed you &nbsp;will not be able to see this API Token again. Store this token in a safe place, since anyone that has it&nbsp;gains the ability to modify some DNS TXT records for your Domain.&nbsp;&nbsp;</li><li>If you did not save this value before closing the dialog box, you can easily delete and create a new<span>&nbsp;</span>API token.</li><li>A limit of 10 API tokens per domain can exist at a time.&nbsp;</li></ul><li>Once the dialog box is closed you will be able to see in the list that the token has been created. You can delete this token at any time to revoke its access.&nbsp;</li><li>The API token can now be used in an ACME client that supports the Google Domains ACME DNS API. Each ACME client differs slightly on how to specify this API Token so you will need to read the documentation on your desired ACME client.&nbsp;</li></ol></div></div><div><div><br /></div><div><br /></div><div><br /></div><div><br /></div><div>Regardless of which ACME client you use, Google Domains and Google Trust Services are excited to offer a reliable option for no-cost TLS certificates. This continues the mission of helping build a safer internet by providing a transparent, trusted, and reliable Certificate Authority.</div><div><br /></div></div>",
            "links": [
                {
                    "href": "http://security.googleblog.com/feeds/4025163291752105758/comments/default",
                    "rel": "replies",
                    "title": "Post Comments",
                    "type": "application/atom+xml"
                },
                {
                    "href": "http://www.blogger.com/comment.g?blogID=1176949257541686127&postID=4025163291752105758&isPopup=true",
                    "rel": "replies",
                    "title": "0 Comments",
                    "type": "text/html"
                },
                {
                    "href": "http://www.blogger.com/feeds/1176949257541686127/posts/default/4025163291752105758",
                    "rel": "edit",
                    "type": "application/atom+xml"
                },
                {
                    "href": "http://www.blogger.com/feeds/1176949257541686127/posts/default/4025163291752105758",
                    "rel": "self",
                    "type": "application/atom+xml"
                },
                {
                    "href": "http://security.googleblog.com/2023/03/google-trust-services-now-offers-tls.html",
                    "rel": "alternate",
                    "title": "Google Trust Services now offers TLS certificates for Google Domains customers",
                    "type": "text/html"
                }
            ],
            "authors": [
                {
                    "name": "Kimberly Samra",
                    "href": "http://www.blogger.com/profile/17209446531010386292",
                    "email": "noreply@blogger.com"
                }
            ],
            "author_detail": {
                "name": "Kimberly Samra",
                "href": "http://www.blogger.com/profile/17209446531010386292",
                "email": "noreply@blogger.com"
            },
            "href": "",
            "author": "Kimberly Samra (noreply@blogger.com)",
            "gd_image": {
                "height": "16",
                "rel": "http://schemas.google.com/g/2005#thumbnail",
                "src": "https://img1.blogblog.com/img/b16-rounded.gif",
                "width": "16"
            },
            "media_thumbnail": [
                {
                    "height": "72",
                    "url": "https://lh5.googleusercontent.com/E55DsekQeTDNVTgv3LIUUv_WS1xnp6PsjDI4qDruYRt3xCBqKL157NZVNDU2ZVdGwCZ0SmBZZXFeO-XLKqAxS9E0ijBysV52zGIUI8jw4uNAsV1JgK0-3upl7vY6Wn7FmQ8GQahyFh0EmUJrQj70GwQ=s72-c",
                    "width": "72"
                }
            ],
            "thr_total": "0"
        },
        {
            "id": "tag:blogger.com,1999:blog-1176949257541686127.post-96413614321425251",
            "guidislink": true,
            "link": "http://security.googleblog.com/2023/03/8-ways-to-secure-chrome-browser-for.html",
            "published": "2023-03-01T11:59:00.001-05:00",
            "published_parsed": [
                2023,
                3,
                1,
                16,
                59,
                0,
                2,
                60,
                0
            ],
            "updated": "2023-03-01T13:55:03.059-05:00",
            "updated_parsed": [
                2023,
                3,
                1,
                18,
                55,
                3,
                2,
                60,
                0
            ],
            "tags": [
                {
                    "term": "chrome security",
                    "scheme": "http://www.blogger.com/atom/ns#",
                    "label": null
                }
            ],
            "title": "8 ways to secure Chrome browser for Google Workspace users",
            "title_detail": {
                "type": "text/plain",
                "language": null,
                "base": "http://feeds.feedburner.com/GoogleOnlineSecurityBlog",
                "value": "8 ways to secure Chrome browser for Google Workspace users"
            },
            "content": [
                {
                    "type": "text/html",
                    "language": null,
                    "base": "http://feeds.feedburner.com/GoogleOnlineSecurityBlog",
                    "value": "<span class=\"byline-author\">Posted by Kiran Nair, Product Manager, Chrome Browser</span> <p>   <h2>1. Bring Chrome under Cloud Management</h2> <p>Your journey towards keeping your Google Workspace users and data safe, starts with bringing your Chrome browsers under Cloud Management at no additional cost. <a href=\"https://chromeenterprise.google/browser/management/\">Chrome Browser Cloud Management</a> is a single destination for applying Chrome Browser policies and security controls across Windows, Mac, Linux, iOS and Android. You also get deep visibility into your browser fleet including which browsers are out of date, which extensions your users are using and bringing insight to potential security blindspots in your enterprise. </p><p>Managing Chrome from the cloud allows Google Workspace admins to enforce <a href=\"https://support.google.com/chrome/a/answer/9116814?hl=en\">enterprise protections and policies</a> to the whole browser on fully managed devices, which  no longer requires a user to sign into Chrome to have policies enforced. You can also enforce policies that apply when your managed users sign in to Chrome browser on any Windows, Mac, or Linux computer (via <a href=\"https://support.google.com/chrome/a/answer/9025411?hl=en\">Chrome Browser user-level management</a>) --not just on corporate managed devices.  </p>  <div class=\"separator\" style=\"clear: both;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiMCFszBKrbzGDfoDPR3Tl8jczlO7mwUqlWhvQhMLPdYGw-aUToynhnYhyELn1BJ3IsQzLDbQfp7qo9p_j9LHzv9E5u1-Pa6E6G_Tq2KtrLIDiIpp1Jogpm0ISEphvnMC77d9QjX3UrW-056DhZOAodlks1QQbxTBPfJO1zVeHwwZgPiJoYL3GjGES-vw/s1600/Blog%201.png\" style=\"display: block; padding: 1em 0; text-align: center;\"><img alt=\"\" border=\"0\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiMCFszBKrbzGDfoDPR3Tl8jczlO7mwUqlWhvQhMLPdYGw-aUToynhnYhyELn1BJ3IsQzLDbQfp7qo9p_j9LHzv9E5u1-Pa6E6G_Tq2KtrLIDiIpp1Jogpm0ISEphvnMC77d9QjX3UrW-056DhZOAodlks1QQbxTBPfJO1zVeHwwZgPiJoYL3GjGES-vw/s1600/Blog%201.png\" /></a></div><p>This enables you to keep your corporate data and users safe, whether they are accessing work resources from fully managed, personal, or unmanaged devices used by your vendors. </p><p>Getting started is easy. If your organization hasn\u2019t already, <a href=\"https://enterprise.google.com/signup/chrome-browser/email?origin=cbcm&amp;source=browsermgmt&amp;_ga=2.9391413.143876897.1676576075-1645908088.1647368605\">c</a>heck out <a href=\"https://support.google.com/chrome/a/answer/9301891?hl=en&amp;ref_topic=9301744\">this guide for steps on how to enroll your devices. </a></p><h2>2. Enforce built-in protections against Phishing, Ransomware & Malware</h2>  <p>Chrome uses Google\u2019s Safe Browsing technology to help protect billions of devices every day by showing warnings to users when they attempt to navigate to dangerous sites or download dangerous files. Safe Browsing is enabled by default for all users when they download Chrome. As an administrator, you can prevent your users from disabling Safe Browsing by enforcing the <a href=\"https://chromeenterprise.google/policies/#SafeBrowsingProtectionLevel\">SafeBrowsingProtectionLevel</a> policy.  </p><p> <div class=\"separator\" style=\"clear: both;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEi4XaeYJAnWjo55-pY5ilqhLYcFp2fiAnCdM-K7Lx9YzCiTXGWDLytcVlDPF2kJzonzv_3uMZ2Qs2kz5J-kf9UZZ3s02CI7kqEkP-Tj3Y6QJfcRUWJPzwjhnr2wQVaVbYkQ9o0c7eoqBQAUxNe_E1B4UvrMxXWeiWNhDwg9EFXwKmfnLQjwEsVgmArRwA/s1600/Blog%202.png\" style=\"display: block; padding: 1em 0; text-align: center;\"><img alt=\"\" border=\"0\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEi4XaeYJAnWjo55-pY5ilqhLYcFp2fiAnCdM-K7Lx9YzCiTXGWDLytcVlDPF2kJzonzv_3uMZ2Qs2kz5J-kf9UZZ3s02CI7kqEkP-Tj3Y6QJfcRUWJPzwjhnr2wQVaVbYkQ9o0c7eoqBQAUxNe_E1B4UvrMxXWeiWNhDwg9EFXwKmfnLQjwEsVgmArRwA/s1600/Blog%202.png\" /></a></div><p>Over the past few years, we\u2019ve seen threats on the web becoming increasingly sophisticated. Turning on<a href=\"https://security.googleblog.com/2022/12/enhanced-protection-strongest-level-of.html\"> Enhanced Safe Browsing</a> will substantially increase protection from dangerous websites, malicious downloads and extensions. For the best protections against web based attacks Google has to offer, enforce Enhanced Safe Browsing for your users. </p><h2>3. Enable Enterprise Credential Protections in Chrome</h2>  <p>Enterprise password reuse introduces significant security risks. Quite often, employees reuse corporate credentials as personal logins and vice versa. Occasionally, employees even enter their corporate passwords into phishing websites. Reused employee logins give criminals easy paths to access corporate data.  </p><p><a href=\"https://support.google.com/chrome/a/answer/9696605?hl=en#\">Chrome Enterprise Password Reuse detection</a> helps enterprises avoid identity theft and employee and organizational data breaches by detecting when an employee enters their corporate credentials into any other website.  </p><p>Google Password Manager in Chrome also has a built-in <a href=\"https://security.googleblog.com/2019/12/better-password-protections-in-chrome.html\">Password Checkup</a> feature that alerts users when Google discovers a username and password has been exposed in a public data breach.  </p><p>Password alerts are surfaced in Audit Logs and Security Investigation Tool which helps admins create automated rules or take appropriate steps to mitigate this by asking users to reset their passwords. </p><h2>4. Gain insights into critical security events via Audit Logs, Google Security Center or your SIEM of choice</h2>  <p>IT teams can gain useful insights about potential security threats and events that your Google Workspace users are encountering when browsing  the web using Chrome. IT teams can  take preventive measures against threats through Security<a href=\"https://cloud.google.com/blog/products/chrome-enterprise/extending-chromes-security-insights-to-google-cloud-and-workspace-products\"> Reporting</a>. </p><p> <div class=\"separator\" style=\"clear: both;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiGnxyfNa43LnCft69rpyZHpv6BEvzkjRdYWw0pslw0Y7T8vt9XEvTwXKY-3Wk2iZa1ZkqkwiDxaz4il8Sp5x_MteMvQfql7wL9Pbv2uwXKFhfbmLKvEKL5SEmpsisoJczLW_u9WWc_IcGr4NIHDeYQWqwMdpSLZEr4IUAMHHAy8WuCG008qgIdX_1i4w/s1600/Blog%203.png\" style=\"display: block; padding: 1em 0; text-align: center;\"><img alt=\"\" border=\"0\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiGnxyfNa43LnCft69rpyZHpv6BEvzkjRdYWw0pslw0Y7T8vt9XEvTwXKY-3Wk2iZa1ZkqkwiDxaz4il8Sp5x_MteMvQfql7wL9Pbv2uwXKFhfbmLKvEKL5SEmpsisoJczLW_u9WWc_IcGr4NIHDeYQWqwMdpSLZEr4IUAMHHAy8WuCG008qgIdX_1i4w/s1600/Blog%203.png\" /></a></div> </p><p>In the Google Workspace Admin console, organizations can enroll their Chrome browser and get detailed information about their browser deployment. IT teams can also set policies, manage extensions, and more. The Chrome management policies can be set to work alongside any end user-based policies that may be in place.  </p><p>Once you\u2019ve enabled Security events reporting (pictured above), you can then view reporting events within <a href=\"https://support.google.com/a/answer/9393909\">audit logs</a>. Google Workspace Enterprise Plus or Education Plus users can use the <a href=\"https://support.google.com/a/answer/7575955?hl=en\">Workspace Security Investigation Tool</a> to identify, triage, and act on potential security threats. </p><p>As of today, Chrome can report on when users: </p><ul> <li>Navigate to a known malicious site.   <li>Download or upload files containing known malware.  <li>Reuse corporate passwords on non-approved sites.   <li>Change corporate passwords after reusing them on non-approved sites.  <li>Install extensions. </li></ul><p>In addition to Google Workspace, you can also export these events into other Google Cloud products, such as Google Cloud <a href=\"https://cloud.google.com/pubsub\">Pub/Sub</a>, <a href=\"https://cloud.google.com/solutions/security-information-event-management\">Chronicle</a>, or leading 3rd party products such as <a href=\"https://support.google.com/chrome/a/answer/12325467?hl=en&amp;ref_topic=9302422\">Splunk</a>, <a href=\"https://support.google.com/chrome/a/answer/12731018?hl=en&amp;ref_topic=9302422\">Crowdstrike</a> and PaloAlto Networks. </p><h2>5. Mitigate risk by keeping your browsers up to date with latest security updates</h2>  <p>Modern web browsers, like any other software, can have \"zero day\" vulnerabilities, which are undiscovered flaws in the software that can be exploited by attackers until they are identified and resolved. Fortunately, among all the browsers, Chrome is known to patch zero day vulnerabilities <a href=\"https://security.googleblog.com/2022/03/whats-up-with-in-wild-exploits-plus.html\">quickly</a>. However, to take advantage of this, the IT team has to ensure that all browsers within the browser environment are up-to-date. Our enterprise tools provide a smooth and seamless browser update process, enabling user productivity while maintaining optimal security. By leveraging these tools, businesses can ensure their users are safe and protected from potential security threats.    </p><ul> <li><a href=\"https://support.google.com/chrome/a/answer/9301421?hl=en\">Version Report</a>: Easily see all the versions of Chrome in your fleet across various operating systems in a daily report.   <li><a href=\"https://support.google.com/chrome/a/answer/7679871\">Force Auto Updates in Chrome</a>: Trigger updates to newer versions of Chrome as soon as they\u2019re available. Force users to relaunch Chrome to take updates more rapidly using enterprise policies. This keeps users on the latest version of Chrome, with the latest security fixes.  <li><a href=\"https://support.google.com/chrome/a/answer/9269998?hl=en\">Controlling legacy browser usage</a>: Some users continue to need access to old web applications that use plugins and ActiveX technology not supported by modern browsers. Legacy Browser Support functionality is integrated into Chrome, and reduces the time users spend with less secure browsers.  </li></ul><p> <h2>6. Ensure employees only use vetted extensions</h2> <p>Extensions pose a large security risk. Many extensions request powerful permissions that if misused, could lead to security breaches or data loss. However, due to strong end user demand, it\u2019s often not possible to fully block the installation of extensions.  </p><ul> <li><a href=\"https://support.google.com/chrome/a/answer/10836225?hl=en\">Apps & Extensions usage report</a>: Provides visibility into every Chrome extension that is installed across an enterprise\u2019s fleet. Admins can force install or block any extension across any segment of their fleet.  <li><a href=\"https://support.google.com/chrome/a/answer/10405494?hl=en\">Extensions workflow</a>: Admins can decide under which circumstances an extension install needs to be reviewed by IT. A review workflow in the Google Admin console makes it easy for admins to review and approve install requests for specific users requesting an extension, or for their broader fleet.  <li><a href=\"https://support.google.com/chrome/a/answer/9902456?hl=en\">Extensions details</a>: Admins can see additional details about an extension\u2019s permissions, and other relevant metadata. This info is surfaced in the Extensions list and Extensions workflow pages to make it easier for administrators to manage extensions. </li></ul><p> <h2>7. Ensure your Google Workspace resources are only accessed from Managed Chrome Browsers with protections enabled</h2>  <p>Context-Aware Access ensures only the right people, under the right conditions, access confidential information. Using Context-Aware Access, you can create granular access control policies for apps that access Workspace data based on attributes, such as user identity, location, device security status, and IP address. </p><p>To ensure that your Google Workspace resources are only accessed from managed Chrome browsers with protection enabled, you create custom access levels in Advanced mode, using <a href=\"https://cloud.google.com/access-context-manager/docs/custom-access-level-spec\">Common Expressions Language (CEL)</a>. Learn more about managed queries in this <a href=\"https://support.google.com/a/answer/11368990?hl=en&amp;ref_topic=9262521#zippy=%2Callow-access-to-devices-using-chrome-browser-with-security-requirements%2Callow-access-to-devices-using-chrome-browser-with-basic-security-requirements\">help center article</a>.  </p><h2>8. Enable BeyondCorp Enterprise Threat and Data Protections</h2> <div class=\"separator\" style=\"clear: both;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjlYXxy1p-YKBbOgZZTOLwKoBFG3FYql4m3SohOuMnKk0wFMQ_gLvFsSEaSK-5e0ywVTtpK0csIBdRBzTz2mcDX2g5RmrKx4F6oLDEsJ9rKHa4OcCb4_O6T6KN-3cHAp_bVUzGo5cPTBBfKNc51Ryvswp84UjOCWG7_j3qdojSBN4vBN2651r_rJeZ3_g/s1600/Screenshot%202023-03-01%208.40.49%20AM.png\" style=\"display: block; padding: 1em 0; text-align: center;\"><img alt=\"\" border=\"0\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjlYXxy1p-YKBbOgZZTOLwKoBFG3FYql4m3SohOuMnKk0wFMQ_gLvFsSEaSK-5e0ywVTtpK0csIBdRBzTz2mcDX2g5RmrKx4F6oLDEsJ9rKHa4OcCb4_O6T6KN-3cHAp_bVUzGo5cPTBBfKNc51Ryvswp84UjOCWG7_j3qdojSBN4vBN2651r_rJeZ3_g/s1600/Screenshot%202023-03-01%208.40.49%20AM.png\" /></a></div>For the organizations that want to take an even more proactive approach to data security, they can deploy <a href=\"https://cloud.google.com/beyondcorp-enterprise\">BeyondCorp Enterprise</a> to protect their information and enable data loss prevention (including control over upload, download, print, save, copy and paste), real-time phishing protection, malware deep scanning, and Zero Trust access to SaaS applications. Since BeyondCorp Enterprise is already built into Chrome, organizations can frictionlessly implement it without having to install additional agents. </p><p>Learn more about how Google supports today\u2019s workforce with secure enterprise browsing <a href=\"https://chromeenterprise.google/browser/security/\">here</a>. </p>"
                }
            ],
            "summary": "<span class=\"byline-author\">Posted by Kiran Nair, Product Manager, Chrome Browser</span> <p>   <h2>1. Bring Chrome under Cloud Management</h2> <p>Your journey towards keeping your Google Workspace users and data safe, starts with bringing your Chrome browsers under Cloud Management at no additional cost. <a href=\"https://chromeenterprise.google/browser/management/\">Chrome Browser Cloud Management</a> is a single destination for applying Chrome Browser policies and security controls across Windows, Mac, Linux, iOS and Android. You also get deep visibility into your browser fleet including which browsers are out of date, which extensions your users are using and bringing insight to potential security blindspots in your enterprise. </p><p>Managing Chrome from the cloud allows Google Workspace admins to enforce <a href=\"https://support.google.com/chrome/a/answer/9116814?hl=en\">enterprise protections and policies</a> to the whole browser on fully managed devices, which  no longer requires a user to sign into Chrome to have policies enforced. You can also enforce policies that apply when your managed users sign in to Chrome browser on any Windows, Mac, or Linux computer (via <a href=\"https://support.google.com/chrome/a/answer/9025411?hl=en\">Chrome Browser user-level management</a>) --not just on corporate managed devices.  </p>  <div class=\"separator\" style=\"clear: both;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiMCFszBKrbzGDfoDPR3Tl8jczlO7mwUqlWhvQhMLPdYGw-aUToynhnYhyELn1BJ3IsQzLDbQfp7qo9p_j9LHzv9E5u1-Pa6E6G_Tq2KtrLIDiIpp1Jogpm0ISEphvnMC77d9QjX3UrW-056DhZOAodlks1QQbxTBPfJO1zVeHwwZgPiJoYL3GjGES-vw/s1600/Blog%201.png\" style=\"display: block; padding: 1em 0; text-align: center;\"><img alt=\"\" border=\"0\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiMCFszBKrbzGDfoDPR3Tl8jczlO7mwUqlWhvQhMLPdYGw-aUToynhnYhyELn1BJ3IsQzLDbQfp7qo9p_j9LHzv9E5u1-Pa6E6G_Tq2KtrLIDiIpp1Jogpm0ISEphvnMC77d9QjX3UrW-056DhZOAodlks1QQbxTBPfJO1zVeHwwZgPiJoYL3GjGES-vw/s1600/Blog%201.png\" /></a></div><p>This enables you to keep your corporate data and users safe, whether they are accessing work resources from fully managed, personal, or unmanaged devices used by your vendors. </p><p>Getting started is easy. If your organization hasn\u2019t already, <a href=\"https://enterprise.google.com/signup/chrome-browser/email?origin=cbcm&amp;source=browsermgmt&amp;_ga=2.9391413.143876897.1676576075-1645908088.1647368605\">c</a>heck out <a href=\"https://support.google.com/chrome/a/answer/9301891?hl=en&amp;ref_topic=9301744\">this guide for steps on how to enroll your devices. </a></p><h2>2. Enforce built-in protections against Phishing, Ransomware & Malware</h2>  <p>Chrome uses Google\u2019s Safe Browsing technology to help protect billions of devices every day by showing warnings to users when they attempt to navigate to dangerous sites or download dangerous files. Safe Browsing is enabled by default for all users when they download Chrome. As an administrator, you can prevent your users from disabling Safe Browsing by enforcing the <a href=\"https://chromeenterprise.google/policies/#SafeBrowsingProtectionLevel\">SafeBrowsingProtectionLevel</a> policy.  </p><p> <div class=\"separator\" style=\"clear: both;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEi4XaeYJAnWjo55-pY5ilqhLYcFp2fiAnCdM-K7Lx9YzCiTXGWDLytcVlDPF2kJzonzv_3uMZ2Qs2kz5J-kf9UZZ3s02CI7kqEkP-Tj3Y6QJfcRUWJPzwjhnr2wQVaVbYkQ9o0c7eoqBQAUxNe_E1B4UvrMxXWeiWNhDwg9EFXwKmfnLQjwEsVgmArRwA/s1600/Blog%202.png\" style=\"display: block; padding: 1em 0; text-align: center;\"><img alt=\"\" border=\"0\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEi4XaeYJAnWjo55-pY5ilqhLYcFp2fiAnCdM-K7Lx9YzCiTXGWDLytcVlDPF2kJzonzv_3uMZ2Qs2kz5J-kf9UZZ3s02CI7kqEkP-Tj3Y6QJfcRUWJPzwjhnr2wQVaVbYkQ9o0c7eoqBQAUxNe_E1B4UvrMxXWeiWNhDwg9EFXwKmfnLQjwEsVgmArRwA/s1600/Blog%202.png\" /></a></div><p>Over the past few years, we\u2019ve seen threats on the web becoming increasingly sophisticated. Turning on<a href=\"https://security.googleblog.com/2022/12/enhanced-protection-strongest-level-of.html\"> Enhanced Safe Browsing</a> will substantially increase protection from dangerous websites, malicious downloads and extensions. For the best protections against web based attacks Google has to offer, enforce Enhanced Safe Browsing for your users. </p><h2>3. Enable Enterprise Credential Protections in Chrome</h2>  <p>Enterprise password reuse introduces significant security risks. Quite often, employees reuse corporate credentials as personal logins and vice versa. Occasionally, employees even enter their corporate passwords into phishing websites. Reused employee logins give criminals easy paths to access corporate data.  </p><p><a href=\"https://support.google.com/chrome/a/answer/9696605?hl=en#\">Chrome Enterprise Password Reuse detection</a> helps enterprises avoid identity theft and employee and organizational data breaches by detecting when an employee enters their corporate credentials into any other website.  </p><p>Google Password Manager in Chrome also has a built-in <a href=\"https://security.googleblog.com/2019/12/better-password-protections-in-chrome.html\">Password Checkup</a> feature that alerts users when Google discovers a username and password has been exposed in a public data breach.  </p><p>Password alerts are surfaced in Audit Logs and Security Investigation Tool which helps admins create automated rules or take appropriate steps to mitigate this by asking users to reset their passwords. </p><h2>4. Gain insights into critical security events via Audit Logs, Google Security Center or your SIEM of choice</h2>  <p>IT teams can gain useful insights about potential security threats and events that your Google Workspace users are encountering when browsing  the web using Chrome. IT teams can  take preventive measures against threats through Security<a href=\"https://cloud.google.com/blog/products/chrome-enterprise/extending-chromes-security-insights-to-google-cloud-and-workspace-products\"> Reporting</a>. </p><p> <div class=\"separator\" style=\"clear: both;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiGnxyfNa43LnCft69rpyZHpv6BEvzkjRdYWw0pslw0Y7T8vt9XEvTwXKY-3Wk2iZa1ZkqkwiDxaz4il8Sp5x_MteMvQfql7wL9Pbv2uwXKFhfbmLKvEKL5SEmpsisoJczLW_u9WWc_IcGr4NIHDeYQWqwMdpSLZEr4IUAMHHAy8WuCG008qgIdX_1i4w/s1600/Blog%203.png\" style=\"display: block; padding: 1em 0; text-align: center;\"><img alt=\"\" border=\"0\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiGnxyfNa43LnCft69rpyZHpv6BEvzkjRdYWw0pslw0Y7T8vt9XEvTwXKY-3Wk2iZa1ZkqkwiDxaz4il8Sp5x_MteMvQfql7wL9Pbv2uwXKFhfbmLKvEKL5SEmpsisoJczLW_u9WWc_IcGr4NIHDeYQWqwMdpSLZEr4IUAMHHAy8WuCG008qgIdX_1i4w/s1600/Blog%203.png\" /></a></div> </p><p>In the Google Workspace Admin console, organizations can enroll their Chrome browser and get detailed information about their browser deployment. IT teams can also set policies, manage extensions, and more. The Chrome management policies can be set to work alongside any end user-based policies that may be in place.  </p><p>Once you\u2019ve enabled Security events reporting (pictured above), you can then view reporting events within <a href=\"https://support.google.com/a/answer/9393909\">audit logs</a>. Google Workspace Enterprise Plus or Education Plus users can use the <a href=\"https://support.google.com/a/answer/7575955?hl=en\">Workspace Security Investigation Tool</a> to identify, triage, and act on potential security threats. </p><p>As of today, Chrome can report on when users: </p><ul> <li>Navigate to a known malicious site.   <li>Download or upload files containing known malware.  <li>Reuse corporate passwords on non-approved sites.   <li>Change corporate passwords after reusing them on non-approved sites.  <li>Install extensions. </li></ul><p>In addition to Google Workspace, you can also export these events into other Google Cloud products, such as Google Cloud <a href=\"https://cloud.google.com/pubsub\">Pub/Sub</a>, <a href=\"https://cloud.google.com/solutions/security-information-event-management\">Chronicle</a>, or leading 3rd party products such as <a href=\"https://support.google.com/chrome/a/answer/12325467?hl=en&amp;ref_topic=9302422\">Splunk</a>, <a href=\"https://support.google.com/chrome/a/answer/12731018?hl=en&amp;ref_topic=9302422\">Crowdstrike</a> and PaloAlto Networks. </p><h2>5. Mitigate risk by keeping your browsers up to date with latest security updates</h2>  <p>Modern web browsers, like any other software, can have \"zero day\" vulnerabilities, which are undiscovered flaws in the software that can be exploited by attackers until they are identified and resolved. Fortunately, among all the browsers, Chrome is known to patch zero day vulnerabilities <a href=\"https://security.googleblog.com/2022/03/whats-up-with-in-wild-exploits-plus.html\">quickly</a>. However, to take advantage of this, the IT team has to ensure that all browsers within the browser environment are up-to-date. Our enterprise tools provide a smooth and seamless browser update process, enabling user productivity while maintaining optimal security. By leveraging these tools, businesses can ensure their users are safe and protected from potential security threats.    </p><ul> <li><a href=\"https://support.google.com/chrome/a/answer/9301421?hl=en\">Version Report</a>: Easily see all the versions of Chrome in your fleet across various operating systems in a daily report.   <li><a href=\"https://support.google.com/chrome/a/answer/7679871\">Force Auto Updates in Chrome</a>: Trigger updates to newer versions of Chrome as soon as they\u2019re available. Force users to relaunch Chrome to take updates more rapidly using enterprise policies. This keeps users on the latest version of Chrome, with the latest security fixes.  <li><a href=\"https://support.google.com/chrome/a/answer/9269998?hl=en\">Controlling legacy browser usage</a>: Some users continue to need access to old web applications that use plugins and ActiveX technology not supported by modern browsers. Legacy Browser Support functionality is integrated into Chrome, and reduces the time users spend with less secure browsers.  </li></ul><p> <h2>6. Ensure employees only use vetted extensions</h2> <p>Extensions pose a large security risk. Many extensions request powerful permissions that if misused, could lead to security breaches or data loss. However, due to strong end user demand, it\u2019s often not possible to fully block the installation of extensions.  </p><ul> <li><a href=\"https://support.google.com/chrome/a/answer/10836225?hl=en\">Apps & Extensions usage report</a>: Provides visibility into every Chrome extension that is installed across an enterprise\u2019s fleet. Admins can force install or block any extension across any segment of their fleet.  <li><a href=\"https://support.google.com/chrome/a/answer/10405494?hl=en\">Extensions workflow</a>: Admins can decide under which circumstances an extension install needs to be reviewed by IT. A review workflow in the Google Admin console makes it easy for admins to review and approve install requests for specific users requesting an extension, or for their broader fleet.  <li><a href=\"https://support.google.com/chrome/a/answer/9902456?hl=en\">Extensions details</a>: Admins can see additional details about an extension\u2019s permissions, and other relevant metadata. This info is surfaced in the Extensions list and Extensions workflow pages to make it easier for administrators to manage extensions. </li></ul><p> <h2>7. Ensure your Google Workspace resources are only accessed from Managed Chrome Browsers with protections enabled</h2>  <p>Context-Aware Access ensures only the right people, under the right conditions, access confidential information. Using Context-Aware Access, you can create granular access control policies for apps that access Workspace data based on attributes, such as user identity, location, device security status, and IP address. </p><p>To ensure that your Google Workspace resources are only accessed from managed Chrome browsers with protection enabled, you create custom access levels in Advanced mode, using <a href=\"https://cloud.google.com/access-context-manager/docs/custom-access-level-spec\">Common Expressions Language (CEL)</a>. Learn more about managed queries in this <a href=\"https://support.google.com/a/answer/11368990?hl=en&amp;ref_topic=9262521#zippy=%2Callow-access-to-devices-using-chrome-browser-with-security-requirements%2Callow-access-to-devices-using-chrome-browser-with-basic-security-requirements\">help center article</a>.  </p><h2>8. Enable BeyondCorp Enterprise Threat and Data Protections</h2> <div class=\"separator\" style=\"clear: both;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjlYXxy1p-YKBbOgZZTOLwKoBFG3FYql4m3SohOuMnKk0wFMQ_gLvFsSEaSK-5e0ywVTtpK0csIBdRBzTz2mcDX2g5RmrKx4F6oLDEsJ9rKHa4OcCb4_O6T6KN-3cHAp_bVUzGo5cPTBBfKNc51Ryvswp84UjOCWG7_j3qdojSBN4vBN2651r_rJeZ3_g/s1600/Screenshot%202023-03-01%208.40.49%20AM.png\" style=\"display: block; padding: 1em 0; text-align: center;\"><img alt=\"\" border=\"0\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjlYXxy1p-YKBbOgZZTOLwKoBFG3FYql4m3SohOuMnKk0wFMQ_gLvFsSEaSK-5e0ywVTtpK0csIBdRBzTz2mcDX2g5RmrKx4F6oLDEsJ9rKHa4OcCb4_O6T6KN-3cHAp_bVUzGo5cPTBBfKNc51Ryvswp84UjOCWG7_j3qdojSBN4vBN2651r_rJeZ3_g/s1600/Screenshot%202023-03-01%208.40.49%20AM.png\" /></a></div>For the organizations that want to take an even more proactive approach to data security, they can deploy <a href=\"https://cloud.google.com/beyondcorp-enterprise\">BeyondCorp Enterprise</a> to protect their information and enable data loss prevention (including control over upload, download, print, save, copy and paste), real-time phishing protection, malware deep scanning, and Zero Trust access to SaaS applications. Since BeyondCorp Enterprise is already built into Chrome, organizations can frictionlessly implement it without having to install additional agents. </p><p>Learn more about how Google supports today\u2019s workforce with secure enterprise browsing <a href=\"https://chromeenterprise.google/browser/security/\">here</a>. </p>",
            "links": [
                {
                    "href": "http://security.googleblog.com/feeds/96413614321425251/comments/default",
                    "rel": "replies",
                    "title": "Post Comments",
                    "type": "application/atom+xml"
                },
                {
                    "href": "http://www.blogger.com/comment.g?blogID=1176949257541686127&postID=96413614321425251&isPopup=true",
                    "rel": "replies",
                    "title": "0 Comments",
                    "type": "text/html"
                },
                {
                    "href": "http://www.blogger.com/feeds/1176949257541686127/posts/default/96413614321425251",
                    "rel": "edit",
                    "type": "application/atom+xml"
                },
                {
                    "href": "http://www.blogger.com/feeds/1176949257541686127/posts/default/96413614321425251",
                    "rel": "self",
                    "type": "application/atom+xml"
                },
                {
                    "href": "http://security.googleblog.com/2023/03/8-ways-to-secure-chrome-browser-for.html",
                    "rel": "alternate",
                    "title": "8 ways to secure Chrome browser for Google Workspace users",
                    "type": "text/html"
                }
            ],
            "authors": [
                {
                    "name": "Edward Fernandez",
                    "href": "http://www.blogger.com/profile/03784424747198152685",
                    "email": "noreply@blogger.com"
                }
            ],
            "author_detail": {
                "name": "Edward Fernandez",
                "href": "http://www.blogger.com/profile/03784424747198152685",
                "email": "noreply@blogger.com"
            },
            "href": "",
            "author": "Edward Fernandez (noreply@blogger.com)",
            "gd_image": {
                "height": "16",
                "rel": "http://schemas.google.com/g/2005#thumbnail",
                "src": "https://img1.blogblog.com/img/b16-rounded.gif",
                "width": "16"
            },
            "media_thumbnail": [
                {
                    "height": "72",
                    "url": "https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiMCFszBKrbzGDfoDPR3Tl8jczlO7mwUqlWhvQhMLPdYGw-aUToynhnYhyELn1BJ3IsQzLDbQfp7qo9p_j9LHzv9E5u1-Pa6E6G_Tq2KtrLIDiIpp1Jogpm0ISEphvnMC77d9QjX3UrW-056DhZOAodlks1QQbxTBPfJO1zVeHwwZgPiJoYL3GjGES-vw/s72-c/Blog%201.png",
                    "width": "72"
                }
            ],
            "thr_total": "0"
        },
        {
            "id": "tag:blogger.com,1999:blog-1176949257541686127.post-4630787052730334429",
            "guidislink": true,
            "link": "http://security.googleblog.com/2023/02/our-commitment-to-fighting-invalid.html",
            "published": "2023-02-28T09:00:00.001-05:00",
            "published_parsed": [
                2023,
                2,
                28,
                14,
                0,
                0,
                1,
                59,
                0
            ],
            "updated": "2023-02-28T12:49:04.643-05:00",
            "updated_parsed": [
                2023,
                2,
                28,
                17,
                49,
                4,
                1,
                59,
                0
            ],
            "title": "Our commitment to fighting invalid traffic on Connected TV",
            "title_detail": {
                "type": "text/plain",
                "language": null,
                "base": "http://feeds.feedburner.com/GoogleOnlineSecurityBlog",
                "value": "Our commitment to fighting invalid traffic on Connected TV"
            },
            "content": [
                {
                    "type": "text/html",
                    "language": null,
                    "base": "http://feeds.feedburner.com/GoogleOnlineSecurityBlog",
                    "value": "<span class=\"byline-author\">Posted by Michael Spaulding, Senior Product Manager, Ad Traffic Quality</span><div><br /></div><div><div><br /></div><div>Connected TV (CTV) has not only transformed the entertainment world, it has also created a vibrant new platform for digital advertising. However, as with any innovative space, there are challenges that arise, including the emergence of bad actors aiming to siphon money away from advertisers and publishers through fraudulent or invalid ad traffic. Invalid traffic is an evolving challenge that has the potential to affect the integrity and health of digital advertising on CTV. However, there are steps the industry can take to combat invalid traffic and foster a clean, trustworthy, and sustainable ecosystem.</div><div><br /></div><div><b><br /></b></div><div><b><br /></b></div><h3 style=\"text-align: left;\"><b>Information sharing and following best practices</b></h3><div>Every player across the digital advertising ecosystem has the opportunity to help reduce the risk of CTV ad fraud. It starts by spreading awareness across the industry and building a commitment among partners to share best practices for defending against invalid traffic. Greater transparency and communication are crucial to creating lasting solutions.</div><div><br /></div><div><br /></div><div>One key best practice is contributing to and using relevant industry standards. We encourage CTV inventory providers to follow the <a href=\"https://iabtechlab.com/wp-content/uploads/2019/12/OTT_CTV_User_Agent_Preliminary_Guidelines_IABTechLab_2019-12.pdf\">CTV/OTT Device &amp; App Identification Guidelines</a> and <a href=\"https://iabtechlab.com/wp-content/uploads/2018/12/OTT-IFA-guidelines.final_Dec2018.pdf\">IFA Guidelines</a>. These guidelines, both of which were developed by the IAB Tech Lab, foster greater transparency, which in turn reduces the risk of invalid traffic on CTV. More information and details about using these resources can be found in the following guide: <a href=\"https://admanager.google.com/home/resources/protecting-ad-supported-ctv-experiences/\">Protecting your ad-supported CTV experiences</a>.<br /></div><div><br /></div><div><b><br /></b></div><div><b><br /></b></div><h3 style=\"text-align: left;\"><b>Collaborating on standards and solutions</b></h3><div>No single company or industry group can solve this challenge on their own, we need to <a href=\"https://security.googleblog.com/2018/11/industry-collaboration-leads-to.html\">work collaboratively to solve the problem</a>. Fortunately, we\u2019re already seeing constructive efforts in this direction with industry-wide standards.</div><div><br /></div><div><br /></div><div>For example, the broad implementation of the IAB Tech Lab\u2019s app-ads.txt and its web counterpart, ads.txt, have brought greater transparency to the digital advertising supply chain and have helped combat ad fraud by allowing advertisers to verify the sellers from whom they buy inventory. In 2021, the IAB Tech Lab <a href=\"https://iabtechlab.com/blog/implementing-app-ads-txt-for-safer-ctv-transactions/\">extended the app-ads.txt standard to CTV</a>&nbsp;in order to better protect and support CTV advertisers. This update is the first of several industry-wide steps that have been taken to further protect CTV advertising. In early 2022, the IAB Tech Lab released the <a href=\"https://iabtechlab.com/wp-content/uploads/2021/09/1-ads-cert-primer-pc.pdf\">ads.cert 2.0</a> \u201cprotocol suite,\u201d along with a <a href=\"https://iabtechlab.com/wp-content/uploads/2021/09/3-ads-cert-authenticated-connections-pc.pdf\">proposal</a> to utilize this new standard to secure server-side connections (including for server-side ad insertion). Ads.cert 2.0 will also power future industry standards focused on securing the supply chain and preventing misrepresentation.</div><div><br /></div><div><br /></div><div>In addition to these efforts, the Media Rating Council (MRC) also engaged with stakeholders to develop its <a href=\"https://www.mediaratingcouncil.org/sites/default/files/Standards/083021%20SSAI%20and%20OTT%20Guidance%20%20FINAL.pdf\">Server-Side Ad Insertion and OTT (Over-the-Top) Guidance</a>, which provides a consistent set of guidelines specific to CTV for organizations that seek MRC accreditation for invalid traffic detection and filtration. We\u2019re also seeing key partners tackle this challenge through informal working groups. For example, we collaborated with various CTV and security partners across our industry on <a href=\"https://newsroom.roku.com/news/2022/02/roku-announces-industry-first-advertising-watermark-to-protect-from-ad/vl3yoqj--1645564317\">a solution that allows companies to ensure video ad requests are coming from a valid Roku device</a>.&nbsp;<br /></div><div><br /></div><div><br /></div><div>But more work is needed. Players across the digital advertising ecosystem need to continue to build momentum through opportunities and initiatives that enable further collaboration on solutions.</div><div><br /></div><div><br /></div><div><br /></div><h3 style=\"text-align: left;\"><b>Our ongoing investment in invalid traffic defenses</b></h3><div>At Google, we\u2019ve been defending our ad systems against invalid traffic for nearly two decades. By striking the right balance between automation and human expertise, we\u2019ve developed a comprehensive set of measures to respond to threats like botnets, click farms, domain misrepresentation, and more. We\u2019re now applying a similar approach to minimize the risk of CTV ad fraud, balancing innovation with tried-and-true technologies.</div><div><br /></div><div><br /></div><div>We\u2019ve developed a machine learning platform built on TensorFlow, which has enabled us to expand the amount of inventory we can review and scale our defenses against invalid traffic to include additional surfaces, such as CTV. While machine learning has allowed us to better analyze ad traffic in new and diverse ways, we\u2019ve also continued to leverage the work of research analysts and industry experts to ensure our automated enforcement systems are running effectively on CTV.</div><div><br /></div><div><br /></div><div>In addition to setting up new defenses for CTV, we\u2019re also taking a more conservative approach with the CTV inventory we make available. This ensures that we aren\u2019t exposing advertisers to unnecessary risk while CTV standards and best practices continue to evolve and mature, and while their adoption by the industry increases.&nbsp;</div><div><br /></div><div><br /></div><div><br /></div><h3 style=\"text-align: left;\"><b>Evolving and adapting</b></h3><div>We know that bad actors continuously evolve and adapt their methods to evade detection and enforcement of our policies. The tactics behind invalid traffic and ad fraud will inevitably become more sophisticated with the growth of CTV. However, if the industry pulls together, we\u2019ll be in a better position to not only address these new threats head on, but stay one step ahead of them while building a CTV advertising ecosystem that is safe and sustainable for everyone.</div><div><br /></div></div>"
                }
            ],
            "summary": "<span class=\"byline-author\">Posted by Michael Spaulding, Senior Product Manager, Ad Traffic Quality</span><div><br /></div><div><div><br /></div><div>Connected TV (CTV) has not only transformed the entertainment world, it has also created a vibrant new platform for digital advertising. However, as with any innovative space, there are challenges that arise, including the emergence of bad actors aiming to siphon money away from advertisers and publishers through fraudulent or invalid ad traffic. Invalid traffic is an evolving challenge that has the potential to affect the integrity and health of digital advertising on CTV. However, there are steps the industry can take to combat invalid traffic and foster a clean, trustworthy, and sustainable ecosystem.</div><div><br /></div><div><b><br /></b></div><div><b><br /></b></div><h3 style=\"text-align: left;\"><b>Information sharing and following best practices</b></h3><div>Every player across the digital advertising ecosystem has the opportunity to help reduce the risk of CTV ad fraud. It starts by spreading awareness across the industry and building a commitment among partners to share best practices for defending against invalid traffic. Greater transparency and communication are crucial to creating lasting solutions.</div><div><br /></div><div><br /></div><div>One key best practice is contributing to and using relevant industry standards. We encourage CTV inventory providers to follow the <a href=\"https://iabtechlab.com/wp-content/uploads/2019/12/OTT_CTV_User_Agent_Preliminary_Guidelines_IABTechLab_2019-12.pdf\">CTV/OTT Device &amp; App Identification Guidelines</a> and <a href=\"https://iabtechlab.com/wp-content/uploads/2018/12/OTT-IFA-guidelines.final_Dec2018.pdf\">IFA Guidelines</a>. These guidelines, both of which were developed by the IAB Tech Lab, foster greater transparency, which in turn reduces the risk of invalid traffic on CTV. More information and details about using these resources can be found in the following guide: <a href=\"https://admanager.google.com/home/resources/protecting-ad-supported-ctv-experiences/\">Protecting your ad-supported CTV experiences</a>.<br /></div><div><br /></div><div><b><br /></b></div><div><b><br /></b></div><h3 style=\"text-align: left;\"><b>Collaborating on standards and solutions</b></h3><div>No single company or industry group can solve this challenge on their own, we need to <a href=\"https://security.googleblog.com/2018/11/industry-collaboration-leads-to.html\">work collaboratively to solve the problem</a>. Fortunately, we\u2019re already seeing constructive efforts in this direction with industry-wide standards.</div><div><br /></div><div><br /></div><div>For example, the broad implementation of the IAB Tech Lab\u2019s app-ads.txt and its web counterpart, ads.txt, have brought greater transparency to the digital advertising supply chain and have helped combat ad fraud by allowing advertisers to verify the sellers from whom they buy inventory. In 2021, the IAB Tech Lab <a href=\"https://iabtechlab.com/blog/implementing-app-ads-txt-for-safer-ctv-transactions/\">extended the app-ads.txt standard to CTV</a>&nbsp;in order to better protect and support CTV advertisers. This update is the first of several industry-wide steps that have been taken to further protect CTV advertising. In early 2022, the IAB Tech Lab released the <a href=\"https://iabtechlab.com/wp-content/uploads/2021/09/1-ads-cert-primer-pc.pdf\">ads.cert 2.0</a> \u201cprotocol suite,\u201d along with a <a href=\"https://iabtechlab.com/wp-content/uploads/2021/09/3-ads-cert-authenticated-connections-pc.pdf\">proposal</a> to utilize this new standard to secure server-side connections (including for server-side ad insertion). Ads.cert 2.0 will also power future industry standards focused on securing the supply chain and preventing misrepresentation.</div><div><br /></div><div><br /></div><div>In addition to these efforts, the Media Rating Council (MRC) also engaged with stakeholders to develop its <a href=\"https://www.mediaratingcouncil.org/sites/default/files/Standards/083021%20SSAI%20and%20OTT%20Guidance%20%20FINAL.pdf\">Server-Side Ad Insertion and OTT (Over-the-Top) Guidance</a>, which provides a consistent set of guidelines specific to CTV for organizations that seek MRC accreditation for invalid traffic detection and filtration. We\u2019re also seeing key partners tackle this challenge through informal working groups. For example, we collaborated with various CTV and security partners across our industry on <a href=\"https://newsroom.roku.com/news/2022/02/roku-announces-industry-first-advertising-watermark-to-protect-from-ad/vl3yoqj--1645564317\">a solution that allows companies to ensure video ad requests are coming from a valid Roku device</a>.&nbsp;<br /></div><div><br /></div><div><br /></div><div>But more work is needed. Players across the digital advertising ecosystem need to continue to build momentum through opportunities and initiatives that enable further collaboration on solutions.</div><div><br /></div><div><br /></div><div><br /></div><h3 style=\"text-align: left;\"><b>Our ongoing investment in invalid traffic defenses</b></h3><div>At Google, we\u2019ve been defending our ad systems against invalid traffic for nearly two decades. By striking the right balance between automation and human expertise, we\u2019ve developed a comprehensive set of measures to respond to threats like botnets, click farms, domain misrepresentation, and more. We\u2019re now applying a similar approach to minimize the risk of CTV ad fraud, balancing innovation with tried-and-true technologies.</div><div><br /></div><div><br /></div><div>We\u2019ve developed a machine learning platform built on TensorFlow, which has enabled us to expand the amount of inventory we can review and scale our defenses against invalid traffic to include additional surfaces, such as CTV. While machine learning has allowed us to better analyze ad traffic in new and diverse ways, we\u2019ve also continued to leverage the work of research analysts and industry experts to ensure our automated enforcement systems are running effectively on CTV.</div><div><br /></div><div><br /></div><div>In addition to setting up new defenses for CTV, we\u2019re also taking a more conservative approach with the CTV inventory we make available. This ensures that we aren\u2019t exposing advertisers to unnecessary risk while CTV standards and best practices continue to evolve and mature, and while their adoption by the industry increases.&nbsp;</div><div><br /></div><div><br /></div><div><br /></div><h3 style=\"text-align: left;\"><b>Evolving and adapting</b></h3><div>We know that bad actors continuously evolve and adapt their methods to evade detection and enforcement of our policies. The tactics behind invalid traffic and ad fraud will inevitably become more sophisticated with the growth of CTV. However, if the industry pulls together, we\u2019ll be in a better position to not only address these new threats head on, but stay one step ahead of them while building a CTV advertising ecosystem that is safe and sustainable for everyone.</div><div><br /></div></div>",
            "links": [
                {
                    "href": "http://www.blogger.com/feeds/1176949257541686127/posts/default/4630787052730334429",
                    "rel": "edit",
                    "type": "application/atom+xml"
                },
                {
                    "href": "http://www.blogger.com/feeds/1176949257541686127/posts/default/4630787052730334429",
                    "rel": "self",
                    "type": "application/atom+xml"
                },
                {
                    "href": "http://security.googleblog.com/2023/02/our-commitment-to-fighting-invalid.html",
                    "rel": "alternate",
                    "title": "Our commitment to fighting invalid traffic on Connected TV",
                    "type": "text/html"
                }
            ],
            "authors": [
                {
                    "name": "Kimberly Samra",
                    "href": "http://www.blogger.com/profile/17209446531010386292",
                    "email": "noreply@blogger.com"
                }
            ],
            "author_detail": {
                "name": "Kimberly Samra",
                "href": "http://www.blogger.com/profile/17209446531010386292",
                "email": "noreply@blogger.com"
            },
            "href": "http://www.blogger.com/profile/17209446531010386292",
            "author": "Kimberly Samra (noreply@blogger.com)",
            "gd_image": {
                "height": "16",
                "rel": "http://schemas.google.com/g/2005#thumbnail",
                "src": "https://img1.blogblog.com/img/b16-rounded.gif",
                "width": "16"
            }
        },
        {
            "id": "tag:blogger.com,1999:blog-1176949257541686127.post-994132871074788330",
            "guidislink": true,
            "link": "http://security.googleblog.com/2023/02/moving-connected-device-security.html",
            "published": "2023-02-23T11:59:00.001-05:00",
            "published_parsed": [
                2023,
                2,
                23,
                16,
                59,
                0,
                3,
                54,
                0
            ],
            "updated": "2023-02-24T09:38:02.691-05:00",
            "updated_parsed": [
                2023,
                2,
                24,
                14,
                38,
                2,
                4,
                55,
                0
            ],
            "tags": [
                {
                    "term": "android security",
                    "scheme": "http://www.blogger.com/atom/ns#",
                    "label": null
                },
                {
                    "term": "connected devices",
                    "scheme": "http://www.blogger.com/atom/ns#",
                    "label": null
                },
                {
                    "term": "iot security",
                    "scheme": "http://www.blogger.com/atom/ns#",
                    "label": null
                }
            ],
            "title": "Moving Connected Device Security Standards Forward",
            "title_detail": {
                "type": "text/plain",
                "language": null,
                "base": "http://feeds.feedburner.com/GoogleOnlineSecurityBlog",
                "value": "Moving Connected Device Security Standards Forward"
            },
            "content": [
                {
                    "type": "text/html",
                    "language": null,
                    "base": "http://feeds.feedburner.com/GoogleOnlineSecurityBlog",
                    "value": "<span class=\"byline-author\">Posted by Eugene Liderman, Director of Mobile Security Strategy, Google</span> <p>As Mobile World Congress approaches, we have the opportunity to have deep and meaningful conversations across the industry about the present and future of connected device security.  Ahead of the event, we wanted to take a moment to recognize and share additional details on the notable progress being made to form harmonized connected device security standards and certification initiatives that provide users with better transparency about how their sensitive data is protected.  </p><p><strong>Supporting the GSMA Working Party for Mobile Device Security Transparency<br /><br /></strong>We\u2019re pleased to support and participate in the recently <a href=\"https://www.gsma.com/services/fraud-prevention-security-services/did-you-know-security-is-so-important-in-2023-it-is-influencing-consumer-buying-decisions-for-smartphones/\">announced</a> GSMA working party, which will develop a first-of-its-kind smartphone security certification program. The program will leverage the Consumer Mobile Device Protection Profile (CMD PP) specification released by <a href=\"https://www.etsi.org\">ETSI</a>, a European Standards Development Organization (SDO), and will provide a consistent way to evaluate smartphones for critical capabilities like encryption, security updates, biometrics, networking, trusted hardware, and more. </p><p>This initiative should help address a significant gap in the market for consumers and policy makers, who will greatly benefit from a new, central security resource. Most importantly, these certification programs will evaluate connected devices across industry-accepted criteria. Widely-used devices, including smartphones and tablets, which currently do not have a familiar security benchmark or system in place, will be listed with key information on device protection capabilities to bring more transparency to users. </p><p>We hope this industry-run certification program can also benefit users and support policy makers in their work as they address baseline requirements and harmonization of standards.As policy makers consider changes through regulation and legislation, such as the UK\u2019s <a href=\"https://bills.parliament.uk/bills/3069\">Product Security and Telecommunications Infrastructure Act (PSTI),</a> and emerging regulation like the <a href=\"https://digital-strategy.ec.europa.eu/en/library/cyber-resilience-act\">EU Cyber Security and Cyber Resilience Acts</a>, we share the concerns that today we are not equipped with globally recognized standards that are critical to increased security across the ecosystem. We join governments in the call to come together to ensure that we can build workable, harmonized standards to protect the security of users and mobile infrastructure today and build the resilience needed to protect our future. </p><p><strong>The Importance of Harmonized Standards for Connected Devices</strong></p><p>Connected devices, not just smartphones, are increasingly becoming the primary touchpoint for the most important aspects of our personal lives. From controlling the temperature of your home, to tracking your latest workout \u2013 connected devices have become embedded in our day-to-day tasks and activities. As consumers increasingly entrust more of their lives to their connected devices, they\u2019re right to question the security protections provided and demand more transparency from manufacturers.  </p><p>After we participated in a recent <a href=\"https://blog.google/technology/safety-security/how-google-is-helping-to-make-the-internet-of-things-more-secure/\">White House Workshop on IoT security labeling</a>, we shared  more about our commitment to security and transparency by announcing the extension of device security assessments \u2013 which started with Pixel 3 and now includes Nest, and Fitbit hardware. We have and always will strive to ensure our newly released products comply with the most prevalent security baselines that are defined by industry-recognized standards organizations. We will also remain transparent about critical security features \u2013 like how long our devices will receive security updates and our collaboration with security researchers that help us identify and fix security issues to help keep users safe.  </p><p>By participating in international standards and certification programs such as our work as a member of the <a href=\"https://csa-iot.org\">Connectivity Standards Alliance</a> (Alliance), we\u2019re working to raise the bar for the industry and develop a consistent set of security requirements that users can rely on.  </p><p><br /><strong>New Research Continues to Help Inform Our Efforts to Establish Strong Security Standards and Labeling Practices</strong></p><p>Last year, the Alliance formed the <a href=\"https://csa-iot.org/newsroom/global-approach-to-iot-cybersecurity/\">Product Security Working Group (PSWG)</a>. Over the past nine months, the working group has been making terrific progress on its mission to build an industry-run certification program for IoT devices that aligns with existing and future regulatory requirements to reduce fragmentation and promote harmonization.  </p><p>Today, the Alliance in partnership with independent research firm Omdia, published a comprehensive <a href=\"https://omdia.tech.informa.com/commissioned-research/articles/consumer-iot-device-cybersecurity-standards-policies-and-certification-schemes\">research report</a> that outlines all of the currently published and emerging global IoT security regulations and the standards baselines they map to. This critical research enables  PSWG to hone its focus and efforts on harmonizing between ETSI EN 303 645 and NIST IR 8425, as these two baseline security standards were found to underpin the vast majority of the regulations outlined in the research report. </p><p>The other notable area of the report highlighted the need for transparent security labeling for connected devices, which has also become a very important industry initiative. A large majority (77%) of consumers surveyed indicated a device label that explains the privacy and security practices of the manufacturer would be important or very important to their purchasing decision. Transparent security labeling is critical in helping consumers understand which devices meet specific security standards and requirements during evaluation. We recently provided our principles for <a href=\"https://security.googleblog.com/2022/11/our-principles-for-iot-security-labeling.html\">IoT security labeling</a> and will continue to be a key contributor to efforts around providing users with transparent device security labels.  </p><p><strong>Creating Strong Connected Device Security Standards Together</strong></p><p>It\u2019s been inspiring to see all of the progress that the Connectivity Standards Alliance, GSMA and the industry at large has  made on security standards and labeling initiatives in such a short time. It\u2019s even more exciting to see how much collaboration there has been between both industry and the public sector on these efforts. We look forward to continuing the conversation and coordinating on these important security initiatives with policymakers, industry partners, developers and public interest advocates to bring more security and transparency to connected device users. </p>"
                }
            ],
            "summary": "<span class=\"byline-author\">Posted by Eugene Liderman, Director of Mobile Security Strategy, Google</span> <p>As Mobile World Congress approaches, we have the opportunity to have deep and meaningful conversations across the industry about the present and future of connected device security.  Ahead of the event, we wanted to take a moment to recognize and share additional details on the notable progress being made to form harmonized connected device security standards and certification initiatives that provide users with better transparency about how their sensitive data is protected.  </p><p><strong>Supporting the GSMA Working Party for Mobile Device Security Transparency<br /><br /></strong>We\u2019re pleased to support and participate in the recently <a href=\"https://www.gsma.com/services/fraud-prevention-security-services/did-you-know-security-is-so-important-in-2023-it-is-influencing-consumer-buying-decisions-for-smartphones/\">announced</a> GSMA working party, which will develop a first-of-its-kind smartphone security certification program. The program will leverage the Consumer Mobile Device Protection Profile (CMD PP) specification released by <a href=\"https://www.etsi.org\">ETSI</a>, a European Standards Development Organization (SDO), and will provide a consistent way to evaluate smartphones for critical capabilities like encryption, security updates, biometrics, networking, trusted hardware, and more. </p><p>This initiative should help address a significant gap in the market for consumers and policy makers, who will greatly benefit from a new, central security resource. Most importantly, these certification programs will evaluate connected devices across industry-accepted criteria. Widely-used devices, including smartphones and tablets, which currently do not have a familiar security benchmark or system in place, will be listed with key information on device protection capabilities to bring more transparency to users. </p><p>We hope this industry-run certification program can also benefit users and support policy makers in their work as they address baseline requirements and harmonization of standards.As policy makers consider changes through regulation and legislation, such as the UK\u2019s <a href=\"https://bills.parliament.uk/bills/3069\">Product Security and Telecommunications Infrastructure Act (PSTI),</a> and emerging regulation like the <a href=\"https://digital-strategy.ec.europa.eu/en/library/cyber-resilience-act\">EU Cyber Security and Cyber Resilience Acts</a>, we share the concerns that today we are not equipped with globally recognized standards that are critical to increased security across the ecosystem. We join governments in the call to come together to ensure that we can build workable, harmonized standards to protect the security of users and mobile infrastructure today and build the resilience needed to protect our future. </p><p><strong>The Importance of Harmonized Standards for Connected Devices</strong></p><p>Connected devices, not just smartphones, are increasingly becoming the primary touchpoint for the most important aspects of our personal lives. From controlling the temperature of your home, to tracking your latest workout \u2013 connected devices have become embedded in our day-to-day tasks and activities. As consumers increasingly entrust more of their lives to their connected devices, they\u2019re right to question the security protections provided and demand more transparency from manufacturers.  </p><p>After we participated in a recent <a href=\"https://blog.google/technology/safety-security/how-google-is-helping-to-make-the-internet-of-things-more-secure/\">White House Workshop on IoT security labeling</a>, we shared  more about our commitment to security and transparency by announcing the extension of device security assessments \u2013 which started with Pixel 3 and now includes Nest, and Fitbit hardware. We have and always will strive to ensure our newly released products comply with the most prevalent security baselines that are defined by industry-recognized standards organizations. We will also remain transparent about critical security features \u2013 like how long our devices will receive security updates and our collaboration with security researchers that help us identify and fix security issues to help keep users safe.  </p><p>By participating in international standards and certification programs such as our work as a member of the <a href=\"https://csa-iot.org\">Connectivity Standards Alliance</a> (Alliance), we\u2019re working to raise the bar for the industry and develop a consistent set of security requirements that users can rely on.  </p><p><br /><strong>New Research Continues to Help Inform Our Efforts to Establish Strong Security Standards and Labeling Practices</strong></p><p>Last year, the Alliance formed the <a href=\"https://csa-iot.org/newsroom/global-approach-to-iot-cybersecurity/\">Product Security Working Group (PSWG)</a>. Over the past nine months, the working group has been making terrific progress on its mission to build an industry-run certification program for IoT devices that aligns with existing and future regulatory requirements to reduce fragmentation and promote harmonization.  </p><p>Today, the Alliance in partnership with independent research firm Omdia, published a comprehensive <a href=\"https://omdia.tech.informa.com/commissioned-research/articles/consumer-iot-device-cybersecurity-standards-policies-and-certification-schemes\">research report</a> that outlines all of the currently published and emerging global IoT security regulations and the standards baselines they map to. This critical research enables  PSWG to hone its focus and efforts on harmonizing between ETSI EN 303 645 and NIST IR 8425, as these two baseline security standards were found to underpin the vast majority of the regulations outlined in the research report. </p><p>The other notable area of the report highlighted the need for transparent security labeling for connected devices, which has also become a very important industry initiative. A large majority (77%) of consumers surveyed indicated a device label that explains the privacy and security practices of the manufacturer would be important or very important to their purchasing decision. Transparent security labeling is critical in helping consumers understand which devices meet specific security standards and requirements during evaluation. We recently provided our principles for <a href=\"https://security.googleblog.com/2022/11/our-principles-for-iot-security-labeling.html\">IoT security labeling</a> and will continue to be a key contributor to efforts around providing users with transparent device security labels.  </p><p><strong>Creating Strong Connected Device Security Standards Together</strong></p><p>It\u2019s been inspiring to see all of the progress that the Connectivity Standards Alliance, GSMA and the industry at large has  made on security standards and labeling initiatives in such a short time. It\u2019s even more exciting to see how much collaboration there has been between both industry and the public sector on these efforts. We look forward to continuing the conversation and coordinating on these important security initiatives with policymakers, industry partners, developers and public interest advocates to bring more security and transparency to connected device users. </p>",
            "links": [
                {
                    "href": "http://security.googleblog.com/feeds/994132871074788330/comments/default",
                    "rel": "replies",
                    "title": "Post Comments",
                    "type": "application/atom+xml"
                },
                {
                    "href": "http://www.blogger.com/comment.g?blogID=1176949257541686127&postID=994132871074788330&isPopup=true",
                    "rel": "replies",
                    "title": "0 Comments",
                    "type": "text/html"
                },
                {
                    "href": "http://www.blogger.com/feeds/1176949257541686127/posts/default/994132871074788330",
                    "rel": "edit",
                    "type": "application/atom+xml"
                },
                {
                    "href": "http://www.blogger.com/feeds/1176949257541686127/posts/default/994132871074788330",
                    "rel": "self",
                    "type": "application/atom+xml"
                },
                {
                    "href": "http://security.googleblog.com/2023/02/moving-connected-device-security.html",
                    "rel": "alternate",
                    "title": "Moving Connected Device Security Standards Forward",
                    "type": "text/html"
                }
            ],
            "authors": [
                {
                    "name": "Edward Fernandez",
                    "href": "http://www.blogger.com/profile/03784424747198152685",
                    "email": "noreply@blogger.com"
                }
            ],
            "author_detail": {
                "name": "Edward Fernandez",
                "href": "http://www.blogger.com/profile/03784424747198152685",
                "email": "noreply@blogger.com"
            },
            "href": "http://www.blogger.com/profile/03784424747198152685",
            "author": "Edward Fernandez (noreply@blogger.com)",
            "gd_image": {
                "height": "16",
                "rel": "http://schemas.google.com/g/2005#thumbnail",
                "src": "https://img1.blogblog.com/img/b16-rounded.gif",
                "width": "16"
            },
            "thr_total": "0"
        },
        {
            "id": "tag:blogger.com,1999:blog-1176949257541686127.post-4307145600973285017",
            "guidislink": true,
            "link": "http://security.googleblog.com/2023/02/vulnerability-reward-program-2022-year.html",
            "published": "2023-02-22T11:59:00.003-05:00",
            "published_parsed": [
                2023,
                2,
                22,
                16,
                59,
                0,
                2,
                53,
                0
            ],
            "updated": "2023-02-23T15:16:07.024-05:00",
            "updated_parsed": [
                2023,
                2,
                23,
                20,
                16,
                7,
                3,
                54,
                0
            ],
            "tags": [
                {
                    "term": "android",
                    "scheme": "http://www.blogger.com/atom/ns#",
                    "label": null
                },
                {
                    "term": "android security",
                    "scheme": "http://www.blogger.com/atom/ns#",
                    "label": null
                }
            ],
            "title": "Vulnerability Reward Program: 2022 Year in Review",
            "title_detail": {
                "type": "text/plain",
                "language": null,
                "base": "http://feeds.feedburner.com/GoogleOnlineSecurityBlog",
                "value": "Vulnerability Reward Program: 2022 Year in Review"
            },
            "content": [
                {
                    "type": "text/html",
                    "language": null,
                    "base": "http://feeds.feedburner.com/GoogleOnlineSecurityBlog",
                    "value": "<span class=\"byline-author\">Posted by Sarah Jacobus, Vulnerability Rewards Team </span> <p>It has been another incredible year for the Vulnerability Reward Programs (VRPs) at Google! Working with security researchers throughout 2022, we have been able to identify and fix over 2,900  security issues and continue to make our products more secure for our users around the world.  </p><p>We are thrilled to see significant year-over-year growth for our VRPs, and have had yet another record-breaking year for our programs! In 2022 we awarded over $12 million in bounty rewards \u2013 with researchers donating over $230,000 to a charity of their choice.  </p><p>As in <a href=\"https://security.googleblog.com/2022/02/vulnerability-reward-program-2021-year.html\">past years</a>, we are sharing our 2022 Year in Review statistics across all of our programs. We would like to give a special thank you to all of our dedicated researchers for their continued work with our programs - we look forward to more collaboration in the future!  </p> <div class=\"separator\" style=\"clear: both;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgAOPJUHMsxArs8F2LzOv6YYX7N2s_hPRBpx3CgFoMR9pICwLHFX1hkguSN4mDPn9jyoTfX6_3XUq3mury-qVxwVdWp5CgaymFtR_DEYq0sjf79ei_QYmPkbLoiFyhS8vIabGYjObGdjzowNKb-D40IxhQVrcblf1rSY4SKWjZL_ZGgOIrx9_6--IpPQQ/s1600/Graph%20%281%29.png\" style=\"display: block; padding: 1em 0; text-align: center;\"><img alt=\"\" border=\"0\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgAOPJUHMsxArs8F2LzOv6YYX7N2s_hPRBpx3CgFoMR9pICwLHFX1hkguSN4mDPn9jyoTfX6_3XUq3mury-qVxwVdWp5CgaymFtR_DEYq0sjf79ei_QYmPkbLoiFyhS8vIabGYjObGdjzowNKb-D40IxhQVrcblf1rSY4SKWjZL_ZGgOIrx9_6--IpPQQ/s1600/Graph%20%281%29.png\" /></a></div>  <div class=\"separator\" style=\"clear: both;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhI9EY0vglvl-T2LyAZiw1dMRkzkemrQfLpfiEVFwOkT_ZN313vuCyHxMmQKKlECrIufLbYflZOvy8nyE7izcOE03kR5ZWZjO8aikSUNwwAkhOYxlUGNFHTTjzmuUYCYiCxIqVuGiIInmfeOs4IhrpzkUqouBOWFlH52a1_ZGPXKT9GATCTIWhJ89H9cA/s1600/Stat%20icons%20%281%29.png\" style=\"display: block; padding: 1em 0; text-align: center;\"><img alt=\"\" border=\"0\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhI9EY0vglvl-T2LyAZiw1dMRkzkemrQfLpfiEVFwOkT_ZN313vuCyHxMmQKKlECrIufLbYflZOvy8nyE7izcOE03kR5ZWZjO8aikSUNwwAkhOYxlUGNFHTTjzmuUYCYiCxIqVuGiIInmfeOs4IhrpzkUqouBOWFlH52a1_ZGPXKT9GATCTIWhJ89H9cA/s1600/Stat%20icons%20%281%29.png\" /></a></div> </p><p><strong>Android and Devices</strong></p><p>The Android VRP had an incredible record breaking year in 2022 with $4.8 million in rewards and the highest paid report in Google VRP history of $605,000! </p><p>In our continued effort to ensure the security of Google device users, we have expanded the  scope of Android and Google Devices in our program and are now incentivizing vulnerability research in the latest versions of Google Nest and Fitbit! For more information on the latest program version and qualifying vulnerability reports, please visit our <a href=\"https://bughunters.google.com/about/rules/6171833274204160/android-and-google-devices-security-reward-program-rules\">public rules page</a>.  </p><p>We are also excited to share that the invite-only Android Chipset Security Reward Program (ACSRP) - a private vulnerability reward program offered by Google in collaboration with manufacturers of Android chipsets - rewarded $486,000 in 2022 and received over 700 valid security reports. </p><p>We would like to give a special shoutout to some of our top researchers, whose continued hard work helps to keep Android safe and secure: </p><ul> <li>Submitting an impressive 200+ vulnerabilities to the Android VRP this year, Aman Pandey of <a href=\"https://bugsmirror.com\">Bugsmirror</a> remains one of our program\u2019s top researchers. Since submitting their first report in 2019, Aman has reported more than 500 vulnerabilities to the program. Their hard work helps ensure the safety of our users; a huge thank you for all of their hard work!<br /> <li><a href=\"https://twitter.com/ele7enxxh\">Zinuo Han</a> of OPPO Amber Security Lab quickly rose through our program\u2019s ranks, becoming one of our top researchers. In the last year they have identified 150 valid vulnerabilities in Android. <br /> <li>Finding yet another critical exploit chain, gzobqq submitted our highest valued exploit to date.<br /> <li>Yu-Cheng Lin (\u6797\u79b9\u6210) (<a href=\"https://twitter.com/AndroBugs\">@AndroBugs</a>) remains one of our top researchers submitting just under 100 reports this year.  </li></ul><p><strong>Chrome</strong></p><p>Chrome VRP had another unparalleled year, receiving 470 valid and unique security bug reports, resulting in a total of $4 million of VRP rewards. Of the $4M, $3.5 million was rewarded to researchers for 363 reports of security bugs in Chrome Browser and nearly $500,000 was rewarded for 110 reports of security bugs in ChromeOS.  </p><p>This year, Chrome VRP re-evaluated and refactored the <a href=\"https://bughunters.google.com/about/rules/5745167867576320/chrome-vulnerability-reward-program-rules#reward-amounts\">Chrome VRP reward amounts</a> to increase the reward amounts for the most exploitable and harmful classes and types of security bugs, as well as added a new category for memory corruption bugs in highly privileged processes, such as the GPU and network process, to incentivize research in these critical areas. The Chrome VRP increased the <a href=\"https://bughunters.google.com/about/rules/5745167867576320/chrome-vulnerability-reward-program-rules#fuzzer-bonus\">fuzzer bonuses</a> for reports from VRP-submitted fuzzers running on the Google ClusterFuzz infrastructure as part of the <a href=\"https://bughunters.google.com/about/rules/5745167867576320/chrome-vulnerability-reward-program-rules#chrome-fuzzer-program\">Chrome Fuzzing program</a><em>.</em> A new <a href=\"https://bughunters.google.com/about/rules/5745167867576320/chrome-vulnerability-reward-program-rules#bisect-bonus\">bisect bonus</a> was introduced for bisections performed as part of the bug report submission, which helps the security team with our triage and bug reproduction.  </p><p>2023 will be the year of experimentation in the Chrome VRP! Please keep a lookout for announcements of experiments and potential bonus opportunities for Chrome Browser and ChromeOS security bugs.  </p><p>The entire Chrome team sincerely appreciates the contributions of all our researchers in 2022 who helped keep Chrome Browser, ChromeOS, and all the browsers and software based on Chromium secure for billions of users across the globe.  </p><p>In addition to <a href=\"https://twitter.com/GoogleVRP/status/1466865149655109641\">posting </a>about our Top 0-22 Researchers in 2022, Chrome VRP would like to specifically acknowledge some specific researcher achievements made in 2022:  </p><ul> <li>Rory McNamara, a six-year participant in Chrome VRP as a ChromeOS researcher, became the highest rewarded researcher of all time in the Chrome VRP.  Most impressive is that Rory has achieved this in a total of only 40 security bug submissions, demonstrating just how impactful his findings have been - from <a href=\"https://crbug.com/915541\">ChromeOS persistent root command execution</a>, resulting in a $75,000 reward back in 2018, to his <em>many</em> reports of root privilege escalation both with and without persistence. Rory was also kind enough to speak at the Chrome Security Summit in 2022 to share his experiences participating in the Chrome VRP over the years. Thank you, Rory!   <li>SeongHwan Park (SeHwa), a participant in the Chrome VRP since mid-2021, has been an amazing contributor of ANGLE / GPU security bug reports in 2022 with 11 solid quality reports of GPU bugs earning them a spot on Chrome VRP 2022 <a href=\"https://twitter.com/GoogleVRP/status/1466865149655109641\">top researchers</a> list. Thank you, SeHwa!  </li></ul><p><strong>Securing Open Source</strong></p><p>Recognizing the fact that Google is one of the largest contributors and users of open source in the world, in August 2022 we <a href=\"https://security.googleblog.com/2023/08/Announcing-Googles-Open-Source-Software-Vulnerability-Rewards-Program%20.html\">launched</a> <a href=\"https://bughunters.google.com/about/rules/6521337925468160/google-open-source-software-vulnerability-reward-program-rules\">OSS VRP</a> to reward vulnerabilities in Google's open source projects - covering supply chain issues of our packages, and vulnerabilities that may occur in end products using our OSS. Since then, over 100 bughunters have participated in the program and were rewarded over $110,000. </p><p><strong>Sharing Knowledge</strong></p><p>We\u2019re pleased to announce that in 2022, we\u2019ve made the learning opportunities for bug hunters available at our <a href=\"https://bughunters.google.com/learn\">Bug Hunter University</a> (BHU) more diverse and accessible. In addition to our existing collections of articles, which support <a href=\"https://bughunters.google.com/learn/improving-your-reports/6005260747014144\">improving your reports</a> and avoiding <a href=\"https://bughunters.google.com/learn/invalid-reports/5374985771941888\">invalid reports</a>, we\u2019ve made more than 20 instructional videos available. Clocking in at around 10 minutes each, these videos cover the most relevant learning topics and trends we\u2019ve observed over the past years.  </p><p>To make this happen, we teamed up with some of your favorite and best-known security researchers from around the globe, including LiveOverflow, PwnFunction, stacksmashing, InsiderPhD, PinkDraconian, and many more! </p><p>If you\u2019re tired of reading our articles, or simply curious and looking for an alternative way to expand your bug hunting skills, these videos are for you. Check out our <a href=\"https://bughunters.google.com/learn/videos/5956774821363712\">overview</a>, or hop right in to the <a href=\"https://www.youtube.com/playlist?list=PLY-vqlMAnJ9bGoI82H1BB8BE4A8H2OCA-\">BHU YouTube playlist</a>. Happy watching & learning! </p><p><br /><strong>Google Play</strong></p><p>2022 was a year of change for the <a href=\"https://bughunters.google.com/about/rules/5604090422493184/google-play-security-reward-program-rules\">Google Play Security Reward Program</a>. In May we onboarded both new teammates and some old friends to triage and lead GPSRP. We also sponsored NahamCon \u201822, BountyCon in Singapore, and NahamCon Europe\u2019s online event. In 2023 we hope to continue to grow the program with new bug hunters and partner on more events focused on Android & Google Play apps. </p><p><strong>Research Grants</strong></p><p>In 2022 we continued our <a href=\"https://bughunters.google.com/about/rules/5479188746993664/vulnerability-research-grant-rules\">Vulnerability Research Grant program</a> with success. We\u2019ve awarded more than $250,000 in grants to over 170 security researchers.  Last year we also piloted collaboration double VRP rewards for selected grants and are looking forward to expanding it even more in 2023.  </p><p>If you are a Google VRP researcher and want to be considered for a Vulnerability Research Grant, make sure you opted in on your <a href=\"https://bughunters.google.com/\">bughunters profile</a>. </p><p><strong>Looking Forward</strong></p><p>Without our incredible security researchers we wouldn\u2019t be here sharing this amazing news today. Thank you again for your continued hard work! </p><p>Also, in case you haven\u2019t seen <a href=\"https://youtube.com/playlist?list=PL590L5WQmH8dsxxz7ooJAgmijwOz0lh2H\">Hacking Google</a> yet, make sure to check out the \u201c<a href=\"https://www.google.com/url?q=https://www.youtube.com/watch?v%3DIoXiXlCNoXg%26list%3DPL590L5WQmH8dsxxz7ooJAgmijwOz0lh2H%26index%3D6&amp;sa=D&amp;source=docs&amp;ust=1675170818298056&amp;usg=AOvVaw3XCO4Le4OuP60Yo8UDWrEG\">Bug Hunters\u201d episode</a>, featuring some of our very own super talented bug hunters. </p><p>Thank you again for helping to make Google, the Internet, and our users more safe and secure! Follow us on <a href=\"http://twitter.com/googlevrp\">@GoogleVRP</a> for other news and updates.  </p><p><em>Thank you to Adam Bacchus, Dirk G\u00f6hmann, Eduardo Vela, Sarah Jacobus, Amy Ressler, Martin Straka, Jan Keller, Tony Mendez, Rishika Hooda, Medha Jain</em></p>"
                }
            ],
            "summary": "<span class=\"byline-author\">Posted by Sarah Jacobus, Vulnerability Rewards Team </span> <p>It has been another incredible year for the Vulnerability Reward Programs (VRPs) at Google! Working with security researchers throughout 2022, we have been able to identify and fix over 2,900  security issues and continue to make our products more secure for our users around the world.  </p><p>We are thrilled to see significant year-over-year growth for our VRPs, and have had yet another record-breaking year for our programs! In 2022 we awarded over $12 million in bounty rewards \u2013 with researchers donating over $230,000 to a charity of their choice.  </p><p>As in <a href=\"https://security.googleblog.com/2022/02/vulnerability-reward-program-2021-year.html\">past years</a>, we are sharing our 2022 Year in Review statistics across all of our programs. We would like to give a special thank you to all of our dedicated researchers for their continued work with our programs - we look forward to more collaboration in the future!  </p> <div class=\"separator\" style=\"clear: both;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgAOPJUHMsxArs8F2LzOv6YYX7N2s_hPRBpx3CgFoMR9pICwLHFX1hkguSN4mDPn9jyoTfX6_3XUq3mury-qVxwVdWp5CgaymFtR_DEYq0sjf79ei_QYmPkbLoiFyhS8vIabGYjObGdjzowNKb-D40IxhQVrcblf1rSY4SKWjZL_ZGgOIrx9_6--IpPQQ/s1600/Graph%20%281%29.png\" style=\"display: block; padding: 1em 0; text-align: center;\"><img alt=\"\" border=\"0\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgAOPJUHMsxArs8F2LzOv6YYX7N2s_hPRBpx3CgFoMR9pICwLHFX1hkguSN4mDPn9jyoTfX6_3XUq3mury-qVxwVdWp5CgaymFtR_DEYq0sjf79ei_QYmPkbLoiFyhS8vIabGYjObGdjzowNKb-D40IxhQVrcblf1rSY4SKWjZL_ZGgOIrx9_6--IpPQQ/s1600/Graph%20%281%29.png\" /></a></div>  <div class=\"separator\" style=\"clear: both;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhI9EY0vglvl-T2LyAZiw1dMRkzkemrQfLpfiEVFwOkT_ZN313vuCyHxMmQKKlECrIufLbYflZOvy8nyE7izcOE03kR5ZWZjO8aikSUNwwAkhOYxlUGNFHTTjzmuUYCYiCxIqVuGiIInmfeOs4IhrpzkUqouBOWFlH52a1_ZGPXKT9GATCTIWhJ89H9cA/s1600/Stat%20icons%20%281%29.png\" style=\"display: block; padding: 1em 0; text-align: center;\"><img alt=\"\" border=\"0\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhI9EY0vglvl-T2LyAZiw1dMRkzkemrQfLpfiEVFwOkT_ZN313vuCyHxMmQKKlECrIufLbYflZOvy8nyE7izcOE03kR5ZWZjO8aikSUNwwAkhOYxlUGNFHTTjzmuUYCYiCxIqVuGiIInmfeOs4IhrpzkUqouBOWFlH52a1_ZGPXKT9GATCTIWhJ89H9cA/s1600/Stat%20icons%20%281%29.png\" /></a></div> </p><p><strong>Android and Devices</strong></p><p>The Android VRP had an incredible record breaking year in 2022 with $4.8 million in rewards and the highest paid report in Google VRP history of $605,000! </p><p>In our continued effort to ensure the security of Google device users, we have expanded the  scope of Android and Google Devices in our program and are now incentivizing vulnerability research in the latest versions of Google Nest and Fitbit! For more information on the latest program version and qualifying vulnerability reports, please visit our <a href=\"https://bughunters.google.com/about/rules/6171833274204160/android-and-google-devices-security-reward-program-rules\">public rules page</a>.  </p><p>We are also excited to share that the invite-only Android Chipset Security Reward Program (ACSRP) - a private vulnerability reward program offered by Google in collaboration with manufacturers of Android chipsets - rewarded $486,000 in 2022 and received over 700 valid security reports. </p><p>We would like to give a special shoutout to some of our top researchers, whose continued hard work helps to keep Android safe and secure: </p><ul> <li>Submitting an impressive 200+ vulnerabilities to the Android VRP this year, Aman Pandey of <a href=\"https://bugsmirror.com\">Bugsmirror</a> remains one of our program\u2019s top researchers. Since submitting their first report in 2019, Aman has reported more than 500 vulnerabilities to the program. Their hard work helps ensure the safety of our users; a huge thank you for all of their hard work!<br /> <li><a href=\"https://twitter.com/ele7enxxh\">Zinuo Han</a> of OPPO Amber Security Lab quickly rose through our program\u2019s ranks, becoming one of our top researchers. In the last year they have identified 150 valid vulnerabilities in Android. <br /> <li>Finding yet another critical exploit chain, gzobqq submitted our highest valued exploit to date.<br /> <li>Yu-Cheng Lin (\u6797\u79b9\u6210) (<a href=\"https://twitter.com/AndroBugs\">@AndroBugs</a>) remains one of our top researchers submitting just under 100 reports this year.  </li></ul><p><strong>Chrome</strong></p><p>Chrome VRP had another unparalleled year, receiving 470 valid and unique security bug reports, resulting in a total of $4 million of VRP rewards. Of the $4M, $3.5 million was rewarded to researchers for 363 reports of security bugs in Chrome Browser and nearly $500,000 was rewarded for 110 reports of security bugs in ChromeOS.  </p><p>This year, Chrome VRP re-evaluated and refactored the <a href=\"https://bughunters.google.com/about/rules/5745167867576320/chrome-vulnerability-reward-program-rules#reward-amounts\">Chrome VRP reward amounts</a> to increase the reward amounts for the most exploitable and harmful classes and types of security bugs, as well as added a new category for memory corruption bugs in highly privileged processes, such as the GPU and network process, to incentivize research in these critical areas. The Chrome VRP increased the <a href=\"https://bughunters.google.com/about/rules/5745167867576320/chrome-vulnerability-reward-program-rules#fuzzer-bonus\">fuzzer bonuses</a> for reports from VRP-submitted fuzzers running on the Google ClusterFuzz infrastructure as part of the <a href=\"https://bughunters.google.com/about/rules/5745167867576320/chrome-vulnerability-reward-program-rules#chrome-fuzzer-program\">Chrome Fuzzing program</a><em>.</em> A new <a href=\"https://bughunters.google.com/about/rules/5745167867576320/chrome-vulnerability-reward-program-rules#bisect-bonus\">bisect bonus</a> was introduced for bisections performed as part of the bug report submission, which helps the security team with our triage and bug reproduction.  </p><p>2023 will be the year of experimentation in the Chrome VRP! Please keep a lookout for announcements of experiments and potential bonus opportunities for Chrome Browser and ChromeOS security bugs.  </p><p>The entire Chrome team sincerely appreciates the contributions of all our researchers in 2022 who helped keep Chrome Browser, ChromeOS, and all the browsers and software based on Chromium secure for billions of users across the globe.  </p><p>In addition to <a href=\"https://twitter.com/GoogleVRP/status/1466865149655109641\">posting </a>about our Top 0-22 Researchers in 2022, Chrome VRP would like to specifically acknowledge some specific researcher achievements made in 2022:  </p><ul> <li>Rory McNamara, a six-year participant in Chrome VRP as a ChromeOS researcher, became the highest rewarded researcher of all time in the Chrome VRP.  Most impressive is that Rory has achieved this in a total of only 40 security bug submissions, demonstrating just how impactful his findings have been - from <a href=\"https://crbug.com/915541\">ChromeOS persistent root command execution</a>, resulting in a $75,000 reward back in 2018, to his <em>many</em> reports of root privilege escalation both with and without persistence. Rory was also kind enough to speak at the Chrome Security Summit in 2022 to share his experiences participating in the Chrome VRP over the years. Thank you, Rory!   <li>SeongHwan Park (SeHwa), a participant in the Chrome VRP since mid-2021, has been an amazing contributor of ANGLE / GPU security bug reports in 2022 with 11 solid quality reports of GPU bugs earning them a spot on Chrome VRP 2022 <a href=\"https://twitter.com/GoogleVRP/status/1466865149655109641\">top researchers</a> list. Thank you, SeHwa!  </li></ul><p><strong>Securing Open Source</strong></p><p>Recognizing the fact that Google is one of the largest contributors and users of open source in the world, in August 2022 we <a href=\"https://security.googleblog.com/2023/08/Announcing-Googles-Open-Source-Software-Vulnerability-Rewards-Program%20.html\">launched</a> <a href=\"https://bughunters.google.com/about/rules/6521337925468160/google-open-source-software-vulnerability-reward-program-rules\">OSS VRP</a> to reward vulnerabilities in Google's open source projects - covering supply chain issues of our packages, and vulnerabilities that may occur in end products using our OSS. Since then, over 100 bughunters have participated in the program and were rewarded over $110,000. </p><p><strong>Sharing Knowledge</strong></p><p>We\u2019re pleased to announce that in 2022, we\u2019ve made the learning opportunities for bug hunters available at our <a href=\"https://bughunters.google.com/learn\">Bug Hunter University</a> (BHU) more diverse and accessible. In addition to our existing collections of articles, which support <a href=\"https://bughunters.google.com/learn/improving-your-reports/6005260747014144\">improving your reports</a> and avoiding <a href=\"https://bughunters.google.com/learn/invalid-reports/5374985771941888\">invalid reports</a>, we\u2019ve made more than 20 instructional videos available. Clocking in at around 10 minutes each, these videos cover the most relevant learning topics and trends we\u2019ve observed over the past years.  </p><p>To make this happen, we teamed up with some of your favorite and best-known security researchers from around the globe, including LiveOverflow, PwnFunction, stacksmashing, InsiderPhD, PinkDraconian, and many more! </p><p>If you\u2019re tired of reading our articles, or simply curious and looking for an alternative way to expand your bug hunting skills, these videos are for you. Check out our <a href=\"https://bughunters.google.com/learn/videos/5956774821363712\">overview</a>, or hop right in to the <a href=\"https://www.youtube.com/playlist?list=PLY-vqlMAnJ9bGoI82H1BB8BE4A8H2OCA-\">BHU YouTube playlist</a>. Happy watching & learning! </p><p><br /><strong>Google Play</strong></p><p>2022 was a year of change for the <a href=\"https://bughunters.google.com/about/rules/5604090422493184/google-play-security-reward-program-rules\">Google Play Security Reward Program</a>. In May we onboarded both new teammates and some old friends to triage and lead GPSRP. We also sponsored NahamCon \u201822, BountyCon in Singapore, and NahamCon Europe\u2019s online event. In 2023 we hope to continue to grow the program with new bug hunters and partner on more events focused on Android & Google Play apps. </p><p><strong>Research Grants</strong></p><p>In 2022 we continued our <a href=\"https://bughunters.google.com/about/rules/5479188746993664/vulnerability-research-grant-rules\">Vulnerability Research Grant program</a> with success. We\u2019ve awarded more than $250,000 in grants to over 170 security researchers.  Last year we also piloted collaboration double VRP rewards for selected grants and are looking forward to expanding it even more in 2023.  </p><p>If you are a Google VRP researcher and want to be considered for a Vulnerability Research Grant, make sure you opted in on your <a href=\"https://bughunters.google.com/\">bughunters profile</a>. </p><p><strong>Looking Forward</strong></p><p>Without our incredible security researchers we wouldn\u2019t be here sharing this amazing news today. Thank you again for your continued hard work! </p><p>Also, in case you haven\u2019t seen <a href=\"https://youtube.com/playlist?list=PL590L5WQmH8dsxxz7ooJAgmijwOz0lh2H\">Hacking Google</a> yet, make sure to check out the \u201c<a href=\"https://www.google.com/url?q=https://www.youtube.com/watch?v%3DIoXiXlCNoXg%26list%3DPL590L5WQmH8dsxxz7ooJAgmijwOz0lh2H%26index%3D6&amp;sa=D&amp;source=docs&amp;ust=1675170818298056&amp;usg=AOvVaw3XCO4Le4OuP60Yo8UDWrEG\">Bug Hunters\u201d episode</a>, featuring some of our very own super talented bug hunters. </p><p>Thank you again for helping to make Google, the Internet, and our users more safe and secure! Follow us on <a href=\"http://twitter.com/googlevrp\">@GoogleVRP</a> for other news and updates.  </p><p><em>Thank you to Adam Bacchus, Dirk G\u00f6hmann, Eduardo Vela, Sarah Jacobus, Amy Ressler, Martin Straka, Jan Keller, Tony Mendez, Rishika Hooda, Medha Jain</em></p>",
            "links": [
                {
                    "href": "http://security.googleblog.com/feeds/4307145600973285017/comments/default",
                    "rel": "replies",
                    "title": "Post Comments",
                    "type": "application/atom+xml"
                },
                {
                    "href": "http://www.blogger.com/comment.g?blogID=1176949257541686127&postID=4307145600973285017&isPopup=true",
                    "rel": "replies",
                    "title": "0 Comments",
                    "type": "text/html"
                },
                {
                    "href": "http://www.blogger.com/feeds/1176949257541686127/posts/default/4307145600973285017",
                    "rel": "edit",
                    "type": "application/atom+xml"
                },
                {
                    "href": "http://www.blogger.com/feeds/1176949257541686127/posts/default/4307145600973285017",
                    "rel": "self",
                    "type": "application/atom+xml"
                },
                {
                    "href": "http://security.googleblog.com/2023/02/vulnerability-reward-program-2022-year.html",
                    "rel": "alternate",
                    "title": "Vulnerability Reward Program: 2022 Year in Review",
                    "type": "text/html"
                }
            ],
            "authors": [
                {
                    "name": "Edward Fernandez",
                    "href": "http://www.blogger.com/profile/03784424747198152685",
                    "email": "noreply@blogger.com"
                }
            ],
            "author_detail": {
                "name": "Edward Fernandez",
                "href": "http://www.blogger.com/profile/03784424747198152685",
                "email": "noreply@blogger.com"
            },
            "href": "",
            "author": "Edward Fernandez (noreply@blogger.com)",
            "gd_image": {
                "height": "16",
                "rel": "http://schemas.google.com/g/2005#thumbnail",
                "src": "https://img1.blogblog.com/img/b16-rounded.gif",
                "width": "16"
            },
            "media_thumbnail": [
                {
                    "height": "72",
                    "url": "https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgAOPJUHMsxArs8F2LzOv6YYX7N2s_hPRBpx3CgFoMR9pICwLHFX1hkguSN4mDPn9jyoTfX6_3XUq3mury-qVxwVdWp5CgaymFtR_DEYq0sjf79ei_QYmPkbLoiFyhS8vIabGYjObGdjzowNKb-D40IxhQVrcblf1rSY4SKWjZL_ZGgOIrx9_6--IpPQQ/s72-c/Graph%20%281%29.png",
                    "width": "72"
                }
            ],
            "thr_total": "0"
        },
        {
            "id": "tag:blogger.com,1999:blog-1176949257541686127.post-2536252029687729434",
            "guidislink": true,
            "link": "http://security.googleblog.com/2023/02/hardening-firmware-across-android.html",
            "published": "2023-02-21T12:29:00.000-05:00",
            "published_parsed": [
                2023,
                2,
                21,
                17,
                29,
                0,
                1,
                52,
                0
            ],
            "updated": "2023-02-21T12:29:09.817-05:00",
            "updated_parsed": [
                2023,
                2,
                21,
                17,
                29,
                9,
                1,
                52,
                0
            ],
            "tags": [
                {
                    "term": "android",
                    "scheme": "http://www.blogger.com/atom/ns#",
                    "label": null
                },
                {
                    "term": "android security",
                    "scheme": "http://www.blogger.com/atom/ns#",
                    "label": null
                }
            ],
            "title": "Hardening Firmware Across the Android Ecosystem",
            "title_detail": {
                "type": "text/plain",
                "language": null,
                "base": "http://feeds.feedburner.com/GoogleOnlineSecurityBlog",
                "value": "Hardening Firmware Across the Android Ecosystem"
            },
            "content": [
                {
                    "type": "text/html",
                    "language": null,
                    "base": "http://feeds.feedburner.com/GoogleOnlineSecurityBlog",
                    "value": "<span class=\"byline-author\">Posted by Roger Piqueras Jover, Ivan Lozano, Sudhi Herle, and Stephan Somogyi, Android Team</span> <p>A modern Android powered smartphone is a complex hardware device: Android OS runs on a multi-core CPU - also called an Application Processor (AP). And the AP is one of many such processors of a System On Chip (SoC). Other processors on the SoC perform various specialized tasks \u2014 such as security functions, image & video processing, and most importantly cellular communications. The processor performing cellular communications is often referred to as the baseband. For the purposes of this blog, we refer to the software that runs on all these other processors as \u201cFirmware\u201d.  </p><p>Securing the Android Platform requires going beyond the confines of the Application Processor (AP). Android\u2019s defense-in-depth strategy also applies to the firmware running on bare-metal environments in these microcontrollers, as they are a critical part of the attack surface of a device. </p><h3><strong>A popular attack vector within the security research community</strong></h3>  <p>As the security of the Android Platform has been steadily improved, some security researchers have shifted their focus towards other parts of the software stack, including firmware. Over the last decade there have been numerous <a href=\"https://www.usenix.org/system/files/conference/woot12/woot12-final24.pdf\">publications</a>, <a href=\"https://player.vimeo.com/video/214013463\">talks</a>, <a href=\"https://downloads.immunityinc.com/infiltrate2018-slidepacks/amat-cama-a-walk-with-shannon/presentation.pdf\">Pwn2Own contest winners</a>, and <a href=\"https://source.android.com/docs/security/bulletin/2022-06-01#unisoc-components\">CVEs</a> targeting exploitation of vulnerabilities in firmware running in these secondary processors. Bugs remotely exploitable over the air (eg. WiFi and cellular baseband bugs) are of particular concern and, therefore, are popular within the security research community. These types of bugs even have <a href=\"https://www.zerodium.com/images/zerodium_prices_mobiles.png\">their own categorization in well known 3rd party exploit marketplaces</a>. </p><p>Regardless of whether it is remote code execution within the <a href=\"https://googleprojectzero.blogspot.com/2017/04/over-air-exploiting-broadcoms-wi-fi_4.html\">WiFi SoC</a> or within the cellular baseband, a <a href=\"https://i.blackhat.com/USA21/Wednesday-Handouts/us-21-Over-The-Air-Baseband-Exploit-Gaining-Remote-Code-Execution-On-5G-Smartphones.pdf\">common</a> and <a href=\"https://speakerdeck.com/marcograss/exploitation-of-a-modern-smartphone-baseband\">resonating</a> <a href=\"https://player.vimeo.com/video/214013463\">theme</a> has been the <em>consistent</em> lack of exploit mitigations in firmware. Conveniently, Android has significant <a href=\"https://security.googleblog.com/2021/01/data-driven-security-hardening-in.html\">experience</a>  in enabling exploit mitigations across critical attack surfaces. </p><h3><strong>Applying years worth of lessons learned in systems hardening</strong></h3>  <p>Over the last few years, we have <a href=\"https://android-developers.googleblog.com/2018/06/compiler-based-security-mitigations-in.html\">successfully enabled compiler-based mitigations</a> in Android \u2014 on the AP \u2014 which add additional layers of defense across the platform, making it harder to build reproducible exploits and to <a href=\"https://android-developers.googleblog.com/2020/06/system-hardening-in-android-11.html\">prevent certain types of bugs from becoming vulnerabilities</a>. Building on top of these successes and lessons learned, we\u2019re applying the same principles to hardening the security of firmware that runs outside of Android per se, directly on the bare-metal hardware. </p><p>In particular, we are working with our ecosystem partners in several areas aimed at hardening the security of firmware that interacts with Android: </p><ul> <li>Exploring and enabling compiler-based sanitizers (<a href=\"https://source.android.com/docs/security/test/bounds-sanitizer\">BoundSan</a>, <a href=\"https://source.android.com/docs/security/test/intsan\">IntSan</a>) and other exploit mitigations (<a href=\"https://source.android.com/docs/security/test/cfi\">CFI</a>, <a href=\"https://source.android.com/docs/security/test/kcfi\">kCFI</a>, <a href=\"https://source.android.com/docs/security/test/shadow-call-stack\">Shadow Call Stack</a>, Stack Canaries) in firmware.  <li>Enabling further memory safety features (<a href=\"https://source.android.com/docs/security/test/memory-safety/zero-initialized-memory\">Auto-initialize Memory</a>) in firmware. </li></ul><h3><strong>Bare-metal support</strong></h3>  <p>Compiler-based sanitizers <a href=\"https://releases.llvm.org/11.0.1/tools/clang/docs/UndefinedBehaviorSanitizer.html#usage\">have no runtime requirements in trapping mode</a>, which provides a meaningful layer of protection we want: it causes the program to abort execution when detecting undefined behavior. As a result, memory corruption vulnerabilities that would otherwise be exploitable are now stopped entirely. To aid developers in testing, <a href=\"https://source.android.com/devices/tech/debug/bounds-sanitizer#troubleshooting\">troubleshooting</a>, and generating bug reports on debug builds, both minimal and full diagnostics modes can be enabled, which require defining and linking the requisite runtime handlers.  </p><p>Most Control Flow Integrity (CFI) schemes also work for bare-metal targets in trapping mode. LLVM\u2019s<sup id=\"fnref1\"><a href=\"http://feeds.feedburner.com/GoogleOnlineSecurityBlog#fn1\" rel=\"footnote\">1</a></sup> CFI across shared libraries scheme (cross-DSO) is the exception as it requires a runtime to be defined for the target. Shadow Call Stack, an AArch64-only feature, has a runtime component which initializes the shadow stack. <a href=\"https://clang.llvm.org/docs/ShadowCallStack.html#compatibility\">LLVM does not provide this runtime for any target</a>, so bare-metal users would need to define that runtime to use it. </p><h3><strong>The challenge</strong></h3>  <p>Enabling exploit mitigations in firmware running on bare metal targets is no easy feat. While the AP (Application Processor) hosts a powerful operating system (Linux) with comparatively abundant CPU and memory resources, bare metal targets are often severely resource-constrained, and are tuned to run a very specific set of functions. Any perturbation in compute and/or memory consumption introduced by enabling, for example, compiler-based sanitizers, could have a significant impact in functionality, performance, and stability. </p><p>Therefore, it is critical to optimize how and where exploit mitigations are turned on. The goal is to maximize impact \u2014 harden the most exposed attack surface \u2014 while minimizing any performance/stability impact. For example, in the case of the cellular baseband, we recommend focusing on code and libraries responsible for parsing messages delivered over the air (particularly for pre-authentication protocols such as <a href=\"https://onlinelibrary.wiley.com/doi/10.1002/9781118188545.ch3\">RRC</a> and <a href=\"https://www.dialogic.com/glossary/nas\">NAS</a>, which are the most exposed attack surface), libraries encoding/decoding complex formats (for example <a href=\"https://cve.mitre.org/cgi-bin/cvekey.cgi?keyword=asn.1\">ASN.1</a>), and libraries implementing IMS (IP Multimedia System) functionality, or parsing SMS and/or MMS. </p><h3><strong>Fuzzing and Vulnerability Rewards Program</strong></h3>  <p>Enabling exploit mitigations and compiler-based sanitizers are excellent techniques to minimize the chances of unknown bugs becoming exploitable. However, it is also important to continuously look for, find, and patch bugs. </p><p>Fuzzing continues to be a highly efficient method to find impactful bugs. It\u2019s also been proven to be effective for signaling larger design issues in code. Our team partners closely with Android teams working on fuzzing and security assessments to leverage <a href=\"https://www.blackhat.com/us-22/briefings/schedule/#google-reimagined-a-phone-it-was-our-job-to-red-team-and-secure-it-27093\">their expertise and tools</a> with bare metal targets. </p><p>This collaboration also allowed us to scale fuzzing activities across Google by deploying central infrastructure that allows fuzzers to run in perpetuity. This is a high-value approach known as continuous fuzzing. </p><p>In parallel, we also accept and reward external contributions via our <a href=\"https://bughunters.google.com/about/rules/6171833274204160/android-and-google-devices-security-reward-program-rules\">Vulnerability Rewards Program</a>. Along with the launch of Android 13, we updated the <a href=\"https://source.android.com/docs/security/overview/updates-resources#severity\">severity guidelines</a> to further highlight remotely exploitable bugs in connectivity firmware. We look forward to the contributions from the security research community to help us find and patch bugs in bare metal targets. </p><h3><strong>On the horizon</strong></h3>  <p>In Android 12 we announced <a href=\"https://source.android.com/docs/setup/build/rust/building-rust-modules/overview\">support for Rust in the Android platform</a>, and Android 13 is the <a href=\"https://security.googleblog.com/2021/04/rust-in-android-platform.html\">first release with a majority of new code written in a memory safe language</a>. We see a lot of potential in also leveraging memory-safe languages for bare metal targets, particularly for high risk and exposed attack surface. </p><p>Hardening firmware running on bare metal to materially increase the level of protection -  across <em>more surfaces</em> in Android - is one of the priorities of Android Security. Moving forward, our goal is to expand the use of these mitigation technologies for more bare metal targets, and we strongly encourage our partners to do the same. We stand ready to assist our ecosystem partners to harden bare metal firmware. </p><p><em>Special thanks to our colleagues who contributed to this blog post and our firmware security hardening efforts: Diana Baker, Farzan Karimi, Jeffrey Vander Stoep, Kevin Deus, Eugene Rodionov, Pirama Arumuga Nainar, Sami Tolvanen, Stephen Hines, Xuan Xing, Yomna Nasser.</em></p> <!-- Footnotes themselves at the bottom. --> <h2>Notes</h2><div class=\"footnotes\"><hr /><ol><li id=\"fn1\"><p>     <a href=\"https://llvm.org/\">LLVM</a> - is a compiler framework used by multiple programming languages&nbsp;<a href=\"http://feeds.feedburner.com/GoogleOnlineSecurityBlog#fnref1\" rev=\"footnote\">&#8617;</a> </ol></div>"
                }
            ],
            "summary": "<span class=\"byline-author\">Posted by Roger Piqueras Jover, Ivan Lozano, Sudhi Herle, and Stephan Somogyi, Android Team</span> <p>A modern Android powered smartphone is a complex hardware device: Android OS runs on a multi-core CPU - also called an Application Processor (AP). And the AP is one of many such processors of a System On Chip (SoC). Other processors on the SoC perform various specialized tasks \u2014 such as security functions, image & video processing, and most importantly cellular communications. The processor performing cellular communications is often referred to as the baseband. For the purposes of this blog, we refer to the software that runs on all these other processors as \u201cFirmware\u201d.  </p><p>Securing the Android Platform requires going beyond the confines of the Application Processor (AP). Android\u2019s defense-in-depth strategy also applies to the firmware running on bare-metal environments in these microcontrollers, as they are a critical part of the attack surface of a device. </p><h3><strong>A popular attack vector within the security research community</strong></h3>  <p>As the security of the Android Platform has been steadily improved, some security researchers have shifted their focus towards other parts of the software stack, including firmware. Over the last decade there have been numerous <a href=\"https://www.usenix.org/system/files/conference/woot12/woot12-final24.pdf\">publications</a>, <a href=\"https://player.vimeo.com/video/214013463\">talks</a>, <a href=\"https://downloads.immunityinc.com/infiltrate2018-slidepacks/amat-cama-a-walk-with-shannon/presentation.pdf\">Pwn2Own contest winners</a>, and <a href=\"https://source.android.com/docs/security/bulletin/2022-06-01#unisoc-components\">CVEs</a> targeting exploitation of vulnerabilities in firmware running in these secondary processors. Bugs remotely exploitable over the air (eg. WiFi and cellular baseband bugs) are of particular concern and, therefore, are popular within the security research community. These types of bugs even have <a href=\"https://www.zerodium.com/images/zerodium_prices_mobiles.png\">their own categorization in well known 3rd party exploit marketplaces</a>. </p><p>Regardless of whether it is remote code execution within the <a href=\"https://googleprojectzero.blogspot.com/2017/04/over-air-exploiting-broadcoms-wi-fi_4.html\">WiFi SoC</a> or within the cellular baseband, a <a href=\"https://i.blackhat.com/USA21/Wednesday-Handouts/us-21-Over-The-Air-Baseband-Exploit-Gaining-Remote-Code-Execution-On-5G-Smartphones.pdf\">common</a> and <a href=\"https://speakerdeck.com/marcograss/exploitation-of-a-modern-smartphone-baseband\">resonating</a> <a href=\"https://player.vimeo.com/video/214013463\">theme</a> has been the <em>consistent</em> lack of exploit mitigations in firmware. Conveniently, Android has significant <a href=\"https://security.googleblog.com/2021/01/data-driven-security-hardening-in.html\">experience</a>  in enabling exploit mitigations across critical attack surfaces. </p><h3><strong>Applying years worth of lessons learned in systems hardening</strong></h3>  <p>Over the last few years, we have <a href=\"https://android-developers.googleblog.com/2018/06/compiler-based-security-mitigations-in.html\">successfully enabled compiler-based mitigations</a> in Android \u2014 on the AP \u2014 which add additional layers of defense across the platform, making it harder to build reproducible exploits and to <a href=\"https://android-developers.googleblog.com/2020/06/system-hardening-in-android-11.html\">prevent certain types of bugs from becoming vulnerabilities</a>. Building on top of these successes and lessons learned, we\u2019re applying the same principles to hardening the security of firmware that runs outside of Android per se, directly on the bare-metal hardware. </p><p>In particular, we are working with our ecosystem partners in several areas aimed at hardening the security of firmware that interacts with Android: </p><ul> <li>Exploring and enabling compiler-based sanitizers (<a href=\"https://source.android.com/docs/security/test/bounds-sanitizer\">BoundSan</a>, <a href=\"https://source.android.com/docs/security/test/intsan\">IntSan</a>) and other exploit mitigations (<a href=\"https://source.android.com/docs/security/test/cfi\">CFI</a>, <a href=\"https://source.android.com/docs/security/test/kcfi\">kCFI</a>, <a href=\"https://source.android.com/docs/security/test/shadow-call-stack\">Shadow Call Stack</a>, Stack Canaries) in firmware.  <li>Enabling further memory safety features (<a href=\"https://source.android.com/docs/security/test/memory-safety/zero-initialized-memory\">Auto-initialize Memory</a>) in firmware. </li></ul><h3><strong>Bare-metal support</strong></h3>  <p>Compiler-based sanitizers <a href=\"https://releases.llvm.org/11.0.1/tools/clang/docs/UndefinedBehaviorSanitizer.html#usage\">have no runtime requirements in trapping mode</a>, which provides a meaningful layer of protection we want: it causes the program to abort execution when detecting undefined behavior. As a result, memory corruption vulnerabilities that would otherwise be exploitable are now stopped entirely. To aid developers in testing, <a href=\"https://source.android.com/devices/tech/debug/bounds-sanitizer#troubleshooting\">troubleshooting</a>, and generating bug reports on debug builds, both minimal and full diagnostics modes can be enabled, which require defining and linking the requisite runtime handlers.  </p><p>Most Control Flow Integrity (CFI) schemes also work for bare-metal targets in trapping mode. LLVM\u2019s<sup id=\"fnref1\"><a href=\"http://feeds.feedburner.com/GoogleOnlineSecurityBlog#fn1\" rel=\"footnote\">1</a></sup> CFI across shared libraries scheme (cross-DSO) is the exception as it requires a runtime to be defined for the target. Shadow Call Stack, an AArch64-only feature, has a runtime component which initializes the shadow stack. <a href=\"https://clang.llvm.org/docs/ShadowCallStack.html#compatibility\">LLVM does not provide this runtime for any target</a>, so bare-metal users would need to define that runtime to use it. </p><h3><strong>The challenge</strong></h3>  <p>Enabling exploit mitigations in firmware running on bare metal targets is no easy feat. While the AP (Application Processor) hosts a powerful operating system (Linux) with comparatively abundant CPU and memory resources, bare metal targets are often severely resource-constrained, and are tuned to run a very specific set of functions. Any perturbation in compute and/or memory consumption introduced by enabling, for example, compiler-based sanitizers, could have a significant impact in functionality, performance, and stability. </p><p>Therefore, it is critical to optimize how and where exploit mitigations are turned on. The goal is to maximize impact \u2014 harden the most exposed attack surface \u2014 while minimizing any performance/stability impact. For example, in the case of the cellular baseband, we recommend focusing on code and libraries responsible for parsing messages delivered over the air (particularly for pre-authentication protocols such as <a href=\"https://onlinelibrary.wiley.com/doi/10.1002/9781118188545.ch3\">RRC</a> and <a href=\"https://www.dialogic.com/glossary/nas\">NAS</a>, which are the most exposed attack surface), libraries encoding/decoding complex formats (for example <a href=\"https://cve.mitre.org/cgi-bin/cvekey.cgi?keyword=asn.1\">ASN.1</a>), and libraries implementing IMS (IP Multimedia System) functionality, or parsing SMS and/or MMS. </p><h3><strong>Fuzzing and Vulnerability Rewards Program</strong></h3>  <p>Enabling exploit mitigations and compiler-based sanitizers are excellent techniques to minimize the chances of unknown bugs becoming exploitable. However, it is also important to continuously look for, find, and patch bugs. </p><p>Fuzzing continues to be a highly efficient method to find impactful bugs. It\u2019s also been proven to be effective for signaling larger design issues in code. Our team partners closely with Android teams working on fuzzing and security assessments to leverage <a href=\"https://www.blackhat.com/us-22/briefings/schedule/#google-reimagined-a-phone-it-was-our-job-to-red-team-and-secure-it-27093\">their expertise and tools</a> with bare metal targets. </p><p>This collaboration also allowed us to scale fuzzing activities across Google by deploying central infrastructure that allows fuzzers to run in perpetuity. This is a high-value approach known as continuous fuzzing. </p><p>In parallel, we also accept and reward external contributions via our <a href=\"https://bughunters.google.com/about/rules/6171833274204160/android-and-google-devices-security-reward-program-rules\">Vulnerability Rewards Program</a>. Along with the launch of Android 13, we updated the <a href=\"https://source.android.com/docs/security/overview/updates-resources#severity\">severity guidelines</a> to further highlight remotely exploitable bugs in connectivity firmware. We look forward to the contributions from the security research community to help us find and patch bugs in bare metal targets. </p><h3><strong>On the horizon</strong></h3>  <p>In Android 12 we announced <a href=\"https://source.android.com/docs/setup/build/rust/building-rust-modules/overview\">support for Rust in the Android platform</a>, and Android 13 is the <a href=\"https://security.googleblog.com/2021/04/rust-in-android-platform.html\">first release with a majority of new code written in a memory safe language</a>. We see a lot of potential in also leveraging memory-safe languages for bare metal targets, particularly for high risk and exposed attack surface. </p><p>Hardening firmware running on bare metal to materially increase the level of protection -  across <em>more surfaces</em> in Android - is one of the priorities of Android Security. Moving forward, our goal is to expand the use of these mitigation technologies for more bare metal targets, and we strongly encourage our partners to do the same. We stand ready to assist our ecosystem partners to harden bare metal firmware. </p><p><em>Special thanks to our colleagues who contributed to this blog post and our firmware security hardening efforts: Diana Baker, Farzan Karimi, Jeffrey Vander Stoep, Kevin Deus, Eugene Rodionov, Pirama Arumuga Nainar, Sami Tolvanen, Stephen Hines, Xuan Xing, Yomna Nasser.</em></p> <!-- Footnotes themselves at the bottom. --> <h2>Notes</h2><div class=\"footnotes\"><hr /><ol><li id=\"fn1\"><p>     <a href=\"https://llvm.org/\">LLVM</a> - is a compiler framework used by multiple programming languages&nbsp;<a href=\"http://feeds.feedburner.com/GoogleOnlineSecurityBlog#fnref1\" rev=\"footnote\">&#8617;</a> </ol></div>",
            "links": [
                {
                    "href": "http://security.googleblog.com/feeds/2536252029687729434/comments/default",
                    "rel": "replies",
                    "title": "Post Comments",
                    "type": "application/atom+xml"
                },
                {
                    "href": "http://www.blogger.com/comment.g?blogID=1176949257541686127&postID=2536252029687729434&isPopup=true",
                    "rel": "replies",
                    "title": "0 Comments",
                    "type": "text/html"
                },
                {
                    "href": "http://www.blogger.com/feeds/1176949257541686127/posts/default/2536252029687729434",
                    "rel": "edit",
                    "type": "application/atom+xml"
                },
                {
                    "href": "http://www.blogger.com/feeds/1176949257541686127/posts/default/2536252029687729434",
                    "rel": "self",
                    "type": "application/atom+xml"
                },
                {
                    "href": "http://security.googleblog.com/2023/02/hardening-firmware-across-android.html",
                    "rel": "alternate",
                    "title": "Hardening Firmware Across the Android Ecosystem",
                    "type": "text/html"
                }
            ],
            "authors": [
                {
                    "name": "Edward Fernandez",
                    "href": "http://www.blogger.com/profile/03784424747198152685",
                    "email": "noreply@blogger.com"
                }
            ],
            "author_detail": {
                "name": "Edward Fernandez",
                "href": "http://www.blogger.com/profile/03784424747198152685",
                "email": "noreply@blogger.com"
            },
            "href": "http://www.blogger.com/profile/03784424747198152685",
            "author": "Edward Fernandez (noreply@blogger.com)",
            "gd_image": {
                "height": "16",
                "rel": "http://schemas.google.com/g/2005#thumbnail",
                "src": "https://img1.blogblog.com/img/b16-rounded.gif",
                "width": "16"
            },
            "thr_total": "0"
        },
        {
            "id": "tag:blogger.com,1999:blog-1176949257541686127.post-4563179551465660909",
            "guidislink": true,
            "link": "http://security.googleblog.com/2023/02/the-us-government-says-companies-should.html",
            "published": "2023-02-13T12:01:00.000-05:00",
            "published_parsed": [
                2023,
                2,
                13,
                17,
                1,
                0,
                0,
                44,
                0
            ],
            "updated": "2023-02-13T12:01:11.887-05:00",
            "updated_parsed": [
                2023,
                2,
                13,
                17,
                1,
                11,
                0,
                44,
                0
            ],
            "title": "The US Government says companies should take more responsibility for cyberattacks. We agree.",
            "title_detail": {
                "type": "text/plain",
                "language": null,
                "base": "http://feeds.feedburner.com/GoogleOnlineSecurityBlog",
                "value": "The US Government says companies should take more responsibility for cyberattacks. We agree."
            },
            "content": [
                {
                    "type": "text/html",
                    "language": null,
                    "base": "http://feeds.feedburner.com/GoogleOnlineSecurityBlog",
                    "value": "<span class=\"byline-author\">Posted by Kent Walker, President, Global Affairs & Chief Legal Officer, Google & Alphabet and Royal Hansen, Vice President of Engineering for Privacy, Safety, and Security</span> <p><em>Should companies be responsible for cyberattacks? The U.S. government thinks so \u2013 and frankly, we agree. </em></p><p>Jen Easterly and Eric Goldstein of the Cybersecurity and Infrastructure Security Agency at the Department of Homeland Security <a href=\"https://www.foreignaffairs.com/united-states/stop-passing-buck-cybersecurity\">planted a flag in the sand</a>:  </p><p>     <em>\u201cThe incentives for developing and selling technology have eclipsed customer safety in importance. [\u2026] Americans\u2026have unwittingly come to accept that it is normal for new software and devices to be indefensible by design. They accept products that are released to market with dozens, hundreds, or even thousands of defects. They accept that the cybersecurity burden falls disproportionately on consumers and small organizations, which are often least aware of the threat and least capable of protecting themselves.\u201d</em></p><p>We think they\u2019re right. It\u2019s time for companies to step up on their own and work with governments to help fix a flawed ecosystem. Just look at the growing threat of ransomware, where bad actors lock up organizations\u2019 systems and demand payment or ransom to restore access. Ransomware affects every industry, in every corner of the globe \u2013 and it thrives on pre-existing vulnerabilities: insecure software, indefensible architectures, and inadequate security investment.  </p><p>Remember that sophisticated ransomware operators have bosses and budgets too. They increase their return on investment by exploiting outdated and insecure technology systems that are too hard to defend. Alarmingly, the most significant source of compromise is through <a href=\"https://www.ivanti.com/resources/v/doc/pr-survey-report/ransomware-2022-spotlight-report\">exploitation of known vulnerabilities</a>, holes sometimes left unpatched for years. While law enforcement works to bring ransomware operators to justice, this merely treats the <em>symptoms</em> of the problem.  </p><p><br />Treating the <em>root causes </em>will require addressing the underlying sources of digital vulnerabilities. As Easterly and Goldstein rightly point out, \u201csecure by default\u201d and \u201csecure by design\u201d should be table stakes.  </p><p>The bottom line: People deserve <strong>products that are secure by default </strong>and systems that are built to withstand the growing onslaught from attackers.  Safety should be fundamental: built-in, enabled out of the box, and not added on as an afterthought. In other words, we need <em>secure</em> products, not <em>security</em> products. That\u2019s why Google has worked to build security in \u2013 often making it invisible \u2013 to our users. Many of our most significant security features, including innovations like SafeBrowsing, do their best work behind the scenes for our core consumer products. </p><p>There\u2019s come to be an unfortunate belief that security features are cumbersome and hurt user experience. That can be true \u2013 but it doesn\u2019t need to be. We can make the safe path the easiest, most helpful path for people using our products. Our approach to multi-factor authentication \u2013 one of the most important controls to defend against phishing attacks \u2013 provides a great example. Since 2021, we\u2019ve turned on <a href=\"https://blog.google/technology/safety-security/reducing-account-hijacking/\">2-Step Verification (2SV)</a> by default for hundreds of millions of people to add an additional layer of security across their online accounts. If we had simply announced 2SV as an available option for people to enroll in, it would have failed like so many other security add-ons. Instead, we pioneered an approach using in-app notifications that was so seamless and integrated, many of the millions of people we auto-enrolled never noticed they adopted 2SV. We\u2019ve taken this approach even further by building the \u201csecond factor\u201d right into <a href=\"https://support.google.com/accounts/answer/9289445?hl=en&amp;co=GENIE.Platform%3DAndroid\">phones</a> \u2013 giving people the strongest form of account security as soon as they have their device.  </p><p>As for secure by design: We all have to shift our focus from reactive incident response to <strong>upstream software development.</strong> That will demand a completely new approach to how companies build products and services. We\u2019ve learned a lot in the past decade about reengineering security architectures, and actively apply those learnings to keep people safe online every day. Ensuring technology is secure by design should be like balancing budgets \u2014 a part of business as usual. However, it isn\u2019t easy to cut-and-paste solutions here: developers need to think deeply about the threats their products will face, and design them from the ground up to withstand those attacks. And the same principles are true for securing the development process as they are for users: the secure engineering choice must also be the easiest and most helpful one.  </p><p>Building security into every stage of the software development process takes work, but recent innovations, like our <a href=\"https://security.googleblog.com/2021/06/introducing-slsa-end-to-end-framework.html\">SLSA framework</a> for secure software supply chains, and new <a href=\"https://security.googleblog.com/2022/12/memory-safe-languages-in-android-13.html\">general purpose memory-safe languages</a>, are making it easier. Perhaps most significantly, adopting modern cloud architectures makes it easier to define and enforce secure software development policies.   </p><p><strong>Persistent</strong> <strong>collaboration between private and public sector partners is essential</strong>.<strong> </strong>No company can solve the cybersecurity challenge on its own. It\u2019s a collective action problem that demands a<strong> collective solution</strong>, including international coordination and collaboration. Many public and private initiatives \u2014 threat sharing, incident response, law enforcement cooperation \u2014 are valuable, but address only <em>symptoms</em>, not <em>root causes</em>. We can do better than just holding attackers to account after the fact.  </p><p>As Easterly and Goldstein write, \u201cAmericans need a new model, one they can trust to ensure the safety and integrity of the technology that they use every hour of every day.\u201d Again, we agree, but in this case we\u2019d take it a step further. Building this model and ensuring it can scale calls for close cooperation between tech companies, standards bodies, and government agencies. But since technologies and companies cross borders, we also need to take a global view: Cybersecurity is a team sport, and international coordination is essential to avoid conflicting requirements that unintentionally make it harder to secure software. Broad regulatory cooperation on cybersecurity will promote secure-by-default principles for everyone. This approach holds enormous promise, and not just for technologically advanced nations. Raising the security benchmark for basic consumer and enterprise technologies that all nations rely on offers far more bang for the buck. A far wider range of countries and companies can take these simple steps than can employ advanced cyber initiatives like detailed threat sharing and close operational collaboration. Given the interdependent nature of the ecosystem, we are only as strong as our weakest link. That means raising cyber standards globally will improve American resilience as well.  </p><p>Of course, raising the security baseline won\u2019t stop all bad actors, and software will likely always have flaws \u2013 but we can start by covering the basics, fixing the most egregious security risks, and coming up with new approaches that eliminate entire classes of threats. Google has made investments in the past two decades, but contributing resources is just a piece of the puzzle.   It's work for all of us, but it's the responsible thing to do: The safety and security of our increasingly digitized world depends on it.  </p>"
                }
            ],
            "summary": "<span class=\"byline-author\">Posted by Kent Walker, President, Global Affairs & Chief Legal Officer, Google & Alphabet and Royal Hansen, Vice President of Engineering for Privacy, Safety, and Security</span> <p><em>Should companies be responsible for cyberattacks? The U.S. government thinks so \u2013 and frankly, we agree. </em></p><p>Jen Easterly and Eric Goldstein of the Cybersecurity and Infrastructure Security Agency at the Department of Homeland Security <a href=\"https://www.foreignaffairs.com/united-states/stop-passing-buck-cybersecurity\">planted a flag in the sand</a>:  </p><p>     <em>\u201cThe incentives for developing and selling technology have eclipsed customer safety in importance. [\u2026] Americans\u2026have unwittingly come to accept that it is normal for new software and devices to be indefensible by design. They accept products that are released to market with dozens, hundreds, or even thousands of defects. They accept that the cybersecurity burden falls disproportionately on consumers and small organizations, which are often least aware of the threat and least capable of protecting themselves.\u201d</em></p><p>We think they\u2019re right. It\u2019s time for companies to step up on their own and work with governments to help fix a flawed ecosystem. Just look at the growing threat of ransomware, where bad actors lock up organizations\u2019 systems and demand payment or ransom to restore access. Ransomware affects every industry, in every corner of the globe \u2013 and it thrives on pre-existing vulnerabilities: insecure software, indefensible architectures, and inadequate security investment.  </p><p>Remember that sophisticated ransomware operators have bosses and budgets too. They increase their return on investment by exploiting outdated and insecure technology systems that are too hard to defend. Alarmingly, the most significant source of compromise is through <a href=\"https://www.ivanti.com/resources/v/doc/pr-survey-report/ransomware-2022-spotlight-report\">exploitation of known vulnerabilities</a>, holes sometimes left unpatched for years. While law enforcement works to bring ransomware operators to justice, this merely treats the <em>symptoms</em> of the problem.  </p><p><br />Treating the <em>root causes </em>will require addressing the underlying sources of digital vulnerabilities. As Easterly and Goldstein rightly point out, \u201csecure by default\u201d and \u201csecure by design\u201d should be table stakes.  </p><p>The bottom line: People deserve <strong>products that are secure by default </strong>and systems that are built to withstand the growing onslaught from attackers.  Safety should be fundamental: built-in, enabled out of the box, and not added on as an afterthought. In other words, we need <em>secure</em> products, not <em>security</em> products. That\u2019s why Google has worked to build security in \u2013 often making it invisible \u2013 to our users. Many of our most significant security features, including innovations like SafeBrowsing, do their best work behind the scenes for our core consumer products. </p><p>There\u2019s come to be an unfortunate belief that security features are cumbersome and hurt user experience. That can be true \u2013 but it doesn\u2019t need to be. We can make the safe path the easiest, most helpful path for people using our products. Our approach to multi-factor authentication \u2013 one of the most important controls to defend against phishing attacks \u2013 provides a great example. Since 2021, we\u2019ve turned on <a href=\"https://blog.google/technology/safety-security/reducing-account-hijacking/\">2-Step Verification (2SV)</a> by default for hundreds of millions of people to add an additional layer of security across their online accounts. If we had simply announced 2SV as an available option for people to enroll in, it would have failed like so many other security add-ons. Instead, we pioneered an approach using in-app notifications that was so seamless and integrated, many of the millions of people we auto-enrolled never noticed they adopted 2SV. We\u2019ve taken this approach even further by building the \u201csecond factor\u201d right into <a href=\"https://support.google.com/accounts/answer/9289445?hl=en&amp;co=GENIE.Platform%3DAndroid\">phones</a> \u2013 giving people the strongest form of account security as soon as they have their device.  </p><p>As for secure by design: We all have to shift our focus from reactive incident response to <strong>upstream software development.</strong> That will demand a completely new approach to how companies build products and services. We\u2019ve learned a lot in the past decade about reengineering security architectures, and actively apply those learnings to keep people safe online every day. Ensuring technology is secure by design should be like balancing budgets \u2014 a part of business as usual. However, it isn\u2019t easy to cut-and-paste solutions here: developers need to think deeply about the threats their products will face, and design them from the ground up to withstand those attacks. And the same principles are true for securing the development process as they are for users: the secure engineering choice must also be the easiest and most helpful one.  </p><p>Building security into every stage of the software development process takes work, but recent innovations, like our <a href=\"https://security.googleblog.com/2021/06/introducing-slsa-end-to-end-framework.html\">SLSA framework</a> for secure software supply chains, and new <a href=\"https://security.googleblog.com/2022/12/memory-safe-languages-in-android-13.html\">general purpose memory-safe languages</a>, are making it easier. Perhaps most significantly, adopting modern cloud architectures makes it easier to define and enforce secure software development policies.   </p><p><strong>Persistent</strong> <strong>collaboration between private and public sector partners is essential</strong>.<strong> </strong>No company can solve the cybersecurity challenge on its own. It\u2019s a collective action problem that demands a<strong> collective solution</strong>, including international coordination and collaboration. Many public and private initiatives \u2014 threat sharing, incident response, law enforcement cooperation \u2014 are valuable, but address only <em>symptoms</em>, not <em>root causes</em>. We can do better than just holding attackers to account after the fact.  </p><p>As Easterly and Goldstein write, \u201cAmericans need a new model, one they can trust to ensure the safety and integrity of the technology that they use every hour of every day.\u201d Again, we agree, but in this case we\u2019d take it a step further. Building this model and ensuring it can scale calls for close cooperation between tech companies, standards bodies, and government agencies. But since technologies and companies cross borders, we also need to take a global view: Cybersecurity is a team sport, and international coordination is essential to avoid conflicting requirements that unintentionally make it harder to secure software. Broad regulatory cooperation on cybersecurity will promote secure-by-default principles for everyone. This approach holds enormous promise, and not just for technologically advanced nations. Raising the security benchmark for basic consumer and enterprise technologies that all nations rely on offers far more bang for the buck. A far wider range of countries and companies can take these simple steps than can employ advanced cyber initiatives like detailed threat sharing and close operational collaboration. Given the interdependent nature of the ecosystem, we are only as strong as our weakest link. That means raising cyber standards globally will improve American resilience as well.  </p><p>Of course, raising the security baseline won\u2019t stop all bad actors, and software will likely always have flaws \u2013 but we can start by covering the basics, fixing the most egregious security risks, and coming up with new approaches that eliminate entire classes of threats. Google has made investments in the past two decades, but contributing resources is just a piece of the puzzle.   It's work for all of us, but it's the responsible thing to do: The safety and security of our increasingly digitized world depends on it.  </p>",
            "links": [
                {
                    "href": "http://security.googleblog.com/feeds/4563179551465660909/comments/default",
                    "rel": "replies",
                    "title": "Post Comments",
                    "type": "application/atom+xml"
                },
                {
                    "href": "http://www.blogger.com/comment.g?blogID=1176949257541686127&postID=4563179551465660909&isPopup=true",
                    "rel": "replies",
                    "title": "0 Comments",
                    "type": "text/html"
                },
                {
                    "href": "http://www.blogger.com/feeds/1176949257541686127/posts/default/4563179551465660909",
                    "rel": "edit",
                    "type": "application/atom+xml"
                },
                {
                    "href": "http://www.blogger.com/feeds/1176949257541686127/posts/default/4563179551465660909",
                    "rel": "self",
                    "type": "application/atom+xml"
                },
                {
                    "href": "http://security.googleblog.com/2023/02/the-us-government-says-companies-should.html",
                    "rel": "alternate",
                    "title": "The US Government says companies should take more responsibility for cyberattacks. We agree. ",
                    "type": "text/html"
                }
            ],
            "authors": [
                {
                    "name": "Google",
                    "href": "http://www.blogger.com/profile/11822708545141062574",
                    "email": "noreply@blogger.com"
                }
            ],
            "author_detail": {
                "name": "Google",
                "href": "http://www.blogger.com/profile/11822708545141062574",
                "email": "noreply@blogger.com"
            },
            "href": "http://www.blogger.com/profile/11822708545141062574",
            "author": "Google (noreply@blogger.com)",
            "gd_image": {
                "height": "16",
                "rel": "http://schemas.google.com/g/2005#thumbnail",
                "src": "https://img1.blogblog.com/img/b16-rounded.gif",
                "width": "16"
            },
            "thr_total": "0"
        },
        {
            "id": "tag:blogger.com,1999:blog-1176949257541686127.post-5472284988377201943",
            "guidislink": true,
            "link": "http://security.googleblog.com/2023/02/taking-next-step-oss-fuzz-in-2023.html",
            "published": "2023-02-01T13:00:00.000-05:00",
            "published_parsed": [
                2023,
                2,
                1,
                18,
                0,
                0,
                2,
                32,
                0
            ],
            "updated": "2023-02-01T13:00:49.639-05:00",
            "updated_parsed": [
                2023,
                2,
                1,
                18,
                0,
                49,
                2,
                32,
                0
            ],
            "title": "Taking the next step: OSS-Fuzz in 2023",
            "title_detail": {
                "type": "text/plain",
                "language": null,
                "base": "http://feeds.feedburner.com/GoogleOnlineSecurityBlog",
                "value": "Taking the next step: OSS-Fuzz in 2023"
            },
            "content": [
                {
                    "type": "text/html",
                    "language": null,
                    "base": "http://feeds.feedburner.com/GoogleOnlineSecurityBlog",
                    "value": "<span class=\"byline-author\">Posted by Oliver Chang, OSS-Fuzz team</span> <p>Since <a href=\"https://security.googleblog.com/2016/12/announcing-oss-fuzz-continuous-fuzzing.html\">launching in 2016</a>, Google's free OSS-Fuzz code testing service has helped get over <a href=\"https://bugs.chromium.org/p/oss-fuzz/issues/list?q=status%3AFixed%2CVerified%20Type%3DBug-Security&amp;can=1\">8800</a> vulnerabilities and <a href=\"https://bugs.chromium.org/p/oss-fuzz/issues/list?q=status%3AFixed%2CVerified%20Type%3DBug&amp;can=1\">28,000</a> bugs fixed across <a href=\"https://github.com/google/oss-fuzz/tree/master/projects\">850</a> projects. Today, we\u2019re happy to announce an expansion of our OSS-Fuzz Rewards Program, plus new features in OSS-Fuzz and our involvement in supporting academic fuzzing research. </p><h1>Refreshed OSS-Fuzz rewards </h1>  <p>The OSS-Fuzz project's purpose is to support the open source community in adopting fuzz testing, or <a href=\"https://github.com/google/fuzzing/blob/master/docs/why-fuzz.md\">fuzzing</a> \u2014 an automated code testing technique for uncovering bugs in software. In addition to the OSS-Fuzz service, which provides a free platform for continuous fuzzing to critical open source projects, we established an <a href=\"https://testing.googleblog.com/2017/05/oss-fuzz-five-months-later-and.html\">OSS-Fuzz Reward Program</a> in 2017 as part of our wider <a href=\"https://bughunters.google.com/about/rules/4928084514701312/patch-rewards-program-rules\">Patch Rewards Program</a>. </p><p>We\u2019ve operated this successfully for the past 5 years, and to date, the OSS-Fuzz Reward Program has awarded over $600,000 to over 65 different contributors for their help integrating new projects into OSS-Fuzz.  </p><p>Today, we\u2019re excited to announce that we\u2019ve expanded the scope of the OSS-Fuzz Reward Program considerably, introducing many new types of rewards!  </p><p>These <a href=\"https://bughunters.google.com/about/rules/5097259337383936/oss-fuzz-reward-program-rules\">new reward types</a> cover contributions such as: </p><ul> <li>Project fuzzing coverage increases   <li>Notable FuzzBench fuzzer integrations  <li>Integrating a new sanitizer (<a href=\"https://security.googleblog.com/2022/09/fuzzing-beyond-memory-corruption.html\">example</a>) that finds two new vulnerabilities </li></ul><p>These changes boost the total rewards possible per project integration from a maximum of $20,000 to $30,000 (depending on the criticality of the project). In addition, we\u2019ve also established two new reward categories that reward wider improvements across all OSS-Fuzz projects, with up to $11,337 available per category.  </p><p>For more details, see the <a href=\"https://bughunters.google.com/about/rules/5097259337383936/oss-fuzz-reward-program-rules\">fully updated rules</a> for our dedicated OSS-Fuzz Reward Program. </p><h1>OSS-Fuzz improvements</h1>  <p>We\u2019ve continuously made improvements to OSS-Fuzz\u2019s infrastructure over the years and expanded our language offerings to cover C/C++, Go, Rust, Java, Python, and Swift, and have introduced support for new frameworks such as <a href=\"https://github.com/google/fuzztest\">FuzzTest</a>. Additionally, as part of an ongoing collaboration with Code Intelligence, we\u2019ll soon have <a href=\"https://github.com/google/oss-fuzz/issues/8324\">support for JavaScript fuzzing</a> through <a href=\"https://www.code-intelligence.com/blog/jazzer-js\">Jazzer.js</a>.   </p><h1>FuzzIntrospector support</h1>  <p>Last year, we<a href=\"https://openssf.org/blog/2022/06/09/introducing-fuzz-introspector-an-openssf-tool-to-improve-fuzzing-coverage/\"> launched the OpenSSF FuzzIntrospector </a>tool and integrated it into OSS-Fuzz.  </p><p>We\u2019ve continued to build on this by adding new language support and better analysis, and now <a href=\"https://oss-fuzz-introspector.storage.googleapis.com/index.html\">C/C++, Python, and Java projects integrated into OSS-Fuzz</a> have detailed insights on how the coverage and fuzzing effectiveness for a project can be improved.  </p><p>The <a href=\"https://github.com/ossf/fuzz-introspector\">FuzzIntrospector</a> tool provides these insights by identifying complex code blocks that are blocked during fuzzing at runtime, as well as suggesting new fuzz targets that can be added. We\u2019ve seen users successfully use this tool to improve the coverage of <em><a href=\"https://github.com/ossf/fuzz-introspector/blob/main/doc/CaseStudies.md#jsonnet\">jsonnet</a></em>, <em><a href=\"https://github.com/ossf/fuzz-introspector/blob/main/doc/CaseStudies.md#file\">file</a></em>, <em><a href=\"https://github.com/ossf/fuzz-introspector/blob/main/doc/CaseStudies.md#xpdf\">xpdf</a></em> and <em><a href=\"https://github.com/ossf/fuzz-introspector/blob/main/doc/CaseStudies.md#bzip2\">bzip2</a></em>, among others. </p><p>Anyone can use this tool to increase the coverage of a project and in turn be rewarded as part of the <a href=\"https://bughunters.google.com/about/rules/5097259337383936/oss-fuzz-reward-program-rules#fuzzing-coverage\">refreshed OSS-Fuzz rewards</a>. See the <a href=\"https://oss-fuzz-introspector.storage.googleapis.com/index.html\">full list</a> of all OSS-Fuzz FuzzIntrospector reports to get started.  </p><h1>Fuzzing research and competition </h1>  <p>The OSS-Fuzz team maintains <a href=\"https://google.github.io/fuzzbench/\">FuzzBench</a>, a service that enables security researchers in academia to test fuzzing improvements against real-world open source projects. Approaching its third anniversary in serving free benchmarking, FuzzBench is <a href=\"https://scholar.google.com/scholar?hl=en&amp;as_sdt=0%2C5&amp;q=fuzzbench&amp;btnG=\">cited by over 100 papers</a> and has been used as a platform for academic fuzzing workshops such as <a href=\"https://fuzzingworkshop.github.io/\">NDSS\u201922</a>.  </p><p>This year, FuzzBench has been invited to participate in the <a href=\"https://sbft23.github.io/\">SBFT'23</a> workshop in <a href=\"https://conf.researchr.org/home/icse-2023\">ICSE</a>, a premier research conference in the field, which for the first time is hosting <a href=\"https://sbft23.github.io/tools/fuzzing\">a fuzzing competition</a>. During this competition, the FuzzBench platform will be used to evaluate state-of-the-art fuzzers submitted by researchers from around the globe on both code coverage and bug-finding metrics.  </p><h1>Get involved! </h1>  <p>We believe these initiatives will help scale security testing efforts across the broader open source ecosystem. We hope to accelerate the integration of critical open source projects into OSS-Fuzz by providing stronger incentives to security researchers and open source maintainers. Combined with our involvement in fuzzing research, these efforts are making OSS-Fuzz an even more powerful tool, enabling users to find more bugs, and, more critically, find them before the bad guys do! </p>"
                }
            ],
            "summary": "<span class=\"byline-author\">Posted by Oliver Chang, OSS-Fuzz team</span> <p>Since <a href=\"https://security.googleblog.com/2016/12/announcing-oss-fuzz-continuous-fuzzing.html\">launching in 2016</a>, Google's free OSS-Fuzz code testing service has helped get over <a href=\"https://bugs.chromium.org/p/oss-fuzz/issues/list?q=status%3AFixed%2CVerified%20Type%3DBug-Security&amp;can=1\">8800</a> vulnerabilities and <a href=\"https://bugs.chromium.org/p/oss-fuzz/issues/list?q=status%3AFixed%2CVerified%20Type%3DBug&amp;can=1\">28,000</a> bugs fixed across <a href=\"https://github.com/google/oss-fuzz/tree/master/projects\">850</a> projects. Today, we\u2019re happy to announce an expansion of our OSS-Fuzz Rewards Program, plus new features in OSS-Fuzz and our involvement in supporting academic fuzzing research. </p><h1>Refreshed OSS-Fuzz rewards </h1>  <p>The OSS-Fuzz project's purpose is to support the open source community in adopting fuzz testing, or <a href=\"https://github.com/google/fuzzing/blob/master/docs/why-fuzz.md\">fuzzing</a> \u2014 an automated code testing technique for uncovering bugs in software. In addition to the OSS-Fuzz service, which provides a free platform for continuous fuzzing to critical open source projects, we established an <a href=\"https://testing.googleblog.com/2017/05/oss-fuzz-five-months-later-and.html\">OSS-Fuzz Reward Program</a> in 2017 as part of our wider <a href=\"https://bughunters.google.com/about/rules/4928084514701312/patch-rewards-program-rules\">Patch Rewards Program</a>. </p><p>We\u2019ve operated this successfully for the past 5 years, and to date, the OSS-Fuzz Reward Program has awarded over $600,000 to over 65 different contributors for their help integrating new projects into OSS-Fuzz.  </p><p>Today, we\u2019re excited to announce that we\u2019ve expanded the scope of the OSS-Fuzz Reward Program considerably, introducing many new types of rewards!  </p><p>These <a href=\"https://bughunters.google.com/about/rules/5097259337383936/oss-fuzz-reward-program-rules\">new reward types</a> cover contributions such as: </p><ul> <li>Project fuzzing coverage increases   <li>Notable FuzzBench fuzzer integrations  <li>Integrating a new sanitizer (<a href=\"https://security.googleblog.com/2022/09/fuzzing-beyond-memory-corruption.html\">example</a>) that finds two new vulnerabilities </li></ul><p>These changes boost the total rewards possible per project integration from a maximum of $20,000 to $30,000 (depending on the criticality of the project). In addition, we\u2019ve also established two new reward categories that reward wider improvements across all OSS-Fuzz projects, with up to $11,337 available per category.  </p><p>For more details, see the <a href=\"https://bughunters.google.com/about/rules/5097259337383936/oss-fuzz-reward-program-rules\">fully updated rules</a> for our dedicated OSS-Fuzz Reward Program. </p><h1>OSS-Fuzz improvements</h1>  <p>We\u2019ve continuously made improvements to OSS-Fuzz\u2019s infrastructure over the years and expanded our language offerings to cover C/C++, Go, Rust, Java, Python, and Swift, and have introduced support for new frameworks such as <a href=\"https://github.com/google/fuzztest\">FuzzTest</a>. Additionally, as part of an ongoing collaboration with Code Intelligence, we\u2019ll soon have <a href=\"https://github.com/google/oss-fuzz/issues/8324\">support for JavaScript fuzzing</a> through <a href=\"https://www.code-intelligence.com/blog/jazzer-js\">Jazzer.js</a>.   </p><h1>FuzzIntrospector support</h1>  <p>Last year, we<a href=\"https://openssf.org/blog/2022/06/09/introducing-fuzz-introspector-an-openssf-tool-to-improve-fuzzing-coverage/\"> launched the OpenSSF FuzzIntrospector </a>tool and integrated it into OSS-Fuzz.  </p><p>We\u2019ve continued to build on this by adding new language support and better analysis, and now <a href=\"https://oss-fuzz-introspector.storage.googleapis.com/index.html\">C/C++, Python, and Java projects integrated into OSS-Fuzz</a> have detailed insights on how the coverage and fuzzing effectiveness for a project can be improved.  </p><p>The <a href=\"https://github.com/ossf/fuzz-introspector\">FuzzIntrospector</a> tool provides these insights by identifying complex code blocks that are blocked during fuzzing at runtime, as well as suggesting new fuzz targets that can be added. We\u2019ve seen users successfully use this tool to improve the coverage of <em><a href=\"https://github.com/ossf/fuzz-introspector/blob/main/doc/CaseStudies.md#jsonnet\">jsonnet</a></em>, <em><a href=\"https://github.com/ossf/fuzz-introspector/blob/main/doc/CaseStudies.md#file\">file</a></em>, <em><a href=\"https://github.com/ossf/fuzz-introspector/blob/main/doc/CaseStudies.md#xpdf\">xpdf</a></em> and <em><a href=\"https://github.com/ossf/fuzz-introspector/blob/main/doc/CaseStudies.md#bzip2\">bzip2</a></em>, among others. </p><p>Anyone can use this tool to increase the coverage of a project and in turn be rewarded as part of the <a href=\"https://bughunters.google.com/about/rules/5097259337383936/oss-fuzz-reward-program-rules#fuzzing-coverage\">refreshed OSS-Fuzz rewards</a>. See the <a href=\"https://oss-fuzz-introspector.storage.googleapis.com/index.html\">full list</a> of all OSS-Fuzz FuzzIntrospector reports to get started.  </p><h1>Fuzzing research and competition </h1>  <p>The OSS-Fuzz team maintains <a href=\"https://google.github.io/fuzzbench/\">FuzzBench</a>, a service that enables security researchers in academia to test fuzzing improvements against real-world open source projects. Approaching its third anniversary in serving free benchmarking, FuzzBench is <a href=\"https://scholar.google.com/scholar?hl=en&amp;as_sdt=0%2C5&amp;q=fuzzbench&amp;btnG=\">cited by over 100 papers</a> and has been used as a platform for academic fuzzing workshops such as <a href=\"https://fuzzingworkshop.github.io/\">NDSS\u201922</a>.  </p><p>This year, FuzzBench has been invited to participate in the <a href=\"https://sbft23.github.io/\">SBFT'23</a> workshop in <a href=\"https://conf.researchr.org/home/icse-2023\">ICSE</a>, a premier research conference in the field, which for the first time is hosting <a href=\"https://sbft23.github.io/tools/fuzzing\">a fuzzing competition</a>. During this competition, the FuzzBench platform will be used to evaluate state-of-the-art fuzzers submitted by researchers from around the globe on both code coverage and bug-finding metrics.  </p><h1>Get involved! </h1>  <p>We believe these initiatives will help scale security testing efforts across the broader open source ecosystem. We hope to accelerate the integration of critical open source projects into OSS-Fuzz by providing stronger incentives to security researchers and open source maintainers. Combined with our involvement in fuzzing research, these efforts are making OSS-Fuzz an even more powerful tool, enabling users to find more bugs, and, more critically, find them before the bad guys do! </p>",
            "links": [
                {
                    "href": "http://security.googleblog.com/feeds/5472284988377201943/comments/default",
                    "rel": "replies",
                    "title": "Post Comments",
                    "type": "application/atom+xml"
                },
                {
                    "href": "http://www.blogger.com/comment.g?blogID=1176949257541686127&postID=5472284988377201943&isPopup=true",
                    "rel": "replies",
                    "title": "0 Comments",
                    "type": "text/html"
                },
                {
                    "href": "http://www.blogger.com/feeds/1176949257541686127/posts/default/5472284988377201943",
                    "rel": "edit",
                    "type": "application/atom+xml"
                },
                {
                    "href": "http://www.blogger.com/feeds/1176949257541686127/posts/default/5472284988377201943",
                    "rel": "self",
                    "type": "application/atom+xml"
                },
                {
                    "href": "http://security.googleblog.com/2023/02/taking-next-step-oss-fuzz-in-2023.html",
                    "rel": "alternate",
                    "title": "Taking the next step: OSS-Fuzz in 2023",
                    "type": "text/html"
                }
            ],
            "authors": [
                {
                    "name": "Google",
                    "href": "http://www.blogger.com/profile/11822708545141062574",
                    "email": "noreply@blogger.com"
                }
            ],
            "author_detail": {
                "name": "Google",
                "href": "http://www.blogger.com/profile/11822708545141062574",
                "email": "noreply@blogger.com"
            },
            "href": "http://www.blogger.com/profile/11822708545141062574",
            "author": "Google (noreply@blogger.com)",
            "gd_image": {
                "height": "16",
                "rel": "http://schemas.google.com/g/2005#thumbnail",
                "src": "https://img1.blogblog.com/img/b16-rounded.gif",
                "width": "16"
            },
            "thr_total": "0"
        },
        {
            "id": "tag:blogger.com,1999:blog-1176949257541686127.post-976481015804218737",
            "guidislink": true,
            "link": "http://security.googleblog.com/2023/01/sustaining-digital-certificate-security_13.html",
            "published": "2023-01-13T12:29:00.000-05:00",
            "published_parsed": [
                2023,
                1,
                13,
                17,
                29,
                0,
                4,
                13,
                0
            ],
            "updated": "2023-01-13T12:29:06.386-05:00",
            "updated_parsed": [
                2023,
                1,
                13,
                17,
                29,
                6,
                4,
                13,
                0
            ],
            "tags": [
                {
                    "term": "chrome",
                    "scheme": "http://www.blogger.com/atom/ns#",
                    "label": null
                },
                {
                    "term": "chrome security",
                    "scheme": "http://www.blogger.com/atom/ns#",
                    "label": null
                }
            ],
            "title": "Sustaining Digital Certificate Security - TrustCor Certificate Distrust",
            "title_detail": {
                "type": "text/plain",
                "language": null,
                "base": "http://feeds.feedburner.com/GoogleOnlineSecurityBlog",
                "value": "Sustaining Digital Certificate Security - TrustCor Certificate Distrust"
            },
            "content": [
                {
                    "type": "text/html",
                    "language": null,
                    "base": "http://feeds.feedburner.com/GoogleOnlineSecurityBlog",
                    "value": "<span class=\"byline-author\">Posted by Chrome Root Program, Chrome Security Team</span> <p><em>Note: This post is a follow-up to discussions carried out on the Mozilla \u201c<a href=\"https://groups.google.com/a/mozilla.org/g/dev-security-policy\">Dev Security Policy</a>\u201d Web PKI public discussion forum Google Group in December 2022. Google Chrome communicated its distrust of TrustCor in the public forum on December 15, 2022.</em></p><p>The Chrome Security Team prioritizes the security and privacy of Chrome\u2019s users, and we are unwilling to compromise on these values.  </p><p>Google includes or removes CA certificates within the <a href=\"https://blog.chromium.org/2022/09/announcing-launch-of-chrome-root-program.html\">Chrome Root Store</a> as it deems appropriate for user safety in accordance with our policies. The selection and ongoing inclusion of CA certificates is done to enhance the security of Chrome and promote interoperability.  </p><p>Behavior that attempts to degrade or subvert security and privacy on the web is incompatible with organizations whose CA certificates are included in the Chrome Root Store. Due to a loss of confidence in its ability to uphold these fundamental principles and to protect and safeguard Chrome\u2019s users, certificates issued by TrustCor Systems will no longer be recognized as trusted by: </p><ul> <li>Chrome versions 111 (landing in Beta approximately February 9, 2023 and Stable approximately March 7, 2023) and greater; and  <li>Older versions of Chrome capable of receiving <a href=\"https://chromium.googlesource.com/chromium/src/+/lkgr/components/component_updater/README.md\">Component Updates</a> after Chrome 111\u2019s Stable release date. </li></ul><p>This change was <a href=\"https://groups.google.com/a/mozilla.org/g/dev-security-policy/c/oxX69KFvsm4/m/PKpJf5W6AQAJ\">first communicated</a> in the Mozilla \u201cDev Security Policy\u201d Web PKI public discussion forum Google Group on December 15, 2022. </p><p>This change will be implemented via our existing mechanisms to respond to CA incidents via: </p><ul> <li>An integrated certificate blocklist, and  <li>Removal of certificates included in the Chrome Root Store. </li></ul><p>Beginning approximately March 7, 2023, navigations to websites that use a certificate that chains to one of the roots detailed below will be considered insecure and result in a full page certificate error interstitial. </p><p>Affected Certificates (SHA-256 fingerprint): </p><ul> <li><a href=\"https://crt.sh/?q=d40e9c86cd8fe468c1776959f49ea774fa548684b6c406f3909261f4dce2575c\">d40e9c86cd8fe468c1776959f49ea774fa548684b6c406f3909261f4dce2575c</a> <li><a href=\"https://crt.sh/?q=0753e940378c1bd5e3836e395daea5cb839e5046f1bd0eae1951cf10fec7c965\">0753e940378c1bd5e3836e395daea5cb839e5046f1bd0eae1951cf10fec7c965</a>   <li><a href=\"https://crt.sh/?q=5a885db19c01d912c5759388938cafbbdf031ab2d48e91ee15589b42971d039c\">5a885db19c01d912c5759388938cafbbdf031ab2d48e91ee15589b42971d039c</a>  </li></ul><p>This change will be integrated into the Chromium open-source project as part of a default build. Questions about the expected behavior in specific Chromium-based browsers should be directed to their maintainers. </p><p>This change will be incorporated as part of the regular Chrome release process to ensure sufficient time for testing and replacing affected certificates by website operators. Information about release timetables and milestones is available at <a href=\"https://chromiumdash.appspot.com/schedule\">https://chromiumdash.appspot.com/schedule</a>. </p><p>Beginning approximately February 9, 2023, website operators can preview these changes in Chrome 111 Beta. Website operators will also be able to preview the change sooner, using our Dev and Canary channels. The majority of users will not encounter behavior changes until the release of Chrome 111 to the Stable channel, approximately March 7, 2023. </p><p><span style=\"text-decoration: underline;\">Summarizing security response of other Google products:</span></p><ul> <li><strong>Android</strong> has removed TrustCor\u2019s root CA certificates from the set of platform trusted certificates shipping with future operating system versions. Existing versions of Android will distrust TrustCor\u2019s root CA certificates on a similar timeline as described above for Chrome.  <li><strong>Gmail </strong>is finalizing its action plan and updates will be made available in the future."
                }
            ],
            "summary": "<span class=\"byline-author\">Posted by Chrome Root Program, Chrome Security Team</span> <p><em>Note: This post is a follow-up to discussions carried out on the Mozilla \u201c<a href=\"https://groups.google.com/a/mozilla.org/g/dev-security-policy\">Dev Security Policy</a>\u201d Web PKI public discussion forum Google Group in December 2022. Google Chrome communicated its distrust of TrustCor in the public forum on December 15, 2022.</em></p><p>The Chrome Security Team prioritizes the security and privacy of Chrome\u2019s users, and we are unwilling to compromise on these values.  </p><p>Google includes or removes CA certificates within the <a href=\"https://blog.chromium.org/2022/09/announcing-launch-of-chrome-root-program.html\">Chrome Root Store</a> as it deems appropriate for user safety in accordance with our policies. The selection and ongoing inclusion of CA certificates is done to enhance the security of Chrome and promote interoperability.  </p><p>Behavior that attempts to degrade or subvert security and privacy on the web is incompatible with organizations whose CA certificates are included in the Chrome Root Store. Due to a loss of confidence in its ability to uphold these fundamental principles and to protect and safeguard Chrome\u2019s users, certificates issued by TrustCor Systems will no longer be recognized as trusted by: </p><ul> <li>Chrome versions 111 (landing in Beta approximately February 9, 2023 and Stable approximately March 7, 2023) and greater; and  <li>Older versions of Chrome capable of receiving <a href=\"https://chromium.googlesource.com/chromium/src/+/lkgr/components/component_updater/README.md\">Component Updates</a> after Chrome 111\u2019s Stable release date. </li></ul><p>This change was <a href=\"https://groups.google.com/a/mozilla.org/g/dev-security-policy/c/oxX69KFvsm4/m/PKpJf5W6AQAJ\">first communicated</a> in the Mozilla \u201cDev Security Policy\u201d Web PKI public discussion forum Google Group on December 15, 2022. </p><p>This change will be implemented via our existing mechanisms to respond to CA incidents via: </p><ul> <li>An integrated certificate blocklist, and  <li>Removal of certificates included in the Chrome Root Store. </li></ul><p>Beginning approximately March 7, 2023, navigations to websites that use a certificate that chains to one of the roots detailed below will be considered insecure and result in a full page certificate error interstitial. </p><p>Affected Certificates (SHA-256 fingerprint): </p><ul> <li><a href=\"https://crt.sh/?q=d40e9c86cd8fe468c1776959f49ea774fa548684b6c406f3909261f4dce2575c\">d40e9c86cd8fe468c1776959f49ea774fa548684b6c406f3909261f4dce2575c</a> <li><a href=\"https://crt.sh/?q=0753e940378c1bd5e3836e395daea5cb839e5046f1bd0eae1951cf10fec7c965\">0753e940378c1bd5e3836e395daea5cb839e5046f1bd0eae1951cf10fec7c965</a>   <li><a href=\"https://crt.sh/?q=5a885db19c01d912c5759388938cafbbdf031ab2d48e91ee15589b42971d039c\">5a885db19c01d912c5759388938cafbbdf031ab2d48e91ee15589b42971d039c</a>  </li></ul><p>This change will be integrated into the Chromium open-source project as part of a default build. Questions about the expected behavior in specific Chromium-based browsers should be directed to their maintainers. </p><p>This change will be incorporated as part of the regular Chrome release process to ensure sufficient time for testing and replacing affected certificates by website operators. Information about release timetables and milestones is available at <a href=\"https://chromiumdash.appspot.com/schedule\">https://chromiumdash.appspot.com/schedule</a>. </p><p>Beginning approximately February 9, 2023, website operators can preview these changes in Chrome 111 Beta. Website operators will also be able to preview the change sooner, using our Dev and Canary channels. The majority of users will not encounter behavior changes until the release of Chrome 111 to the Stable channel, approximately March 7, 2023. </p><p><span style=\"text-decoration: underline;\">Summarizing security response of other Google products:</span></p><ul> <li><strong>Android</strong> has removed TrustCor\u2019s root CA certificates from the set of platform trusted certificates shipping with future operating system versions. Existing versions of Android will distrust TrustCor\u2019s root CA certificates on a similar timeline as described above for Chrome.  <li><strong>Gmail </strong>is finalizing its action plan and updates will be made available in the future.",
            "links": [
                {
                    "href": "http://security.googleblog.com/feeds/976481015804218737/comments/default",
                    "rel": "replies",
                    "title": "Post Comments",
                    "type": "application/atom+xml"
                },
                {
                    "href": "http://www.blogger.com/comment.g?blogID=1176949257541686127&postID=976481015804218737&isPopup=true",
                    "rel": "replies",
                    "title": "0 Comments",
                    "type": "text/html"
                },
                {
                    "href": "http://www.blogger.com/feeds/1176949257541686127/posts/default/976481015804218737",
                    "rel": "edit",
                    "type": "application/atom+xml"
                },
                {
                    "href": "http://www.blogger.com/feeds/1176949257541686127/posts/default/976481015804218737",
                    "rel": "self",
                    "type": "application/atom+xml"
                },
                {
                    "href": "http://security.googleblog.com/2023/01/sustaining-digital-certificate-security_13.html",
                    "rel": "alternate",
                    "title": "Sustaining Digital Certificate Security - TrustCor Certificate Distrust",
                    "type": "text/html"
                }
            ],
            "authors": [
                {
                    "name": "Edward Fernandez",
                    "href": "http://www.blogger.com/profile/03784424747198152685",
                    "email": "noreply@blogger.com"
                }
            ],
            "author_detail": {
                "name": "Edward Fernandez",
                "href": "http://www.blogger.com/profile/03784424747198152685",
                "email": "noreply@blogger.com"
            },
            "href": "http://www.blogger.com/profile/03784424747198152685",
            "author": "Edward Fernandez (noreply@blogger.com)",
            "gd_image": {
                "height": "16",
                "rel": "http://schemas.google.com/g/2005#thumbnail",
                "src": "https://img1.blogblog.com/img/b16-rounded.gif",
                "width": "16"
            },
            "thr_total": "0"
        },
        {
            "id": "tag:blogger.com,1999:blog-1176949257541686127.post-335024895422944819",
            "guidislink": true,
            "link": "http://security.googleblog.com/2023/01/supporting-use-of-rust-in-chromium.html",
            "published": "2023-01-12T12:26:00.004-05:00",
            "published_parsed": [
                2023,
                1,
                12,
                17,
                26,
                0,
                3,
                12,
                0
            ],
            "updated": "2023-01-13T11:45:21.985-05:00",
            "updated_parsed": [
                2023,
                1,
                13,
                16,
                45,
                21,
                4,
                13,
                0
            ],
            "tags": [
                {
                    "term": "chrome",
                    "scheme": "http://www.blogger.com/atom/ns#",
                    "label": null
                },
                {
                    "term": "chrome security",
                    "scheme": "http://www.blogger.com/atom/ns#",
                    "label": null
                }
            ],
            "title": "Supporting the Use of Rust in the Chromium Project",
            "title_detail": {
                "type": "text/plain",
                "language": null,
                "base": "http://feeds.feedburner.com/GoogleOnlineSecurityBlog",
                "value": "Supporting the Use of Rust in the Chromium Project"
            },
            "content": [
                {
                    "type": "text/html",
                    "language": null,
                    "base": "http://feeds.feedburner.com/GoogleOnlineSecurityBlog",
                    "value": "<span class=\"byline-author\">Posted by Dana Jansens (she/her), Chrome Security Team </span> <p>We are pleased to announce that moving forward, the Chromium project is going to support the use of third-party Rust libraries from C++ in Chromium. To do so, we are now actively pursuing adding a <a href=\"https://bugs.chromium.org/p/chromium/issues/detail?id=1292038\">production Rust toolchain</a> to our build system. This will enable us to include Rust code in the Chrome binary within the next year. We\u2019re starting slow and setting clear expectations on <a href=\"https://chromium.googlesource.com/chromium/src/+/main/docs/adding_to_third_party.md#Rust\">what libraries we will consider</a> once we\u2019re ready. </p><p>In this blog post, we will discuss how we arrived at the decision to support third-party Rust libraries at this time, and not broader usage of Rust in Chromium. </p><p><strong>Why We Chose to Bring Rust into Chromium</strong></p><p>Our goal in bringing Rust into Chromium is to <strong>provide a simpler</strong> (no IPC) and<strong> safer</strong> (less complex C++ overall, no memory safety bugs in a sandbox either) <strong>way to satisfy <a href=\"https://chromium.googlesource.com/chromium/src/+/master/docs/security/rule-of-2.md\">the rule of two</a>, in order to speed up development</strong> (less code to write, less design docs, less security review) <strong>and improve the security</strong> (increasing the number of lines of code without memory safety bugs, decreasing the bug density of code)<strong> of Chrome</strong>. And we believe that we can use third-party Rust libraries to work toward this goal. </p><p>Rust was developed by Mozilla specifically for use in writing a browser, so it\u2019s very fitting that Chromium would finally begin to rely on this technology too. Thank you Mozilla for your huge contribution to the systems software industry. Rust has been an incredible proof that we should be able to expect a language to provide safety while also being performant. </p><p><p>We know that C++ and Rust can play together nicely, through tools like <a href=\"https://github.com/dtolnay/cxx\">cxx</a>, <a href=\"https://github.com/google/autocxx\">autocxx</a> <a href=\"https://rust-lang.github.io/rust-bindgen/\">bindgen</a>, <a href=\"https://github.com/eqrion/cbindgen\">cbindgen</a>, <a href=\"https://github.com/rust-diplomat/diplomat\">diplomat</a>, and (experimental) <a href=\"https://github.com/google/crubit\">crubit</a>. However there are also limitations. We can expect that the shape of these limitations will change in time through new or improved tools, but the decisions and descriptions here are based on the current state of technology. </p></p><p><strong>How Chromium Will Support the Use of Rust</strong></p><p>The Chrome Security team has been investing time into researching how we should approach using Rust alongside our C++ code. Understanding the implications of incrementally moving to writing Rust instead of C++, even in the middle of our software stack. What <a href=\"https://bugs.chromium.org/p/chromium/issues/detail?id=1296314\">the limits</a> of safe, simple, and reliable interop might be. </p><p>Based on our research, we landed on two outcomes for Chromium. </p><ol> <li>We will support interop in only a single direction, from C++ to Rust, for now. Chromium is written in C++, and the majority of stack frames are in C++ code, right from main() until exit(), which is why we chose this direction. By limiting interop to a single direction, we control the shape of the dependency tree. Rust can not depend on C++ so it cannot know about C++ types and functions, except through dependency injection. In this way, Rust can not land in arbitrary C++ code, only in functions passed through the API from C++.  <li>We will only support third-party libraries for now. Third-party libraries are written as standalone components, they don\u2019t hold implicit knowledge about the implementation of Chromium. This means they have APIs that are simpler and focused on their single task. Or, put another way, they typically have a narrow interface, without complex pointer graphs and shared ownership. We will be reviewing libraries that we bring in for C++ use to ensure they fit this expectation. </li></ol> <p><strong>The Interop Between Rust and C++ in Chromium</strong></p><p>We have observed that most successful C/C++ and Rust interop stories to date have been built around interop through narrow APIs (e.g. libraries for <a href=\"https://github.com/cloudflare/quiche#calling-quiche-from-cc\">QUIC</a> or <a href=\"https://cs.android.com/android/platform/superproject/+/master:packages/modules/Bluetooth/system/gd/rust/shim/src/bridge.rs\">bluetooth</a>, Linux drivers) or through clearly isolated components (e.g. IDLs, IPCs). Chrome is built on foundational but <a href=\"https://source.chromium.org/chromium/chromium/src/+/main:content/public/browser/web_contents_observer.h\">really wide C++ APIs</a>, such as the //content/public layer. We examined what it would mean for us to build Rust components against these types of APIs. At a high level what we found was that because C++ and Rust play by different rules, things can go sideways very easily. </p><p>For example, Rust guarantees temporal memory safety with static analysis that relies on two inputs: <a href=\"https://doc.rust-lang.org/book/ch10-03-lifetime-syntax.html\">lifetimes</a> (<a href=\"https://doc.rust-lang.org/reference/lifetime-elision.html\">inferred</a> or explicitly written) and <a href=\"https://doc.rust-lang.org/rust-by-example/scope/borrow/alias.html\">exclusive mutability</a>. The latter is incompatible with how the majority of Chromium\u2019s C++ is written. We hold redundant mutable pointers throughout the system, and pointers that provide multiple paths to reach mutable pointers. We have <a href=\"https://source.chromium.org/chromium/chromium/src/+/main:content/browser/renderer_host/frame_tree_node.h;l=667;drc=1e6c1a39cbbc1dcad6e7828661d74d76463465ed\">cyclical</a> <a href=\"https://source.chromium.org/chromium/chromium/src/+/main:content/browser/renderer_host/render_frame_host_impl.h;l=3714;drc=1e6c1a39cbbc1dcad6e7828661d74d76463465ed\">mutable</a> data structures. This is especially true in our browser process, which contains a giant interconnected system of (mutable) pointers. If these C++ pointers were also used as Rust references in a complex or long-lived way, it would require our C++ authors to understand the aliasing rules of Rust and prevent the possibility of violating them, such as by: </p><ul> <li>Returning the same mutable pointer from a function twice, where the first may still be held.  <li>Passing overlapping pointers where one is mutable into Rust, in a way that they may be held as references at the same time.  <li>Mutating state that is visible to Rust through a shared or mutable reference. </li></ul><p>Without interop tools providing support via the compiler and the type system, developers would need to understand all of the assumptions being made by Rust compiler, in order to not violate them from C++. In this framing, C++ is much like unsafe Rust. And while unsafe Rust is very costly to a project, its cost is managed by keeping it <a href=\"https://chromium.googlesource.com/chromium/src/+/master/docs/security/rule-of-2.md#unsafe-code-in-safe-languages\">encapsulated and to the minimum possible</a>. In the same way, the full complexity of C++ would need to be encapsulated from safe Rust. Narrow APIs designed for interop can provide similar encapsulation, and we hope that interop tools can provide encapsulation in other ways that allow wider APIs between the languages. </p><p>The high-level summary is that without additional interop tooling support: </p><ul> <li>Passing pointers/references across languages is risky.  <li>Narrow interfaces between the languages is critical to make it feasible to write code correctly. </li></ul><p>Any cross-language interop between arbitrary code introduces difficulties where concepts in one language are not found in the other. For Rust calling into C++, support for language features like templates or inheritance can be difficult for a binding generator to support. For C++ calling into Rust, proc macros, and traits are examples that provide similar challenges. At times, the impedance mismatch represents intentional design choices made for either language, however they also imply limits on FFI (interop) between the languages. We rely on interop tools to model the ideas of each language in a way that makes sense to the other, or to disallow them. </p><p><strong>Accessing the Rust Ecosystem from Chromium</strong></p><p>These challenges present an opportunity, both to make interop easier and more seamless, but also to get access to a wider range of libraries from either language. Google is investing in <a href=\"https://github.com/google/crubit\">Crubit</a>, an experiment in how to increase the fidelity of interop between C++ and Rust and express or encapsulate the requirements of each language to the other. </p><p>The Rust ecosystem is incredibly important, especially to a security-focused open source project like Chromium. The ecosystem is enormous (96k+ crates on <a href=\"https://crates.io/\">crates.io</a>) and growing, with <a href=\"https://www.abetterinternet.org/documents/2022-ISRG-Annual-Report.pdf\">investment</a> from the systems development industry at large, including Google. Chrome relies heavily on third-party code, and we need to keep up with where that third-party investment is happening. It is critical that we build out support for including Rust into the Chromium project. </p><p>We will be following this strategy to establish norms, and to maintain a level of API review through the third-party process, while we look to the future of interop support pushing the boundaries of what is possible and reasonable to do between Rust and C++. </p><p><br /><strong>Some Other Related Content</strong></p><p>Memory unsafety is an industry-wide problem, and making use of Rust is one part of a strategy to move the needle in this area. Recently, <a href=\"https://security.googleblog.com/2022/12/memory-safe-languages-in-android-13.html\">Android</a> and <a href=\"https://security.apple.com/blog/towards-the-next-generation-of-xnu-memory-safety/\">Apple</a> have each published a great blog post on the subject if you\u2019re interested in learning more. With Chrome\u2019s millions of lines of C++, we\u2019re still working hard to improve the safety of our C++ too, through projects such as <a href=\"https://security.googleblog.com/2022/09/use-after-freedom-miracleptr.html\">MiraclePtr</a>. </p>"
                }
            ],
            "summary": "<span class=\"byline-author\">Posted by Dana Jansens (she/her), Chrome Security Team </span> <p>We are pleased to announce that moving forward, the Chromium project is going to support the use of third-party Rust libraries from C++ in Chromium. To do so, we are now actively pursuing adding a <a href=\"https://bugs.chromium.org/p/chromium/issues/detail?id=1292038\">production Rust toolchain</a> to our build system. This will enable us to include Rust code in the Chrome binary within the next year. We\u2019re starting slow and setting clear expectations on <a href=\"https://chromium.googlesource.com/chromium/src/+/main/docs/adding_to_third_party.md#Rust\">what libraries we will consider</a> once we\u2019re ready. </p><p>In this blog post, we will discuss how we arrived at the decision to support third-party Rust libraries at this time, and not broader usage of Rust in Chromium. </p><p><strong>Why We Chose to Bring Rust into Chromium</strong></p><p>Our goal in bringing Rust into Chromium is to <strong>provide a simpler</strong> (no IPC) and<strong> safer</strong> (less complex C++ overall, no memory safety bugs in a sandbox either) <strong>way to satisfy <a href=\"https://chromium.googlesource.com/chromium/src/+/master/docs/security/rule-of-2.md\">the rule of two</a>, in order to speed up development</strong> (less code to write, less design docs, less security review) <strong>and improve the security</strong> (increasing the number of lines of code without memory safety bugs, decreasing the bug density of code)<strong> of Chrome</strong>. And we believe that we can use third-party Rust libraries to work toward this goal. </p><p>Rust was developed by Mozilla specifically for use in writing a browser, so it\u2019s very fitting that Chromium would finally begin to rely on this technology too. Thank you Mozilla for your huge contribution to the systems software industry. Rust has been an incredible proof that we should be able to expect a language to provide safety while also being performant. </p><p><p>We know that C++ and Rust can play together nicely, through tools like <a href=\"https://github.com/dtolnay/cxx\">cxx</a>, <a href=\"https://github.com/google/autocxx\">autocxx</a> <a href=\"https://rust-lang.github.io/rust-bindgen/\">bindgen</a>, <a href=\"https://github.com/eqrion/cbindgen\">cbindgen</a>, <a href=\"https://github.com/rust-diplomat/diplomat\">diplomat</a>, and (experimental) <a href=\"https://github.com/google/crubit\">crubit</a>. However there are also limitations. We can expect that the shape of these limitations will change in time through new or improved tools, but the decisions and descriptions here are based on the current state of technology. </p></p><p><strong>How Chromium Will Support the Use of Rust</strong></p><p>The Chrome Security team has been investing time into researching how we should approach using Rust alongside our C++ code. Understanding the implications of incrementally moving to writing Rust instead of C++, even in the middle of our software stack. What <a href=\"https://bugs.chromium.org/p/chromium/issues/detail?id=1296314\">the limits</a> of safe, simple, and reliable interop might be. </p><p>Based on our research, we landed on two outcomes for Chromium. </p><ol> <li>We will support interop in only a single direction, from C++ to Rust, for now. Chromium is written in C++, and the majority of stack frames are in C++ code, right from main() until exit(), which is why we chose this direction. By limiting interop to a single direction, we control the shape of the dependency tree. Rust can not depend on C++ so it cannot know about C++ types and functions, except through dependency injection. In this way, Rust can not land in arbitrary C++ code, only in functions passed through the API from C++.  <li>We will only support third-party libraries for now. Third-party libraries are written as standalone components, they don\u2019t hold implicit knowledge about the implementation of Chromium. This means they have APIs that are simpler and focused on their single task. Or, put another way, they typically have a narrow interface, without complex pointer graphs and shared ownership. We will be reviewing libraries that we bring in for C++ use to ensure they fit this expectation. </li></ol> <p><strong>The Interop Between Rust and C++ in Chromium</strong></p><p>We have observed that most successful C/C++ and Rust interop stories to date have been built around interop through narrow APIs (e.g. libraries for <a href=\"https://github.com/cloudflare/quiche#calling-quiche-from-cc\">QUIC</a> or <a href=\"https://cs.android.com/android/platform/superproject/+/master:packages/modules/Bluetooth/system/gd/rust/shim/src/bridge.rs\">bluetooth</a>, Linux drivers) or through clearly isolated components (e.g. IDLs, IPCs). Chrome is built on foundational but <a href=\"https://source.chromium.org/chromium/chromium/src/+/main:content/public/browser/web_contents_observer.h\">really wide C++ APIs</a>, such as the //content/public layer. We examined what it would mean for us to build Rust components against these types of APIs. At a high level what we found was that because C++ and Rust play by different rules, things can go sideways very easily. </p><p>For example, Rust guarantees temporal memory safety with static analysis that relies on two inputs: <a href=\"https://doc.rust-lang.org/book/ch10-03-lifetime-syntax.html\">lifetimes</a> (<a href=\"https://doc.rust-lang.org/reference/lifetime-elision.html\">inferred</a> or explicitly written) and <a href=\"https://doc.rust-lang.org/rust-by-example/scope/borrow/alias.html\">exclusive mutability</a>. The latter is incompatible with how the majority of Chromium\u2019s C++ is written. We hold redundant mutable pointers throughout the system, and pointers that provide multiple paths to reach mutable pointers. We have <a href=\"https://source.chromium.org/chromium/chromium/src/+/main:content/browser/renderer_host/frame_tree_node.h;l=667;drc=1e6c1a39cbbc1dcad6e7828661d74d76463465ed\">cyclical</a> <a href=\"https://source.chromium.org/chromium/chromium/src/+/main:content/browser/renderer_host/render_frame_host_impl.h;l=3714;drc=1e6c1a39cbbc1dcad6e7828661d74d76463465ed\">mutable</a> data structures. This is especially true in our browser process, which contains a giant interconnected system of (mutable) pointers. If these C++ pointers were also used as Rust references in a complex or long-lived way, it would require our C++ authors to understand the aliasing rules of Rust and prevent the possibility of violating them, such as by: </p><ul> <li>Returning the same mutable pointer from a function twice, where the first may still be held.  <li>Passing overlapping pointers where one is mutable into Rust, in a way that they may be held as references at the same time.  <li>Mutating state that is visible to Rust through a shared or mutable reference. </li></ul><p>Without interop tools providing support via the compiler and the type system, developers would need to understand all of the assumptions being made by Rust compiler, in order to not violate them from C++. In this framing, C++ is much like unsafe Rust. And while unsafe Rust is very costly to a project, its cost is managed by keeping it <a href=\"https://chromium.googlesource.com/chromium/src/+/master/docs/security/rule-of-2.md#unsafe-code-in-safe-languages\">encapsulated and to the minimum possible</a>. In the same way, the full complexity of C++ would need to be encapsulated from safe Rust. Narrow APIs designed for interop can provide similar encapsulation, and we hope that interop tools can provide encapsulation in other ways that allow wider APIs between the languages. </p><p>The high-level summary is that without additional interop tooling support: </p><ul> <li>Passing pointers/references across languages is risky.  <li>Narrow interfaces between the languages is critical to make it feasible to write code correctly. </li></ul><p>Any cross-language interop between arbitrary code introduces difficulties where concepts in one language are not found in the other. For Rust calling into C++, support for language features like templates or inheritance can be difficult for a binding generator to support. For C++ calling into Rust, proc macros, and traits are examples that provide similar challenges. At times, the impedance mismatch represents intentional design choices made for either language, however they also imply limits on FFI (interop) between the languages. We rely on interop tools to model the ideas of each language in a way that makes sense to the other, or to disallow them. </p><p><strong>Accessing the Rust Ecosystem from Chromium</strong></p><p>These challenges present an opportunity, both to make interop easier and more seamless, but also to get access to a wider range of libraries from either language. Google is investing in <a href=\"https://github.com/google/crubit\">Crubit</a>, an experiment in how to increase the fidelity of interop between C++ and Rust and express or encapsulate the requirements of each language to the other. </p><p>The Rust ecosystem is incredibly important, especially to a security-focused open source project like Chromium. The ecosystem is enormous (96k+ crates on <a href=\"https://crates.io/\">crates.io</a>) and growing, with <a href=\"https://www.abetterinternet.org/documents/2022-ISRG-Annual-Report.pdf\">investment</a> from the systems development industry at large, including Google. Chrome relies heavily on third-party code, and we need to keep up with where that third-party investment is happening. It is critical that we build out support for including Rust into the Chromium project. </p><p>We will be following this strategy to establish norms, and to maintain a level of API review through the third-party process, while we look to the future of interop support pushing the boundaries of what is possible and reasonable to do between Rust and C++. </p><p><br /><strong>Some Other Related Content</strong></p><p>Memory unsafety is an industry-wide problem, and making use of Rust is one part of a strategy to move the needle in this area. Recently, <a href=\"https://security.googleblog.com/2022/12/memory-safe-languages-in-android-13.html\">Android</a> and <a href=\"https://security.apple.com/blog/towards-the-next-generation-of-xnu-memory-safety/\">Apple</a> have each published a great blog post on the subject if you\u2019re interested in learning more. With Chrome\u2019s millions of lines of C++, we\u2019re still working hard to improve the safety of our C++ too, through projects such as <a href=\"https://security.googleblog.com/2022/09/use-after-freedom-miracleptr.html\">MiraclePtr</a>. </p>",
            "links": [
                {
                    "href": "http://security.googleblog.com/feeds/335024895422944819/comments/default",
                    "rel": "replies",
                    "title": "Post Comments",
                    "type": "application/atom+xml"
                },
                {
                    "href": "http://www.blogger.com/comment.g?blogID=1176949257541686127&postID=335024895422944819&isPopup=true",
                    "rel": "replies",
                    "title": "0 Comments",
                    "type": "text/html"
                },
                {
                    "href": "http://www.blogger.com/feeds/1176949257541686127/posts/default/335024895422944819",
                    "rel": "edit",
                    "type": "application/atom+xml"
                },
                {
                    "href": "http://www.blogger.com/feeds/1176949257541686127/posts/default/335024895422944819",
                    "rel": "self",
                    "type": "application/atom+xml"
                },
                {
                    "href": "http://security.googleblog.com/2023/01/supporting-use-of-rust-in-chromium.html",
                    "rel": "alternate",
                    "title": "Supporting the Use of Rust in the Chromium Project",
                    "type": "text/html"
                }
            ],
            "authors": [
                {
                    "name": "Edward Fernandez",
                    "href": "http://www.blogger.com/profile/03784424747198152685",
                    "email": "noreply@blogger.com"
                }
            ],
            "author_detail": {
                "name": "Edward Fernandez",
                "href": "http://www.blogger.com/profile/03784424747198152685",
                "email": "noreply@blogger.com"
            },
            "href": "http://www.blogger.com/profile/03784424747198152685",
            "author": "Edward Fernandez (noreply@blogger.com)",
            "gd_image": {
                "height": "16",
                "rel": "http://schemas.google.com/g/2005#thumbnail",
                "src": "https://img1.blogblog.com/img/b16-rounded.gif",
                "width": "16"
            },
            "thr_total": "0"
        },
        {
            "id": "tag:blogger.com,1999:blog-1176949257541686127.post-2869785041299000963",
            "guidislink": true,
            "link": "http://security.googleblog.com/2022/12/app-defense-alliance-expansion.html",
            "published": "2022-12-15T11:59:00.001-05:00",
            "published_parsed": [
                2022,
                12,
                15,
                16,
                59,
                0,
                3,
                349,
                0
            ],
            "updated": "2022-12-15T20:51:24.745-05:00",
            "updated_parsed": [
                2022,
                12,
                16,
                1,
                51,
                24,
                4,
                350,
                0
            ],
            "tags": [
                {
                    "term": "android",
                    "scheme": "http://www.blogger.com/atom/ns#",
                    "label": null
                },
                {
                    "term": "android security",
                    "scheme": "http://www.blogger.com/atom/ns#",
                    "label": null
                },
                {
                    "term": "app security",
                    "scheme": "http://www.blogger.com/atom/ns#",
                    "label": null
                }
            ],
            "title": "Expanding the App Defense Alliance",
            "title_detail": {
                "type": "text/plain",
                "language": null,
                "base": "http://feeds.feedburner.com/GoogleOnlineSecurityBlog",
                "value": "Expanding the App Defense Alliance"
            },
            "content": [
                {
                    "type": "text/html",
                    "language": null,
                    "base": "http://feeds.feedburner.com/GoogleOnlineSecurityBlog",
                    "value": "<span class=\"byline-author\">Posted by Brooke Davis, Android Security and Privacy Team</span> <p>The App Defense Alliance <a href=\"https://security.googleblog.com/2019/11/the-app-defense-alliance-bringing.html\">launched</a> in 2019 with a mission to protect Android users from bad apps through shared intelligence and coordinated detection between alliance partners.  Earlier this year, the App Defense Alliance expanded to include new initiatives outside of malware detection and is now the home for several industry-led collaborations including Malware Mitigation, MASA (Mobile App Security Assessment) & CASA (Cloud App Security Assessment). With a new dedicated landing page at <a href=\"https://appdefensealliance.dev/\">appdefensealliance.dev</a>, the ADA has an expanded mission to protect Android users by removing threats while improving app quality across the ecosystem. Let\u2019s walk through some of the latest program updates from the past year, including the addition of new ADA members.   </p><p><strong>Malware Mitigation</strong></p><p>Together, with the founding ADA members - Google, ESET, Lookout, and Zimperium, the alliance has been able to <a href=\"https://appdefensealliance.dev/malware-mitigation\">reduce the risk of app-based malware</a>  and better protect Android users. These partners have access to mobile apps as they are being submitted to the Google Play Store and scan thousands of apps daily, acting as another, vital set of eyes prior to an app going live on Play. Knowledge sharing and industry collaboration are important aspects in securing the world from attacks and that\u2019s why we\u2019re continuing to invest in the program.   </p><p><br /><strong>New ADA Members</strong></p><p>We\u2019re excited to see the ADA expand with the additions of <a href=\"https://www.mcafee.com/\">McAfee</a> and <a href=\"https://www.trendmicro.com/\">Trend Micro</a>.  Both McAfee and Trend Micro are leaders in the antivirus space and we look forward to their contributions to the program. </p><p><strong>Mobile App Security Assessment (MASA)<span style=\"text-decoration: underline;\"></span></strong></p><p>With consumers spending four to five hours per day in mobile apps, ensuring the safety of these services is more important than ever. According to Data.ai, the pandemic accelerated existing mobile habits - with app categories like finance growing 25% YoY and users spending over 100 billion hours in shopping apps.   </p><p>That\u2019s why the ADA introduced <a href=\"https://appdefensealliance.dev/masa\">MASA</a> (Mobile App Security Assessment), which allows developers to have their apps independently validated against the Mobile Application Security Verification Standard (<a href=\"https://owasp.org/www-project-mobile-security-testing-guide/\">MASVS</a> standard) under the OWASP Mobile Application Security project. The project\u2019s mission is to \u201cDefine the industry standard for mobile application security,\u201d and has been used by both public and private sector organizations as a form of industry best practices when it comes to mobile application security. Developers can work directly with an ADA Authorized Lab to have their apps evaluated against a set of <a href=\"https://github.com/appdefensealliance/ASA/blob/main/MobileAppSecurityAssessment/MobileSecurityGuide.md\">MASVS L1 requirements.</a> Once successful, the app\u2019s validation is listed in the recently launched <a href=\"https://appdefensealliance.dev/directory\">App Validation Directory,</a> which provides users a single place to view all app validations. The Directory also allows users to access more assessment details including validation date, test lab, and a report showing all test steps and requirements. The Directory will be updated over time with new features and search functionality to make it more user friendly.  </p><p>The Google Play Store is the first commercial app store to recognize and display a badge for any app that has completed an independent security review through ADA MASA. The badge is displayed within an app\u2019s respective <a href=\"https://support.google.com/googleplay/android-developer/answer/10787469#zippy=%2Cindependent-security-review-optional-feature-available-sooning-data-safety-in-play-console.html%2Cindependent-security-review-optional-feature-available-soon%2Cindependent-security-review-available-to-all-apps\">Data Safety section</a>.  <div class=\"separator\" style=\"clear: both;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgYDgqL0Dt0qgahu9dVKJLpl9tDi6LG2RuhjY-36Y1XU1GutQtN-uNseDvBGam4DOYVM4ewGtOuLnwq_KJjcKvV0ZqYnepeta7VHj-cBg6OuYHkB8XAXkwdQuzqVL-sIzgCDJGMIMIK1-0_De5SyCgCwK-6Uc4jX4SrMwrIa1AbQlRuBU6acxKHPzqqcw/s1600/17530%20l%20Images%20for%20Android%20Security%20Blog_01.png\" style=\"display: block; padding: 1em 0; text-align: center;\"><img alt=\"\" border=\"0\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgYDgqL0Dt0qgahu9dVKJLpl9tDi6LG2RuhjY-36Y1XU1GutQtN-uNseDvBGam4DOYVM4ewGtOuLnwq_KJjcKvV0ZqYnepeta7VHj-cBg6OuYHkB8XAXkwdQuzqVL-sIzgCDJGMIMIK1-0_De5SyCgCwK-6Uc4jX4SrMwrIa1AbQlRuBU6acxKHPzqqcw/s1600/17530%20l%20Images%20for%20Android%20Security%20Blog_01.png\" /></a></div>   This MASA program launched in beta earlier this year and is now available for all developers.  We\u2019ve seen strong early developer interest with leading apps across a diverse set of categories completing validation including Roblox, Uber, PayPal, Threema, Google Photos, YouTube and many more. On average, developers have completed validation within a month and resolved two outstanding issues identified by a security lab.   </p><p>To learn more about the program and to help developers get started, there\u2019s a Play Academy course dedicated to independent security review. Check out the interactive guidance on the <a href=\"https://playacademy.exceedlms.com/student/path/337023/activity/942196\">Academy for App Success</a> and get started today! </p><p><strong>Cloud App Security Assessment (CASA)</strong></p><p>As the industry continues to evolve and software connects more systems through complex cloud-to-cloud integrations, focusing on the security of cloud applications and their supporting infrastructure becomes increasingly critical. <a href=\"https://appdefensealliance.dev/casa\">CASA</a> (Cloud App Security Assessment) leverages the work set forth in OWASP\u2019s Application Security Verification Standard ASVS to provide a consistent set of requirements to harden security for any application. The CASA framework provides multiple assurance levels in which low-risk cloud applications can be evaluated using either a self assessment or automated scan. For applications which present higher risk (such as a large user base, recent security breach, or processes highly sensitive data), an Authorized Lab may perform an assessment. </p><p>Further, the CASA <a href=\"https://appdefensealliance.dev/casa/casa-accelerator\">accelerator</a> provides developers with a workflow that minimizes the required checks depending on the developer's current valid certifications. The CASA checks have been mapped to 10 certifications and frameworks which eliminate redundant testing while lowering the cost of the assessment. Google is continuing to invest in this space with plans to use ASVS more proactively with the developer community next year.  </p><p>It's been amazing to see the ADA grow this year and we are excited for the continued progress and expansion around the alliance\u2019s mission. </p>"
                }
            ],
            "summary": "<span class=\"byline-author\">Posted by Brooke Davis, Android Security and Privacy Team</span> <p>The App Defense Alliance <a href=\"https://security.googleblog.com/2019/11/the-app-defense-alliance-bringing.html\">launched</a> in 2019 with a mission to protect Android users from bad apps through shared intelligence and coordinated detection between alliance partners.  Earlier this year, the App Defense Alliance expanded to include new initiatives outside of malware detection and is now the home for several industry-led collaborations including Malware Mitigation, MASA (Mobile App Security Assessment) & CASA (Cloud App Security Assessment). With a new dedicated landing page at <a href=\"https://appdefensealliance.dev/\">appdefensealliance.dev</a>, the ADA has an expanded mission to protect Android users by removing threats while improving app quality across the ecosystem. Let\u2019s walk through some of the latest program updates from the past year, including the addition of new ADA members.   </p><p><strong>Malware Mitigation</strong></p><p>Together, with the founding ADA members - Google, ESET, Lookout, and Zimperium, the alliance has been able to <a href=\"https://appdefensealliance.dev/malware-mitigation\">reduce the risk of app-based malware</a>  and better protect Android users. These partners have access to mobile apps as they are being submitted to the Google Play Store and scan thousands of apps daily, acting as another, vital set of eyes prior to an app going live on Play. Knowledge sharing and industry collaboration are important aspects in securing the world from attacks and that\u2019s why we\u2019re continuing to invest in the program.   </p><p><br /><strong>New ADA Members</strong></p><p>We\u2019re excited to see the ADA expand with the additions of <a href=\"https://www.mcafee.com/\">McAfee</a> and <a href=\"https://www.trendmicro.com/\">Trend Micro</a>.  Both McAfee and Trend Micro are leaders in the antivirus space and we look forward to their contributions to the program. </p><p><strong>Mobile App Security Assessment (MASA)<span style=\"text-decoration: underline;\"></span></strong></p><p>With consumers spending four to five hours per day in mobile apps, ensuring the safety of these services is more important than ever. According to Data.ai, the pandemic accelerated existing mobile habits - with app categories like finance growing 25% YoY and users spending over 100 billion hours in shopping apps.   </p><p>That\u2019s why the ADA introduced <a href=\"https://appdefensealliance.dev/masa\">MASA</a> (Mobile App Security Assessment), which allows developers to have their apps independently validated against the Mobile Application Security Verification Standard (<a href=\"https://owasp.org/www-project-mobile-security-testing-guide/\">MASVS</a> standard) under the OWASP Mobile Application Security project. The project\u2019s mission is to \u201cDefine the industry standard for mobile application security,\u201d and has been used by both public and private sector organizations as a form of industry best practices when it comes to mobile application security. Developers can work directly with an ADA Authorized Lab to have their apps evaluated against a set of <a href=\"https://github.com/appdefensealliance/ASA/blob/main/MobileAppSecurityAssessment/MobileSecurityGuide.md\">MASVS L1 requirements.</a> Once successful, the app\u2019s validation is listed in the recently launched <a href=\"https://appdefensealliance.dev/directory\">App Validation Directory,</a> which provides users a single place to view all app validations. The Directory also allows users to access more assessment details including validation date, test lab, and a report showing all test steps and requirements. The Directory will be updated over time with new features and search functionality to make it more user friendly.  </p><p>The Google Play Store is the first commercial app store to recognize and display a badge for any app that has completed an independent security review through ADA MASA. The badge is displayed within an app\u2019s respective <a href=\"https://support.google.com/googleplay/android-developer/answer/10787469#zippy=%2Cindependent-security-review-optional-feature-available-sooning-data-safety-in-play-console.html%2Cindependent-security-review-optional-feature-available-soon%2Cindependent-security-review-available-to-all-apps\">Data Safety section</a>.  <div class=\"separator\" style=\"clear: both;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgYDgqL0Dt0qgahu9dVKJLpl9tDi6LG2RuhjY-36Y1XU1GutQtN-uNseDvBGam4DOYVM4ewGtOuLnwq_KJjcKvV0ZqYnepeta7VHj-cBg6OuYHkB8XAXkwdQuzqVL-sIzgCDJGMIMIK1-0_De5SyCgCwK-6Uc4jX4SrMwrIa1AbQlRuBU6acxKHPzqqcw/s1600/17530%20l%20Images%20for%20Android%20Security%20Blog_01.png\" style=\"display: block; padding: 1em 0; text-align: center;\"><img alt=\"\" border=\"0\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgYDgqL0Dt0qgahu9dVKJLpl9tDi6LG2RuhjY-36Y1XU1GutQtN-uNseDvBGam4DOYVM4ewGtOuLnwq_KJjcKvV0ZqYnepeta7VHj-cBg6OuYHkB8XAXkwdQuzqVL-sIzgCDJGMIMIK1-0_De5SyCgCwK-6Uc4jX4SrMwrIa1AbQlRuBU6acxKHPzqqcw/s1600/17530%20l%20Images%20for%20Android%20Security%20Blog_01.png\" /></a></div>   This MASA program launched in beta earlier this year and is now available for all developers.  We\u2019ve seen strong early developer interest with leading apps across a diverse set of categories completing validation including Roblox, Uber, PayPal, Threema, Google Photos, YouTube and many more. On average, developers have completed validation within a month and resolved two outstanding issues identified by a security lab.   </p><p>To learn more about the program and to help developers get started, there\u2019s a Play Academy course dedicated to independent security review. Check out the interactive guidance on the <a href=\"https://playacademy.exceedlms.com/student/path/337023/activity/942196\">Academy for App Success</a> and get started today! </p><p><strong>Cloud App Security Assessment (CASA)</strong></p><p>As the industry continues to evolve and software connects more systems through complex cloud-to-cloud integrations, focusing on the security of cloud applications and their supporting infrastructure becomes increasingly critical. <a href=\"https://appdefensealliance.dev/casa\">CASA</a> (Cloud App Security Assessment) leverages the work set forth in OWASP\u2019s Application Security Verification Standard ASVS to provide a consistent set of requirements to harden security for any application. The CASA framework provides multiple assurance levels in which low-risk cloud applications can be evaluated using either a self assessment or automated scan. For applications which present higher risk (such as a large user base, recent security breach, or processes highly sensitive data), an Authorized Lab may perform an assessment. </p><p>Further, the CASA <a href=\"https://appdefensealliance.dev/casa/casa-accelerator\">accelerator</a> provides developers with a workflow that minimizes the required checks depending on the developer's current valid certifications. The CASA checks have been mapped to 10 certifications and frameworks which eliminate redundant testing while lowering the cost of the assessment. Google is continuing to invest in this space with plans to use ASVS more proactively with the developer community next year.  </p><p>It's been amazing to see the ADA grow this year and we are excited for the continued progress and expansion around the alliance\u2019s mission. </p>",
            "links": [
                {
                    "href": "http://security.googleblog.com/feeds/2869785041299000963/comments/default",
                    "rel": "replies",
                    "title": "Post Comments",
                    "type": "application/atom+xml"
                },
                {
                    "href": "http://www.blogger.com/comment.g?blogID=1176949257541686127&postID=2869785041299000963&isPopup=true",
                    "rel": "replies",
                    "title": "0 Comments",
                    "type": "text/html"
                },
                {
                    "href": "http://www.blogger.com/feeds/1176949257541686127/posts/default/2869785041299000963",
                    "rel": "edit",
                    "type": "application/atom+xml"
                },
                {
                    "href": "http://www.blogger.com/feeds/1176949257541686127/posts/default/2869785041299000963",
                    "rel": "self",
                    "type": "application/atom+xml"
                },
                {
                    "href": "http://security.googleblog.com/2022/12/app-defense-alliance-expansion.html",
                    "rel": "alternate",
                    "title": "Expanding the App Defense Alliance",
                    "type": "text/html"
                }
            ],
            "authors": [
                {
                    "name": "Edward Fernandez",
                    "href": "http://www.blogger.com/profile/03784424747198152685",
                    "email": "noreply@blogger.com"
                }
            ],
            "author_detail": {
                "name": "Edward Fernandez",
                "href": "http://www.blogger.com/profile/03784424747198152685",
                "email": "noreply@blogger.com"
            },
            "href": "",
            "author": "Edward Fernandez (noreply@blogger.com)",
            "gd_image": {
                "height": "16",
                "rel": "http://schemas.google.com/g/2005#thumbnail",
                "src": "https://img1.blogblog.com/img/b16-rounded.gif",
                "width": "16"
            },
            "media_thumbnail": [
                {
                    "height": "72",
                    "url": "https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgYDgqL0Dt0qgahu9dVKJLpl9tDi6LG2RuhjY-36Y1XU1GutQtN-uNseDvBGam4DOYVM4ewGtOuLnwq_KJjcKvV0ZqYnepeta7VHj-cBg6OuYHkB8XAXkwdQuzqVL-sIzgCDJGMIMIK1-0_De5SyCgCwK-6Uc4jX4SrMwrIa1AbQlRuBU6acxKHPzqqcw/s72-c/17530%20l%20Images%20for%20Android%20Security%20Blog_01.png",
                    "width": "72"
                }
            ],
            "thr_total": "0"
        },
        {
            "id": "tag:blogger.com,1999:blog-1176949257541686127.post-3247479336519932967",
            "guidislink": true,
            "link": "http://security.googleblog.com/2022/12/announcing-osv-scanner-vulnerability.html",
            "published": "2022-12-13T13:00:00.000-05:00",
            "published_parsed": [
                2022,
                12,
                13,
                18,
                0,
                0,
                1,
                347,
                0
            ],
            "updated": "2022-12-13T13:00:47.213-05:00",
            "updated_parsed": [
                2022,
                12,
                13,
                18,
                0,
                47,
                1,
                347,
                0
            ],
            "title": "Announcing OSV-Scanner: Vulnerability Scanner for Open Source",
            "title_detail": {
                "type": "text/plain",
                "language": null,
                "base": "http://feeds.feedburner.com/GoogleOnlineSecurityBlog",
                "value": "Announcing OSV-Scanner: Vulnerability Scanner for Open Source"
            },
            "content": [
                {
                    "type": "text/html",
                    "language": null,
                    "base": "http://feeds.feedburner.com/GoogleOnlineSecurityBlog",
                    "value": "<span class=\"byline-author\">Posted by Rex Pan, software engineer, Google Open Source Security Team</span><p>Today, we\u2019re launching the <a href=\"https://github.com/google/osv-scanner\">OSV-Scanner</a>, a free tool that gives open source developers easy access to vulnerability information relevant to their project. </p><p>Last year, we undertook an effort to improve vulnerability triage for developers and consumers of open source software. This involved publishing <a href=\"https://security.googleblog.com/2021/06/announcing-unified-vulnerability-schema.html\">the Open Source Vulnerability (OSV) schema</a> and launching the <a href=\"https://security.googleblog.com/2021/02/launching-osv-better-vulnerability.html\">OSV.dev</a> service, the first distributed open source vulnerability database. OSV allows all the different open source ecosystems and vulnerability databases to publish and consume information  in one simple, precise, and machine readable format. </p><p>The OSV-Scanner is the next step in this effort, providing an officially supported frontend to the OSV database that connects a project\u2019s list of dependencies with the vulnerabilities that affect them. </p><h1>OSV-Scanner</h1>  <p>Software projects are commonly built on top of a mountain of dependencies\u2014external software libraries you incorporate into a project to add functionalities without developing them from scratch. Each dependency potentially contains existing known vulnerabilities or new vulnerabilities that could be discovered at any time. There are simply too many dependencies  and versions to keep track of manually, so automation is required. </p><p>Scanners provide this automated capability by matching your code and dependencies against lists of known vulnerabilities and notifying you if patches or updates are needed. Scanners bring incredible benefits to project security, which is why the <strong>2021 U.S. Executive Order for Cybersecurity <a href=\"https://www.federalregister.gov/d/2021-10460/p-68\">included this type of automation</a> as a requirement for national standards on secure software development.</strong></p><p>The OSV-Scanner generates reliable, high-quality vulnerability information that closes the gap between a developer\u2019s list of packages and the information in vulnerability databases. Since the OSV.dev database is open source and distributed, it has several benefits in comparison with closed source advisory databases and scanners: </p><ul> <li>Each advisory comes from an open and authoritative source (e.g. the <a href=\"https://github.com/RustSec/advisory-db\">RustSec Advisory Database</a>)   <li>Anyone can suggest improvements to advisories, resulting in a very high quality database   <li>The OSV format unambiguously stores information about affected versions in a machine-readable format that precisely maps onto a developer\u2019s list of packages  <li>The above all results in fewer, more actionable vulnerability notifications, which reduces the time needed to resolve them </li></ul><p><a href=\"https://osv.dev//#use-the-cli\">Running OSV-Scanner</a> on your project will first find all the transitive dependencies that are being used by analyzing manifests, SBOMs, and commit hashes. The scanner then connects this information with the OSV database and displays the vulnerabilities relevant to your project. </p><div class=\"separator\" style=\"clear: both;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEib2wzhRfQH-lhsnwYJrGjn3j93EuX1OwHFtL9hQmMcfE_ApHbd56FHtUFjUm_MrK-5VdEWTfpsLxsuG5OUZvmKYO4mUxDV4LmDKsAI4PiKlnCvQEU-JOvd_ihxRMpYfwlcBgAgboHyrCF5TOix81Cj_RTddTlezJ7bGtwkte4a9ht_rvkk4qAEOkpjOQ/s1600/Screen%20Shot%202022-12-12%20at%203.12.11%20PM.png\" style=\"display: block; padding: 1em 0; text-align: center;\"><img alt=\"\" border=\"0\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEib2wzhRfQH-lhsnwYJrGjn3j93EuX1OwHFtL9hQmMcfE_ApHbd56FHtUFjUm_MrK-5VdEWTfpsLxsuG5OUZvmKYO4mUxDV4LmDKsAI4PiKlnCvQEU-JOvd_ihxRMpYfwlcBgAgboHyrCF5TOix81Cj_RTddTlezJ7bGtwkte4a9ht_rvkk4qAEOkpjOQ/s1600/Screen%20Shot%202022-12-12%20at%203.12.11%20PM.png\" /></a></div><p>OSV-Scanner is also integrated into the <a href=\"http://securityscorecards.dev\">OpenSSF Scorecard\u2019s</a> <a href=\"https://github.com/ossf/scorecard/blob/main/docs/checks.md#vulnerabilities\">Vulnerabilities check,</a> which will extend the analysis from a project\u2019s direct vulnerabilities to also include vulnerabilities in all its dependencies. This means that the 1.2M projects regularly evaluated by Scorecard will have a more comprehensive measure of their project security.    </p><h1>What else is new for OSV? </h1>  <p>The OSV project has made lots of progress since <a href=\"https://security.googleblog.com/2021/06/announcing-unified-vulnerability-schema.html\">our last post</a> in June last year. The <a href=\"https://security.googleblog.com/2021/06/announcing-unified-vulnerability-schema.html\">OSV schema</a> has seen significant adoption from vulnerability databases such as <a href=\"https://github.com/github/advisory-database\">GitHub Security Advisories</a> and <a href=\"https://source.android.com/docs/security/bulletin\">Android Security Bulletins</a>. Altogether OSV.dev now supports 16 ecosystems, including all major language ecosystems, Linux distributions (Debian and Alpine), as well as Android, Linux Kernel, and OSS-Fuzz. This means the OSV.dev database is now the biggest open source vulnerability database of its kind, with a total of over 38,000 advisories from 15,000 advisories a year ago.  </p><div class=\"separator\" style=\"clear: both;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhkLZLb-wTPw09XeV5GCklqXarE-yx0Q1PKTcdOw9LJsyYu1q0xmYVFca0hmGWbr-9FG8x4pUKQpFwL4sXtsRAsVFv8gzI3N_WVydueqnwvV_-ZNlffRj4rosNqbyMXpalH9Nz_f36gE9sGfYYRmNfH14kHI_YTH1DTj262hpe1S1n3iPgnRpLKQ1F11A/s1600/Screen%20Shot%202022-12-12%20at%203.13.35%20PM.png\" style=\"display: block; padding: 1em 0; text-align: center;\"><img alt=\"\" border=\"0\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhkLZLb-wTPw09XeV5GCklqXarE-yx0Q1PKTcdOw9LJsyYu1q0xmYVFca0hmGWbr-9FG8x4pUKQpFwL4sXtsRAsVFv8gzI3N_WVydueqnwvV_-ZNlffRj4rosNqbyMXpalH9Nz_f36gE9sGfYYRmNfH14kHI_YTH1DTj262hpe1S1n3iPgnRpLKQ1F11A/s1600/Screen%20Shot%202022-12-12%20at%203.13.35%20PM.png\" /></a></div><p>The <a href=\"https://osv.dev\">OSV.dev</a> website also had a complete overhaul, and now has a better UI and provides more information on each vulnerability. Prominent open source projects have also started to rely on OSV.dev, such as <a href=\"https://docs.dependencytrack.org/datasources/osv/\">DependencyTrack</a> and <a href=\"https://github.com/flutter/engine/blob/e1d8d8b78dcabad70ca2d3161dc6f1740ad90460/ci/scan_flattened_deps.py#L105\">Flutter</a>. </p><h1>What\u2019s next?</h1>  <p>There\u2019s still a lot to do! Our plan for OSV-Scanner is not just to build a simple vulnerability scanner; we want to build the best vulnerability management tool\u2014something that will also minimize the burden of remediating known vulnerabilities. Here are some of our ideas for achieving this: </p><ul> <li><a href=\"https://github.com/google/osv-scanner/issues/20\">The first step</a> is further integrating with developer workflows by offering standalone CI actions, allowing for easy setup and scheduling to keep track of new vulnerabilities.   <li><a href=\"https://github.com/google/osv.dev/issues/783\">Improve C/C++ vulnerability support</a>: One of the toughest ecosystems for vulnerability management is C/C++, due to the lack of a canonical package manager to identify C/C++ software. OSV is filling this gap by building a high quality database of C/C++ vulnerabilities by adding precise commit level metadata to CVEs.   <li>We are also looking to add unique features to OSV-Scanner, like the ability to utilize specific function level vulnerability information by doing call graph analysis, and to be able to automatically remediate vulnerabilities by suggesting minimal version bumps that provide the maximal impact.  <li><a href=\"https://github.com/google/osv-scanner/issues/19\">VEX support</a>: Automatically generating VEX statements using, for example, call graph analysis. </li></ul><h1>Try out OSV-Scanner today! </h1>  <p>You can download and try out OSV-Scanner on your projects by following instructions on our new website <a href=\"https://osv.dev#use-the-api\">osv.dev</a>. Or alternatively, to automatically run OSV-Scanner on your GitHub project, try <a href=\"https://securityscorecards.dev/\">Scorecard</a>. Please feel free to let us know what you think! You can give us feedback either by opening an issue on our <a href=\"https://github.com/google/osv-scanner/issues/\">Github</a>, or through the <a href=\"https://groups.google.com/g/osv-discuss\">OSV mailing list</a>. </p>"
                }
            ],
            "summary": "<span class=\"byline-author\">Posted by Rex Pan, software engineer, Google Open Source Security Team</span><p>Today, we\u2019re launching the <a href=\"https://github.com/google/osv-scanner\">OSV-Scanner</a>, a free tool that gives open source developers easy access to vulnerability information relevant to their project. </p><p>Last year, we undertook an effort to improve vulnerability triage for developers and consumers of open source software. This involved publishing <a href=\"https://security.googleblog.com/2021/06/announcing-unified-vulnerability-schema.html\">the Open Source Vulnerability (OSV) schema</a> and launching the <a href=\"https://security.googleblog.com/2021/02/launching-osv-better-vulnerability.html\">OSV.dev</a> service, the first distributed open source vulnerability database. OSV allows all the different open source ecosystems and vulnerability databases to publish and consume information  in one simple, precise, and machine readable format. </p><p>The OSV-Scanner is the next step in this effort, providing an officially supported frontend to the OSV database that connects a project\u2019s list of dependencies with the vulnerabilities that affect them. </p><h1>OSV-Scanner</h1>  <p>Software projects are commonly built on top of a mountain of dependencies\u2014external software libraries you incorporate into a project to add functionalities without developing them from scratch. Each dependency potentially contains existing known vulnerabilities or new vulnerabilities that could be discovered at any time. There are simply too many dependencies  and versions to keep track of manually, so automation is required. </p><p>Scanners provide this automated capability by matching your code and dependencies against lists of known vulnerabilities and notifying you if patches or updates are needed. Scanners bring incredible benefits to project security, which is why the <strong>2021 U.S. Executive Order for Cybersecurity <a href=\"https://www.federalregister.gov/d/2021-10460/p-68\">included this type of automation</a> as a requirement for national standards on secure software development.</strong></p><p>The OSV-Scanner generates reliable, high-quality vulnerability information that closes the gap between a developer\u2019s list of packages and the information in vulnerability databases. Since the OSV.dev database is open source and distributed, it has several benefits in comparison with closed source advisory databases and scanners: </p><ul> <li>Each advisory comes from an open and authoritative source (e.g. the <a href=\"https://github.com/RustSec/advisory-db\">RustSec Advisory Database</a>)   <li>Anyone can suggest improvements to advisories, resulting in a very high quality database   <li>The OSV format unambiguously stores information about affected versions in a machine-readable format that precisely maps onto a developer\u2019s list of packages  <li>The above all results in fewer, more actionable vulnerability notifications, which reduces the time needed to resolve them </li></ul><p><a href=\"https://osv.dev//#use-the-cli\">Running OSV-Scanner</a> on your project will first find all the transitive dependencies that are being used by analyzing manifests, SBOMs, and commit hashes. The scanner then connects this information with the OSV database and displays the vulnerabilities relevant to your project. </p><div class=\"separator\" style=\"clear: both;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEib2wzhRfQH-lhsnwYJrGjn3j93EuX1OwHFtL9hQmMcfE_ApHbd56FHtUFjUm_MrK-5VdEWTfpsLxsuG5OUZvmKYO4mUxDV4LmDKsAI4PiKlnCvQEU-JOvd_ihxRMpYfwlcBgAgboHyrCF5TOix81Cj_RTddTlezJ7bGtwkte4a9ht_rvkk4qAEOkpjOQ/s1600/Screen%20Shot%202022-12-12%20at%203.12.11%20PM.png\" style=\"display: block; padding: 1em 0; text-align: center;\"><img alt=\"\" border=\"0\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEib2wzhRfQH-lhsnwYJrGjn3j93EuX1OwHFtL9hQmMcfE_ApHbd56FHtUFjUm_MrK-5VdEWTfpsLxsuG5OUZvmKYO4mUxDV4LmDKsAI4PiKlnCvQEU-JOvd_ihxRMpYfwlcBgAgboHyrCF5TOix81Cj_RTddTlezJ7bGtwkte4a9ht_rvkk4qAEOkpjOQ/s1600/Screen%20Shot%202022-12-12%20at%203.12.11%20PM.png\" /></a></div><p>OSV-Scanner is also integrated into the <a href=\"http://securityscorecards.dev\">OpenSSF Scorecard\u2019s</a> <a href=\"https://github.com/ossf/scorecard/blob/main/docs/checks.md#vulnerabilities\">Vulnerabilities check,</a> which will extend the analysis from a project\u2019s direct vulnerabilities to also include vulnerabilities in all its dependencies. This means that the 1.2M projects regularly evaluated by Scorecard will have a more comprehensive measure of their project security.    </p><h1>What else is new for OSV? </h1>  <p>The OSV project has made lots of progress since <a href=\"https://security.googleblog.com/2021/06/announcing-unified-vulnerability-schema.html\">our last post</a> in June last year. The <a href=\"https://security.googleblog.com/2021/06/announcing-unified-vulnerability-schema.html\">OSV schema</a> has seen significant adoption from vulnerability databases such as <a href=\"https://github.com/github/advisory-database\">GitHub Security Advisories</a> and <a href=\"https://source.android.com/docs/security/bulletin\">Android Security Bulletins</a>. Altogether OSV.dev now supports 16 ecosystems, including all major language ecosystems, Linux distributions (Debian and Alpine), as well as Android, Linux Kernel, and OSS-Fuzz. This means the OSV.dev database is now the biggest open source vulnerability database of its kind, with a total of over 38,000 advisories from 15,000 advisories a year ago.  </p><div class=\"separator\" style=\"clear: both;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhkLZLb-wTPw09XeV5GCklqXarE-yx0Q1PKTcdOw9LJsyYu1q0xmYVFca0hmGWbr-9FG8x4pUKQpFwL4sXtsRAsVFv8gzI3N_WVydueqnwvV_-ZNlffRj4rosNqbyMXpalH9Nz_f36gE9sGfYYRmNfH14kHI_YTH1DTj262hpe1S1n3iPgnRpLKQ1F11A/s1600/Screen%20Shot%202022-12-12%20at%203.13.35%20PM.png\" style=\"display: block; padding: 1em 0; text-align: center;\"><img alt=\"\" border=\"0\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhkLZLb-wTPw09XeV5GCklqXarE-yx0Q1PKTcdOw9LJsyYu1q0xmYVFca0hmGWbr-9FG8x4pUKQpFwL4sXtsRAsVFv8gzI3N_WVydueqnwvV_-ZNlffRj4rosNqbyMXpalH9Nz_f36gE9sGfYYRmNfH14kHI_YTH1DTj262hpe1S1n3iPgnRpLKQ1F11A/s1600/Screen%20Shot%202022-12-12%20at%203.13.35%20PM.png\" /></a></div><p>The <a href=\"https://osv.dev\">OSV.dev</a> website also had a complete overhaul, and now has a better UI and provides more information on each vulnerability. Prominent open source projects have also started to rely on OSV.dev, such as <a href=\"https://docs.dependencytrack.org/datasources/osv/\">DependencyTrack</a> and <a href=\"https://github.com/flutter/engine/blob/e1d8d8b78dcabad70ca2d3161dc6f1740ad90460/ci/scan_flattened_deps.py#L105\">Flutter</a>. </p><h1>What\u2019s next?</h1>  <p>There\u2019s still a lot to do! Our plan for OSV-Scanner is not just to build a simple vulnerability scanner; we want to build the best vulnerability management tool\u2014something that will also minimize the burden of remediating known vulnerabilities. Here are some of our ideas for achieving this: </p><ul> <li><a href=\"https://github.com/google/osv-scanner/issues/20\">The first step</a> is further integrating with developer workflows by offering standalone CI actions, allowing for easy setup and scheduling to keep track of new vulnerabilities.   <li><a href=\"https://github.com/google/osv.dev/issues/783\">Improve C/C++ vulnerability support</a>: One of the toughest ecosystems for vulnerability management is C/C++, due to the lack of a canonical package manager to identify C/C++ software. OSV is filling this gap by building a high quality database of C/C++ vulnerabilities by adding precise commit level metadata to CVEs.   <li>We are also looking to add unique features to OSV-Scanner, like the ability to utilize specific function level vulnerability information by doing call graph analysis, and to be able to automatically remediate vulnerabilities by suggesting minimal version bumps that provide the maximal impact.  <li><a href=\"https://github.com/google/osv-scanner/issues/19\">VEX support</a>: Automatically generating VEX statements using, for example, call graph analysis. </li></ul><h1>Try out OSV-Scanner today! </h1>  <p>You can download and try out OSV-Scanner on your projects by following instructions on our new website <a href=\"https://osv.dev#use-the-api\">osv.dev</a>. Or alternatively, to automatically run OSV-Scanner on your GitHub project, try <a href=\"https://securityscorecards.dev/\">Scorecard</a>. Please feel free to let us know what you think! You can give us feedback either by opening an issue on our <a href=\"https://github.com/google/osv-scanner/issues/\">Github</a>, or through the <a href=\"https://groups.google.com/g/osv-discuss\">OSV mailing list</a>. </p>",
            "links": [
                {
                    "href": "http://security.googleblog.com/feeds/3247479336519932967/comments/default",
                    "rel": "replies",
                    "title": "Post Comments",
                    "type": "application/atom+xml"
                },
                {
                    "href": "http://www.blogger.com/comment.g?blogID=1176949257541686127&postID=3247479336519932967&isPopup=true",
                    "rel": "replies",
                    "title": "0 Comments",
                    "type": "text/html"
                },
                {
                    "href": "http://www.blogger.com/feeds/1176949257541686127/posts/default/3247479336519932967",
                    "rel": "edit",
                    "type": "application/atom+xml"
                },
                {
                    "href": "http://www.blogger.com/feeds/1176949257541686127/posts/default/3247479336519932967",
                    "rel": "self",
                    "type": "application/atom+xml"
                },
                {
                    "href": "http://security.googleblog.com/2022/12/announcing-osv-scanner-vulnerability.html",
                    "rel": "alternate",
                    "title": "Announcing OSV-Scanner: Vulnerability Scanner for Open Source ",
                    "type": "text/html"
                }
            ],
            "authors": [
                {
                    "name": "Google",
                    "href": "http://www.blogger.com/profile/11822708545141062574",
                    "email": "noreply@blogger.com"
                }
            ],
            "author_detail": {
                "name": "Google",
                "href": "http://www.blogger.com/profile/11822708545141062574",
                "email": "noreply@blogger.com"
            },
            "href": "",
            "author": "Google (noreply@blogger.com)",
            "gd_image": {
                "height": "16",
                "rel": "http://schemas.google.com/g/2005#thumbnail",
                "src": "https://img1.blogblog.com/img/b16-rounded.gif",
                "width": "16"
            },
            "media_thumbnail": [
                {
                    "height": "72",
                    "url": "https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEib2wzhRfQH-lhsnwYJrGjn3j93EuX1OwHFtL9hQmMcfE_ApHbd56FHtUFjUm_MrK-5VdEWTfpsLxsuG5OUZvmKYO4mUxDV4LmDKsAI4PiKlnCvQEU-JOvd_ihxRMpYfwlcBgAgboHyrCF5TOix81Cj_RTddTlezJ7bGtwkte4a9ht_rvkk4qAEOkpjOQ/s72-c/Screen%20Shot%202022-12-12%20at%203.12.11%20PM.png",
                    "width": "72"
                }
            ],
            "thr_total": "0"
        },
        {
            "id": "tag:blogger.com,1999:blog-1176949257541686127.post-5206538704090237226",
            "guidislink": true,
            "link": "http://security.googleblog.com/2022/12/trust-in-transparency-private-compute.html",
            "published": "2022-12-08T11:59:00.001-05:00",
            "published_parsed": [
                2022,
                12,
                8,
                16,
                59,
                0,
                3,
                342,
                0
            ],
            "updated": "2022-12-08T12:48:17.295-05:00",
            "updated_parsed": [
                2022,
                12,
                8,
                17,
                48,
                17,
                3,
                342,
                0
            ],
            "tags": [
                {
                    "term": "android",
                    "scheme": "http://www.blogger.com/atom/ns#",
                    "label": null
                },
                {
                    "term": "android security",
                    "scheme": "http://www.blogger.com/atom/ns#",
                    "label": null
                },
                {
                    "term": "private compute core",
                    "scheme": "http://www.blogger.com/atom/ns#",
                    "label": null
                }
            ],
            "title": "Trust in transparency: Private Compute Core",
            "title_detail": {
                "type": "text/plain",
                "language": null,
                "base": "http://feeds.feedburner.com/GoogleOnlineSecurityBlog",
                "value": "Trust in transparency: Private Compute Core"
            },
            "content": [
                {
                    "type": "text/html",
                    "language": null,
                    "base": "http://feeds.feedburner.com/GoogleOnlineSecurityBlog",
                    "value": "<span class=\"byline-author\">Posted by Dave Kleidermacher, Dianne Hackborn, and Eugenio Marchiori </span> <p>We care deeply about privacy. We also know that trust is built by transparency. This blog, and the technical paper reference within, is an example of that commitment: we describe an important new Android privacy infrastructure called Private Compute Core (PCC). </p><p>Some of our most exciting machine learning features use continuous sensing data \u2014 information from the microphone, camera, and screen. These features keep you safe, help you communicate, and facilitate stronger connections with people you care about. To unlock this new generation of innovative concepts, we built a specialized sandbox to privately process and protect this data.  </p><h2>Android Private Compute Core</h2>  <p>PCC is a secure, isolated data processing environment inside of the Android operating system that gives you control of the data inside, such as deciding if, how, and when it is shared with others. This way, PCC can enable features like <a href=\"https://support.google.com/pixelphone/answer/11209263\">Live Translate</a> without sharing continuous sensing data with service providers, including Google.  </p><p>PCC is part of <a href=\"https://blog.google/technology/safety-security/how-we-make-every-day-safer-with-google/\">Protected Computing</a><em>, </em>a toolkit of technologies that  transform how, when, and where data is processed to <span style=\"text-decoration: underline;\">technically ensure</span> its privacy and safety. For example, by employing cloud enclaves, edge processing, or end-to-end encryption we ensure sensitive data remains in exclusive control of the user. </p><h2>How Private Compute Core works</h2>  <p>PCC is designed to enable innovative features while keeping the data needed for them confidential from other subsystems. We do this by using techniques such as limiting Interprocess Communications (IPC) binds and using isolated processes. These are included as part of the Android Open Source Project and controlled by publicly available surfaces, such as Android framework APIs. For features that run inside PCC, continuous sensing data is processed safely and seamlessly while keeping it confidential.  </p><p>  <div class=\"separator\" style=\"clear: both;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhsDlw8jTGTcp5vKnjg5nSbtYI8rQs1dF95BUtciXfDxZ5TYyOoWXXjezrQcC_T6MEJ0SkdGmqkUWqEQUWOvHEJZtS06K_LntdZOlF2_RDbkL0rZS4XqoUBdn_t9y3wMbfrzhdZF3KEDzMml56VxCYhsXfGAuq3kN0OKuG6TTKdqKUqUEQYR9l-KRyxnw/s1600/Screenshot%202022-12-07%207.33.17%20PM.png\" style=\"display: block; padding: 1em 0; text-align: center;\"><img alt=\"\" border=\"0\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhsDlw8jTGTcp5vKnjg5nSbtYI8rQs1dF95BUtciXfDxZ5TYyOoWXXjezrQcC_T6MEJ0SkdGmqkUWqEQUWOvHEJZtS06K_LntdZOlF2_RDbkL0rZS4XqoUBdn_t9y3wMbfrzhdZF3KEDzMml56VxCYhsXfGAuq3kN0OKuG6TTKdqKUqUEQYR9l-KRyxnw/s1600/Screenshot%202022-12-07%207.33.17%20PM.png\" /></a></div> </p> </p><p>To stay useful, any machine learning feature has to get better over time. To keep the models that power PCC features up to date, while still keeping the data private, we leverage <a href=\"https://federated.withgoogle.com/\">federated learning and analytics</a>. Network calls to improve the performance of these models can be monitored using <a href=\"https://play.google.com/store/apps/details?id=com.google.android.as.oss\">Private Compute Services</a>.  </p><h2>Let us show you our work</h2>  <p>The publicly-verifiable architectures in PCC demonstrate how we strive to deliver confidentiality and control, and do it in a way that is verifiable and visible to users. In addition to this blog, we provide this transparency through public documentation and open-source code \u2014 we hope you'll have a look below.  </p><p>To explain in even more detail, we\u2019ve published <a href=\"https://arxiv.org/abs/2209.10317\">a technical whitepaper</a> for researchers and interested members of the community. In it, we describe data protections in-depth, the processes and mechanisms we\u2019ve built, and include diagrams of the privacy structures for continuous sensing features.  </p><p>Private Compute Services was recently <a href=\"https://github.com/google/private-compute-services\">open-sourced</a> as well, and we invite our Android community to inspect the code that controls the data management and egress policies. We hope you'll examine and report back on PCC's implementation, so that our own documentation is not the only source of analysis.  </p><h2>Our commitment to transparency</h2>  <p>Being transparent and engaged with users, developers, researchers, and technologists around the world is part of what makes Android special and, we think, more trustworthy. The paradigm of distributed trust, where credibility is built up from verification by multiple trusted sources, continues to extend this core value. Open sourcing the mechanisms for data protection and processes is one step towards making privacy verifiable. The next step is verification by the community \u2014 and we hope you'll join in.  </p><p>We'll continue sharing our progress and look forward to hearing feedback from our users and community on the evolution of Private Compute Core and data privacy at Google.   </p>"
                }
            ],
            "summary": "<span class=\"byline-author\">Posted by Dave Kleidermacher, Dianne Hackborn, and Eugenio Marchiori </span> <p>We care deeply about privacy. We also know that trust is built by transparency. This blog, and the technical paper reference within, is an example of that commitment: we describe an important new Android privacy infrastructure called Private Compute Core (PCC). </p><p>Some of our most exciting machine learning features use continuous sensing data \u2014 information from the microphone, camera, and screen. These features keep you safe, help you communicate, and facilitate stronger connections with people you care about. To unlock this new generation of innovative concepts, we built a specialized sandbox to privately process and protect this data.  </p><h2>Android Private Compute Core</h2>  <p>PCC is a secure, isolated data processing environment inside of the Android operating system that gives you control of the data inside, such as deciding if, how, and when it is shared with others. This way, PCC can enable features like <a href=\"https://support.google.com/pixelphone/answer/11209263\">Live Translate</a> without sharing continuous sensing data with service providers, including Google.  </p><p>PCC is part of <a href=\"https://blog.google/technology/safety-security/how-we-make-every-day-safer-with-google/\">Protected Computing</a><em>, </em>a toolkit of technologies that  transform how, when, and where data is processed to <span style=\"text-decoration: underline;\">technically ensure</span> its privacy and safety. For example, by employing cloud enclaves, edge processing, or end-to-end encryption we ensure sensitive data remains in exclusive control of the user. </p><h2>How Private Compute Core works</h2>  <p>PCC is designed to enable innovative features while keeping the data needed for them confidential from other subsystems. We do this by using techniques such as limiting Interprocess Communications (IPC) binds and using isolated processes. These are included as part of the Android Open Source Project and controlled by publicly available surfaces, such as Android framework APIs. For features that run inside PCC, continuous sensing data is processed safely and seamlessly while keeping it confidential.  </p><p>  <div class=\"separator\" style=\"clear: both;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhsDlw8jTGTcp5vKnjg5nSbtYI8rQs1dF95BUtciXfDxZ5TYyOoWXXjezrQcC_T6MEJ0SkdGmqkUWqEQUWOvHEJZtS06K_LntdZOlF2_RDbkL0rZS4XqoUBdn_t9y3wMbfrzhdZF3KEDzMml56VxCYhsXfGAuq3kN0OKuG6TTKdqKUqUEQYR9l-KRyxnw/s1600/Screenshot%202022-12-07%207.33.17%20PM.png\" style=\"display: block; padding: 1em 0; text-align: center;\"><img alt=\"\" border=\"0\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhsDlw8jTGTcp5vKnjg5nSbtYI8rQs1dF95BUtciXfDxZ5TYyOoWXXjezrQcC_T6MEJ0SkdGmqkUWqEQUWOvHEJZtS06K_LntdZOlF2_RDbkL0rZS4XqoUBdn_t9y3wMbfrzhdZF3KEDzMml56VxCYhsXfGAuq3kN0OKuG6TTKdqKUqUEQYR9l-KRyxnw/s1600/Screenshot%202022-12-07%207.33.17%20PM.png\" /></a></div> </p> </p><p>To stay useful, any machine learning feature has to get better over time. To keep the models that power PCC features up to date, while still keeping the data private, we leverage <a href=\"https://federated.withgoogle.com/\">federated learning and analytics</a>. Network calls to improve the performance of these models can be monitored using <a href=\"https://play.google.com/store/apps/details?id=com.google.android.as.oss\">Private Compute Services</a>.  </p><h2>Let us show you our work</h2>  <p>The publicly-verifiable architectures in PCC demonstrate how we strive to deliver confidentiality and control, and do it in a way that is verifiable and visible to users. In addition to this blog, we provide this transparency through public documentation and open-source code \u2014 we hope you'll have a look below.  </p><p>To explain in even more detail, we\u2019ve published <a href=\"https://arxiv.org/abs/2209.10317\">a technical whitepaper</a> for researchers and interested members of the community. In it, we describe data protections in-depth, the processes and mechanisms we\u2019ve built, and include diagrams of the privacy structures for continuous sensing features.  </p><p>Private Compute Services was recently <a href=\"https://github.com/google/private-compute-services\">open-sourced</a> as well, and we invite our Android community to inspect the code that controls the data management and egress policies. We hope you'll examine and report back on PCC's implementation, so that our own documentation is not the only source of analysis.  </p><h2>Our commitment to transparency</h2>  <p>Being transparent and engaged with users, developers, researchers, and technologists around the world is part of what makes Android special and, we think, more trustworthy. The paradigm of distributed trust, where credibility is built up from verification by multiple trusted sources, continues to extend this core value. Open sourcing the mechanisms for data protection and processes is one step towards making privacy verifiable. The next step is verification by the community \u2014 and we hope you'll join in.  </p><p>We'll continue sharing our progress and look forward to hearing feedback from our users and community on the evolution of Private Compute Core and data privacy at Google.   </p>",
            "links": [
                {
                    "href": "http://security.googleblog.com/feeds/5206538704090237226/comments/default",
                    "rel": "replies",
                    "title": "Post Comments",
                    "type": "application/atom+xml"
                },
                {
                    "href": "http://www.blogger.com/comment.g?blogID=1176949257541686127&postID=5206538704090237226&isPopup=true",
                    "rel": "replies",
                    "title": "0 Comments",
                    "type": "text/html"
                },
                {
                    "href": "http://www.blogger.com/feeds/1176949257541686127/posts/default/5206538704090237226",
                    "rel": "edit",
                    "type": "application/atom+xml"
                },
                {
                    "href": "http://www.blogger.com/feeds/1176949257541686127/posts/default/5206538704090237226",
                    "rel": "self",
                    "type": "application/atom+xml"
                },
                {
                    "href": "http://security.googleblog.com/2022/12/trust-in-transparency-private-compute.html",
                    "rel": "alternate",
                    "title": "Trust in transparency: Private Compute Core ",
                    "type": "text/html"
                }
            ],
            "authors": [
                {
                    "name": "Edward Fernandez",
                    "href": "http://www.blogger.com/profile/03784424747198152685",
                    "email": "noreply@blogger.com"
                }
            ],
            "author_detail": {
                "name": "Edward Fernandez",
                "href": "http://www.blogger.com/profile/03784424747198152685",
                "email": "noreply@blogger.com"
            },
            "href": "",
            "author": "Edward Fernandez (noreply@blogger.com)",
            "gd_image": {
                "height": "16",
                "rel": "http://schemas.google.com/g/2005#thumbnail",
                "src": "https://img1.blogblog.com/img/b16-rounded.gif",
                "width": "16"
            },
            "media_thumbnail": [
                {
                    "height": "72",
                    "url": "https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhsDlw8jTGTcp5vKnjg5nSbtYI8rQs1dF95BUtciXfDxZ5TYyOoWXXjezrQcC_T6MEJ0SkdGmqkUWqEQUWOvHEJZtS06K_LntdZOlF2_RDbkL0rZS4XqoUBdn_t9y3wMbfrzhdZF3KEDzMml56VxCYhsXfGAuq3kN0OKuG6TTKdqKUqUEQYR9l-KRyxnw/s72-c/Screenshot%202022-12-07%207.33.17%20PM.png",
                    "width": "72"
                }
            ],
            "thr_total": "0"
        },
        {
            "id": "tag:blogger.com,1999:blog-1176949257541686127.post-5921013497020816147",
            "guidislink": true,
            "link": "http://security.googleblog.com/2022/12/enhanced-protection-strongest-level-of.html",
            "published": "2022-12-05T13:03:00.001-05:00",
            "published_parsed": [
                2022,
                12,
                5,
                18,
                3,
                0,
                0,
                339,
                0
            ],
            "updated": "2022-12-07T22:39:54.691-05:00",
            "updated_parsed": [
                2022,
                12,
                8,
                3,
                39,
                54,
                3,
                342,
                0
            ],
            "tags": [
                {
                    "term": "chrome",
                    "scheme": "http://www.blogger.com/atom/ns#",
                    "label": null
                },
                {
                    "term": "chrome security",
                    "scheme": "http://www.blogger.com/atom/ns#",
                    "label": null
                }
            ],
            "title": "Enhanced Protection - The strongest level of Safe Browsing protection Google Chrome has to offer",
            "title_detail": {
                "type": "text/plain",
                "language": null,
                "base": "http://feeds.feedburner.com/GoogleOnlineSecurityBlog",
                "value": "Enhanced Protection - The strongest level of Safe Browsing protection Google Chrome has to offer"
            },
            "content": [
                {
                    "type": "text/html",
                    "language": null,
                    "base": "http://feeds.feedburner.com/GoogleOnlineSecurityBlog",
                    "value": "<span class=\"byline-author\">Posted by Benjamin Ackerman, Chrome Security and Jonathan Li, Safe Browsing </span> <p>As a follow-up to a previous blog post about <a href=\"https://security.googleblog.com/2022/08/how-hash-based-safe-browsing-works-in.html\">How Hash-Based Safe Browsing Works in Google Chrome</a>, we wanted to provide more details about Safe Browsing\u2019s Enhanced Protection mode in Chrome. Specifically, how it came about, the protections that are offered and what it means for your data. </p><p>Security and privacy have always been top of mind for Chrome. Our goal is to make security effortless for you while browsing the web, so that you can go about your day without having to worry about the links that you click on or the files that you download. This is why <a href=\"https://safebrowsing.google.com/\">Safe Browsing</a>\u2019s phishing and malware protections have been a core part of Chrome since 2007. You may have seen these in action if you have ever come across one of our red warning pages. </p><p>  <div class=\"separator\" style=\"clear: both;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiuXzAK2S5bUWwetyCEnMg0OAiHPx5eknMyaQuPmFbx4lks-Vns4Ih0tLS5NNgAiTXvqFDwFSjcv0kDdePKdYY3_r86llYn4XL1hVdU0-sOUvnpDf-nMaw7F1Z5k_rsZm_Dsh5YAykKD4DBl3tSOMGwW2vxrqFIpgAi9NErU1gEP0-ekigIG5wBFm-8QQ/s1600/Enhanced%20Safe%20Browsing_Warning%20page%28iOS%29%20Mobile%20and%20Desktop.png\" style=\"display: block; padding: 1em 0; text-align: center;\"><img alt=\"\" border=\"0\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiuXzAK2S5bUWwetyCEnMg0OAiHPx5eknMyaQuPmFbx4lks-Vns4Ih0tLS5NNgAiTXvqFDwFSjcv0kDdePKdYY3_r86llYn4XL1hVdU0-sOUvnpDf-nMaw7F1Z5k_rsZm_Dsh5YAykKD4DBl3tSOMGwW2vxrqFIpgAi9NErU1gEP0-ekigIG5wBFm-8QQ/s1600/Enhanced%20Safe%20Browsing_Warning%20page%28iOS%29%20Mobile%20and%20Desktop.png\" /></a></div> </p><p>We show these warnings whenever we believe a site that you are trying to visit or file that you are trying to download might put you at risk for an attack. To give you a better understanding of how the Enhanced Protection mode in Safe Browsing provides the strongest level of defense it\u2019s useful to know what is offered in Standard Protection. </p><h2>Standard Protection</h2>  <p>Enabled by default in Chrome, Standard Protection was designed to be privacy preserving at its core by using hash-based checks. This has been effective at protecting users by warning millions of users about dangerous websites. However, hash-based checks are inherently limited as they rely on lookups to a list of known bad sites. We see malicious actors moving fast and constantly evolving their tactics to avoid detection using sophisticated techniques. To counter this, we created a stronger and more customized level of protection that we could offer to users. To this end, we launched <a href=\"https://security.googleblog.com/2020/05/enhanced-safe-browsing-protection-now.html\">Enhanced Protection</a> in 2020, which builds upon the Standard Protection mode in Safe Browsing to keep you safer. </p><h2>Enhanced Protection</h2>  <p>This is the fastest and strongest level of protection against dangerous sites and downloads that Safe Browsing offers in Chrome. It enables more advanced detection techniques that adapt quickly as malicious activity evolves. As a result, Enhanced Protection users are phished 20-35% less than users on Standard Protection. A few of these features include: </p><ul> <li><strong>Real time URL checks: </strong>By checking with Google Safe Browsing\u2019s servers in real time before navigating to an uncommon site you\u2019re visiting, Chrome provides the best protection against dangerous sites and uses advanced machine learning models to continuously stay up to date.   <li><strong>File checks before downloading:</strong> In addition to Chrome\u2019s standard checks of downloaded files, Enhanced Protection users can choose to upload suspicious files to be scanned by Google Safe Browsing\u2019s full suite of malware detection technology before opening the file.  This helps catch brand new malware that Safe Browsing has not scanned before or dangerous files hosted on a brand new site.  <li><strong>More advanced vision-based phishing detection:</strong> To better detect phishing and dangerous sites for Enhanced Protection users, Chrome performs basic client-side checks on the web page to determine if it is suspicious. For pages deemed suspicious, Chrome sends a small set of visual features derived from the page to Google\u2019s Safe Browsing servers for additional phishing classification using computer vision. This helps Chrome more accurately recognize dangerous sites, and can warn other users before they visit the site. <div class=\"separator\" style=\"clear: both;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiYKo2fmjwtsXgO5jCijjCDsC-xoVAObaHe1InslUraHyxbv6UmccdJb0ARkCsGpFiWzMMqUTUyiZwjnOIBdqfdKQ-2FswDlqirTtscoq817LsKEnmQTAETtJvnFYMs1fJ5f7SqCCxagAaF9DiIhUiKfqzfo9XGv6pY-CutpyioyTFYca1FsYIPKYZbog/s1600/last%20gif.gif\" style=\"display: block; padding: 1em 0; text-align: center;\"><img alt=\"\" border=\"0\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiYKo2fmjwtsXgO5jCijjCDsC-xoVAObaHe1InslUraHyxbv6UmccdJb0ARkCsGpFiWzMMqUTUyiZwjnOIBdqfdKQ-2FswDlqirTtscoq817LsKEnmQTAETtJvnFYMs1fJ5f7SqCCxagAaF9DiIhUiKfqzfo9XGv6pY-CutpyioyTFYca1FsYIPKYZbog/s1600/last%20gif.gif\" /></a></div><h2>User data privacy and security</h2>  <p>By opting into Enhanced Protection, you are sharing additional data with Safe Browsing systems that allow us to offer better and faster security both for you, and for all users online. Ensuring user privacy is of utmost importance for us and we go through great lengths to anonymize as much of the data as possible.  This data is only used for security purposes and only retained for a short period of time. As threats evolve we will continuously add and improve our existing protections for Enhanced Protection users. These features go through extensive privacy reviews to ensure that your privacy continues to be prioritized while still providing you the highest level of security possible. </p><h2>How to enable</h2>  <p>Safe Browsing\u2019s Enhanced Protection is currently available for all desktop platforms, Android devices and now iOS mobile devices. It can be enabled by navigating to the Privacy and Security option located in Chrome settings. </p><p> <div class=\"separator\" style=\"clear: both;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEi2xYRWujcy2-WH0OiDhrb6uKtVm13Hkhe2Dbn1jaq1kra0aSGsbCwg9TcIhctg63sKhL4S12kKWrAON2o2TZzaUnIes1fWp8g0J6RqvzJTV8ReAI91cKt4pfuK3FG_1f7zujifo0N5kPLky81fnhsdTaKQsliAeF_08MKmp7ep-7z3bzPdDQb80J-dPA/s1600/Chrome_Enhance%20Safe%20Browsing_iOS_Opt%20in.gif\" style=\"display: block; padding: 1em 0; text-align: center;\"><img alt=\"\" border=\"0\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEi2xYRWujcy2-WH0OiDhrb6uKtVm13Hkhe2Dbn1jaq1kra0aSGsbCwg9TcIhctg63sKhL4S12kKWrAON2o2TZzaUnIes1fWp8g0J6RqvzJTV8ReAI91cKt4pfuK3FG_1f7zujifo0N5kPLky81fnhsdTaKQsliAeF_08MKmp7ep-7z3bzPdDQb80J-dPA/s1600/Chrome_Enhance%20Safe%20Browsing_iOS_Opt%20in.gif\" /></a></div> <p>For enterprise admins, you have the option of enabling Enhanced Safe Browsing on your managed devices using the<a href=\"https://chromeenterprise.google/policies/#SafeBrowsingProtectionLevel\"> SafeBrowsingProtectionLevel</a> policy and in the Admin Console. </p><p>For more details and updates about Safe Browsing and its Enhanced Protection mode, please visit our <a href=\"http://safebrowsing.google.com\">Google Safe Browsing</a> website and follow the Google Security Blog for updates on new features.  </p>"
                }
            ],
            "summary": "<span class=\"byline-author\">Posted by Benjamin Ackerman, Chrome Security and Jonathan Li, Safe Browsing </span> <p>As a follow-up to a previous blog post about <a href=\"https://security.googleblog.com/2022/08/how-hash-based-safe-browsing-works-in.html\">How Hash-Based Safe Browsing Works in Google Chrome</a>, we wanted to provide more details about Safe Browsing\u2019s Enhanced Protection mode in Chrome. Specifically, how it came about, the protections that are offered and what it means for your data. </p><p>Security and privacy have always been top of mind for Chrome. Our goal is to make security effortless for you while browsing the web, so that you can go about your day without having to worry about the links that you click on or the files that you download. This is why <a href=\"https://safebrowsing.google.com/\">Safe Browsing</a>\u2019s phishing and malware protections have been a core part of Chrome since 2007. You may have seen these in action if you have ever come across one of our red warning pages. </p><p>  <div class=\"separator\" style=\"clear: both;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiuXzAK2S5bUWwetyCEnMg0OAiHPx5eknMyaQuPmFbx4lks-Vns4Ih0tLS5NNgAiTXvqFDwFSjcv0kDdePKdYY3_r86llYn4XL1hVdU0-sOUvnpDf-nMaw7F1Z5k_rsZm_Dsh5YAykKD4DBl3tSOMGwW2vxrqFIpgAi9NErU1gEP0-ekigIG5wBFm-8QQ/s1600/Enhanced%20Safe%20Browsing_Warning%20page%28iOS%29%20Mobile%20and%20Desktop.png\" style=\"display: block; padding: 1em 0; text-align: center;\"><img alt=\"\" border=\"0\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiuXzAK2S5bUWwetyCEnMg0OAiHPx5eknMyaQuPmFbx4lks-Vns4Ih0tLS5NNgAiTXvqFDwFSjcv0kDdePKdYY3_r86llYn4XL1hVdU0-sOUvnpDf-nMaw7F1Z5k_rsZm_Dsh5YAykKD4DBl3tSOMGwW2vxrqFIpgAi9NErU1gEP0-ekigIG5wBFm-8QQ/s1600/Enhanced%20Safe%20Browsing_Warning%20page%28iOS%29%20Mobile%20and%20Desktop.png\" /></a></div> </p><p>We show these warnings whenever we believe a site that you are trying to visit or file that you are trying to download might put you at risk for an attack. To give you a better understanding of how the Enhanced Protection mode in Safe Browsing provides the strongest level of defense it\u2019s useful to know what is offered in Standard Protection. </p><h2>Standard Protection</h2>  <p>Enabled by default in Chrome, Standard Protection was designed to be privacy preserving at its core by using hash-based checks. This has been effective at protecting users by warning millions of users about dangerous websites. However, hash-based checks are inherently limited as they rely on lookups to a list of known bad sites. We see malicious actors moving fast and constantly evolving their tactics to avoid detection using sophisticated techniques. To counter this, we created a stronger and more customized level of protection that we could offer to users. To this end, we launched <a href=\"https://security.googleblog.com/2020/05/enhanced-safe-browsing-protection-now.html\">Enhanced Protection</a> in 2020, which builds upon the Standard Protection mode in Safe Browsing to keep you safer. </p><h2>Enhanced Protection</h2>  <p>This is the fastest and strongest level of protection against dangerous sites and downloads that Safe Browsing offers in Chrome. It enables more advanced detection techniques that adapt quickly as malicious activity evolves. As a result, Enhanced Protection users are phished 20-35% less than users on Standard Protection. A few of these features include: </p><ul> <li><strong>Real time URL checks: </strong>By checking with Google Safe Browsing\u2019s servers in real time before navigating to an uncommon site you\u2019re visiting, Chrome provides the best protection against dangerous sites and uses advanced machine learning models to continuously stay up to date.   <li><strong>File checks before downloading:</strong> In addition to Chrome\u2019s standard checks of downloaded files, Enhanced Protection users can choose to upload suspicious files to be scanned by Google Safe Browsing\u2019s full suite of malware detection technology before opening the file.  This helps catch brand new malware that Safe Browsing has not scanned before or dangerous files hosted on a brand new site.  <li><strong>More advanced vision-based phishing detection:</strong> To better detect phishing and dangerous sites for Enhanced Protection users, Chrome performs basic client-side checks on the web page to determine if it is suspicious. For pages deemed suspicious, Chrome sends a small set of visual features derived from the page to Google\u2019s Safe Browsing servers for additional phishing classification using computer vision. This helps Chrome more accurately recognize dangerous sites, and can warn other users before they visit the site. <div class=\"separator\" style=\"clear: both;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiYKo2fmjwtsXgO5jCijjCDsC-xoVAObaHe1InslUraHyxbv6UmccdJb0ARkCsGpFiWzMMqUTUyiZwjnOIBdqfdKQ-2FswDlqirTtscoq817LsKEnmQTAETtJvnFYMs1fJ5f7SqCCxagAaF9DiIhUiKfqzfo9XGv6pY-CutpyioyTFYca1FsYIPKYZbog/s1600/last%20gif.gif\" style=\"display: block; padding: 1em 0; text-align: center;\"><img alt=\"\" border=\"0\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiYKo2fmjwtsXgO5jCijjCDsC-xoVAObaHe1InslUraHyxbv6UmccdJb0ARkCsGpFiWzMMqUTUyiZwjnOIBdqfdKQ-2FswDlqirTtscoq817LsKEnmQTAETtJvnFYMs1fJ5f7SqCCxagAaF9DiIhUiKfqzfo9XGv6pY-CutpyioyTFYca1FsYIPKYZbog/s1600/last%20gif.gif\" /></a></div><h2>User data privacy and security</h2>  <p>By opting into Enhanced Protection, you are sharing additional data with Safe Browsing systems that allow us to offer better and faster security both for you, and for all users online. Ensuring user privacy is of utmost importance for us and we go through great lengths to anonymize as much of the data as possible.  This data is only used for security purposes and only retained for a short period of time. As threats evolve we will continuously add and improve our existing protections for Enhanced Protection users. These features go through extensive privacy reviews to ensure that your privacy continues to be prioritized while still providing you the highest level of security possible. </p><h2>How to enable</h2>  <p>Safe Browsing\u2019s Enhanced Protection is currently available for all desktop platforms, Android devices and now iOS mobile devices. It can be enabled by navigating to the Privacy and Security option located in Chrome settings. </p><p> <div class=\"separator\" style=\"clear: both;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEi2xYRWujcy2-WH0OiDhrb6uKtVm13Hkhe2Dbn1jaq1kra0aSGsbCwg9TcIhctg63sKhL4S12kKWrAON2o2TZzaUnIes1fWp8g0J6RqvzJTV8ReAI91cKt4pfuK3FG_1f7zujifo0N5kPLky81fnhsdTaKQsliAeF_08MKmp7ep-7z3bzPdDQb80J-dPA/s1600/Chrome_Enhance%20Safe%20Browsing_iOS_Opt%20in.gif\" style=\"display: block; padding: 1em 0; text-align: center;\"><img alt=\"\" border=\"0\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEi2xYRWujcy2-WH0OiDhrb6uKtVm13Hkhe2Dbn1jaq1kra0aSGsbCwg9TcIhctg63sKhL4S12kKWrAON2o2TZzaUnIes1fWp8g0J6RqvzJTV8ReAI91cKt4pfuK3FG_1f7zujifo0N5kPLky81fnhsdTaKQsliAeF_08MKmp7ep-7z3bzPdDQb80J-dPA/s1600/Chrome_Enhance%20Safe%20Browsing_iOS_Opt%20in.gif\" /></a></div> <p>For enterprise admins, you have the option of enabling Enhanced Safe Browsing on your managed devices using the<a href=\"https://chromeenterprise.google/policies/#SafeBrowsingProtectionLevel\"> SafeBrowsingProtectionLevel</a> policy and in the Admin Console. </p><p>For more details and updates about Safe Browsing and its Enhanced Protection mode, please visit our <a href=\"http://safebrowsing.google.com\">Google Safe Browsing</a> website and follow the Google Security Blog for updates on new features.  </p>",
            "links": [
                {
                    "href": "http://security.googleblog.com/feeds/5921013497020816147/comments/default",
                    "rel": "replies",
                    "title": "Post Comments",
                    "type": "application/atom+xml"
                },
                {
                    "href": "http://www.blogger.com/comment.g?blogID=1176949257541686127&postID=5921013497020816147&isPopup=true",
                    "rel": "replies",
                    "title": "0 Comments",
                    "type": "text/html"
                },
                {
                    "href": "http://www.blogger.com/feeds/1176949257541686127/posts/default/5921013497020816147",
                    "rel": "edit",
                    "type": "application/atom+xml"
                },
                {
                    "href": "http://www.blogger.com/feeds/1176949257541686127/posts/default/5921013497020816147",
                    "rel": "self",
                    "type": "application/atom+xml"
                },
                {
                    "href": "http://security.googleblog.com/2022/12/enhanced-protection-strongest-level-of.html",
                    "rel": "alternate",
                    "title": "Enhanced Protection - The strongest level of Safe Browsing protection Google Chrome has to offer",
                    "type": "text/html"
                }
            ],
            "authors": [
                {
                    "name": "Edward Fernandez",
                    "href": "http://www.blogger.com/profile/03784424747198152685",
                    "email": "noreply@blogger.com"
                }
            ],
            "author_detail": {
                "name": "Edward Fernandez",
                "href": "http://www.blogger.com/profile/03784424747198152685",
                "email": "noreply@blogger.com"
            },
            "href": "",
            "author": "Edward Fernandez (noreply@blogger.com)",
            "gd_image": {
                "height": "16",
                "rel": "http://schemas.google.com/g/2005#thumbnail",
                "src": "https://img1.blogblog.com/img/b16-rounded.gif",
                "width": "16"
            },
            "media_thumbnail": [
                {
                    "height": "72",
                    "url": "https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiuXzAK2S5bUWwetyCEnMg0OAiHPx5eknMyaQuPmFbx4lks-Vns4Ih0tLS5NNgAiTXvqFDwFSjcv0kDdePKdYY3_r86llYn4XL1hVdU0-sOUvnpDf-nMaw7F1Z5k_rsZm_Dsh5YAykKD4DBl3tSOMGwW2vxrqFIpgAi9NErU1gEP0-ekigIG5wBFm-8QQ/s72-c/Enhanced%20Safe%20Browsing_Warning%20page%28iOS%29%20Mobile%20and%20Desktop.png",
                    "width": "72"
                }
            ],
            "thr_total": "0"
        },
        {
            "id": "tag:blogger.com,1999:blog-1176949257541686127.post-1396014309343612973",
            "guidislink": true,
            "link": "http://security.googleblog.com/2022/12/memory-safe-languages-in-android-13.html",
            "published": "2022-12-01T11:58:00.000-05:00",
            "published_parsed": [
                2022,
                12,
                1,
                16,
                58,
                0,
                3,
                335,
                0
            ],
            "updated": "2022-12-01T11:58:33.674-05:00",
            "updated_parsed": [
                2022,
                12,
                1,
                16,
                58,
                33,
                3,
                335,
                0
            ],
            "tags": [
                {
                    "term": "android security",
                    "scheme": "http://www.blogger.com/atom/ns#",
                    "label": null
                },
                {
                    "term": "rust",
                    "scheme": "http://www.blogger.com/atom/ns#",
                    "label": null
                }
            ],
            "title": "Memory Safe Languages in Android 13",
            "title_detail": {
                "type": "text/plain",
                "language": null,
                "base": "http://feeds.feedburner.com/GoogleOnlineSecurityBlog",
                "value": "Memory Safe Languages in Android 13"
            },
            "content": [
                {
                    "type": "text/html",
                    "language": null,
                    "base": "http://feeds.feedburner.com/GoogleOnlineSecurityBlog",
                    "value": "<span class=\"byline-author\">Posted by Jeffrey Vander Stoep</span> <p>For more than a decade, memory safety vulnerabilities have consistently represented more than 65% of vulnerabilities <a href=\"https://alexgaynor.net/2020/may/27/science-on-memory-unsafety-and-security/\">across products, and across the industry</a>. On Android, we\u2019re now seeing something different - a significant drop in memory safety vulnerabilities and an associated drop in the severity of our vulnerabilities. </p><p>  </p><p>Looking at vulnerabilities reported in the <a href=\"https://source.android.com/docs/security/bulletin\">Android security bulletin</a>, which includes <a href=\"https://source.android.com/docs/security/overview/updates-resources#severity\">critical/high</a> severity vulnerabilities reported through our <a href=\"https://bughunters.google.com/about/rules/6171833274204160/android-and-google-devices-security-reward-program-rules\">vulnerability rewards program</a> (VRP) and vulnerabilities reported internally, we see that the number of memory safety vulnerabilities have dropped considerably over the past few years/releases. From 2019 to 2022 the annual number of memory safety vulnerabilities dropped from 223 down to 85. </p><p>    <div class=\"separator\" style=\"clear: both;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEh0Jc4WA4Zbch9KSu4ApG67kOIwSoxnTih3B43kfyr_nS8Q96-5eaS4l2Czb-ZDexcU6c5JMtnXboax5ZO1J0VbkqRKqfiIl5TtOfoTHmLiAivLPxRqpvTV1wJWNi0azR38SpKMFDLIcKjGRMwyOcKzdCEM4RBptIhVnR63DkWsg3brjQrG9D9rlAAvUA/s1600/Screenshot%202022-11-30%2011.08.27%20PM.png\" style=\"display: block; padding: 1em 0; text-align: center;\"><img alt=\"\" border=\"0\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEh0Jc4WA4Zbch9KSu4ApG67kOIwSoxnTih3B43kfyr_nS8Q96-5eaS4l2Czb-ZDexcU6c5JMtnXboax5ZO1J0VbkqRKqfiIl5TtOfoTHmLiAivLPxRqpvTV1wJWNi0azR38SpKMFDLIcKjGRMwyOcKzdCEM4RBptIhVnR63DkWsg3brjQrG9D9rlAAvUA/s1600/Screenshot%202022-11-30%2011.08.27%20PM.png\" /></a></div>      <p>This drop coincides with a shift in programming language usage away from memory unsafe languages. <strong>Android 13 is the first Android release where a majority of new code added to the release is in a memory safe language</strong>.  <p><div class=\"separator\" style=\"clear: both;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEigIE5IcW8C7JTLXvkcJzrChCsF8-y37632RSEbvTbhjplY5A4Tafvk2IuRKYShxjeznoC-EK3v9IrnpehiT_wUdnGGkvUKf5YSv8Dh9pLaD5GtPBu5O4JHP97ah5XFticV-aCt7G7YX-NIfRFXPhDbQ_pVNROX2ifIDCgBck6KyzZG-CqcvRJiaxFIjw/s626/Screenshot%202022-11-30%2011.20.22%20PM.png\" style=\"display: block; padding: 1em 0; text-align: center;\"><img alt=\"\" border=\"0\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEigIE5IcW8C7JTLXvkcJzrChCsF8-y37632RSEbvTbhjplY5A4Tafvk2IuRKYShxjeznoC-EK3v9IrnpehiT_wUdnGGkvUKf5YSv8Dh9pLaD5GtPBu5O4JHP97ah5XFticV-aCt7G7YX-NIfRFXPhDbQ_pVNROX2ifIDCgBck6KyzZG-CqcvRJiaxFIjw/s400/Screenshot%202022-11-30%2011.20.22%20PM.png\" width=\"400\" /></a></div>As the amount of new memory-unsafe code entering Android has decreased, so too has the number of memory safety vulnerabilities. From 2019 to 2022 it has dropped from 76% down to 35% of Android\u2019s total vulnerabilities. <strong>2022 is the first year where memory safety vulnerabilities do not represent a majority of Android\u2019s vulnerabilities</strong>. </p><p>   <div class=\"separator\" style=\"clear: both;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhQtnkSTDtPq_NDcTMM-zh_Ck9IFGj9Y9sC2yvZ7MRSYCSKZ9mqkYt5hfbxXZhrmAUdxxinY8GnNtT8_H0T6it9k0_mmjaWrxpbKhFMuR8N9eOopGBfKn5zxRH92hxO36ZTWdT0fl7ss2B8udmDgryj5BYhKkuYcqKQYemUMqGGwONg00C_DibLdyBiZQ/s1600/Screenshot%202022-11-30%2011.12.01%20PM.png\" style=\"display: block; padding: 1em 0; text-align: center;\"><img alt=\"\" border=\"0\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhQtnkSTDtPq_NDcTMM-zh_Ck9IFGj9Y9sC2yvZ7MRSYCSKZ9mqkYt5hfbxXZhrmAUdxxinY8GnNtT8_H0T6it9k0_mmjaWrxpbKhFMuR8N9eOopGBfKn5zxRH92hxO36ZTWdT0fl7ss2B8udmDgryj5BYhKkuYcqKQYemUMqGGwONg00C_DibLdyBiZQ/s1600/Screenshot%202022-11-30%2011.12.01%20PM.png\" /></a></div>   </p><p>While correlation doesn\u2019t necessarily mean causation, it\u2019s interesting to note that the percent of vulnerabilities caused by memory safety issues seems to correlate rather closely with the development language that\u2019s used for new code. This matches the <a href=\"https://security.googleblog.com/2021/04/rust-in-android-platform.html\">expectations published in our blog post 2 years ago</a> about the age of memory safety vulnerabilities and why our focus should be on new code, not rewriting existing components. Of course there may be other contributing factors or alternative explanations. However, the shift is a major departure from industry-wide trends that have persisted for more than a decade (and likely longer) despite substantial investments in improvements to memory unsafe languages.<br /><br />We continue to invest in tools to improve the safety of our C/C++. Over the past few releases we\u2019ve introduced the Scudo hardened allocator, HWASAN, GWP-ASAN, and KFENCE on production Android devices. We\u2019ve also increased our fuzzing coverage on our existing code base. Vulnerabilities found using these tools contributed both to prevention of vulnerabilities in new code as well as vulnerabilities found in old code that are included in the above evaluation. These are important tools, and critically important for our C/C++ code. However, these alone do not account for the large shift in vulnerabilities that we\u2019re seeing, and other projects that have deployed these technologies have not seen a major shift in their vulnerability composition. We believe Android\u2019s ongoing shift from memory-unsafe to memory-safe languages is a major factor. </p><h1>Rust for Native Code</h1>  <p>In Android 12 we announced support for the Rust programming language in the Android platform as a memory-safe alternative to C/C++. Since then we\u2019ve been scaling up our Rust experience and usage within the Android Open Source Project (AOSP).<br /><br />As we noted in the original announcement, our goal is not to convert existing C/C++ to Rust, but rather to shift development of new code to memory safe languages over time. </p><p><div class=\"separator\" style=\"clear: both;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgK7bZcWqsUDmKTeZEvMXZDXDoGViXjhUmjmkIpG7OwCKVVRK2Ps7UqWzENqylekR3jREu5j6uCcMp6KXC52LY_0vsPO33_6fzZB1lgCEP5bhcU-D4B1EUxWrrhfAR4j3Pu_jiIGSlNrRSov58resIoQcAPuoxbeccvY6PbCPl3E9oFLuCivwFoT-lG5g/s1600/Screenshot%202022-11-30%2011.13.29%20PM.png\" style=\"display: block; padding: 1em 0; text-align: center;\"><img alt=\"\" border=\"0\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgK7bZcWqsUDmKTeZEvMXZDXDoGViXjhUmjmkIpG7OwCKVVRK2Ps7UqWzENqylekR3jREu5j6uCcMp6KXC52LY_0vsPO33_6fzZB1lgCEP5bhcU-D4B1EUxWrrhfAR4j3Pu_jiIGSlNrRSov58resIoQcAPuoxbeccvY6PbCPl3E9oFLuCivwFoT-lG5g/s1600/Screenshot%202022-11-30%2011.13.29%20PM.png\" /></a></div> </p><p>In Android 13, about 21% of all new native code (C/C++/Rust) is in Rust. There are approximately 1.5 million total lines of Rust code in AOSP across new functionality and components such as Keystore2, the new Ultra-wideband (UWB) stack, DNS-over-HTTP3, Android\u2019s Virtualization framework (AVF), and various other components and their open source dependencies. These are low-level components that require a systems language which otherwise would have been implemented in C++. </p><h2>Security impact</h2>  <p><strong>To date, there have been zero memory safety vulnerabilities discovered in Android\u2019s Rust code.</strong></p><p><br />We don\u2019t expect that number to stay zero forever, but given the volume of new Rust code across two Android releases, and the security-sensitive components where it\u2019s being used, it\u2019s a significant result. It demonstrates that Rust is fulfilling its intended purpose of preventing Android\u2019s most common source of vulnerabilities. Historical vulnerability density is greater than 1/kLOC (1 vulnerability per thousand lines of code) in many of Android\u2019s C/C++ components (e.g. media, Bluetooth, NFC, etc). Based on this historical vulnerability density, it\u2019s likely that using Rust has already prevented hundreds of vulnerabilities from reaching production. </p><h2>What about unsafe Rust?</h2>  <p>Operating system development requires accessing resources that the compiler cannot reason about. For memory-safe languages this means that an escape hatch is required to do systems programming. For Java, Android uses JNI to access low-level resources. When using JNI, care must be taken to avoid introducing unsafe behavior. Fortunately, it has proven significantly simpler to review small snippets of C/C++ for safety than entire programs. There are no pure Java processes in Android. It\u2019s all built on top of JNI. Despite that, memory safety vulnerabilities are exceptionally rare in our Java code. </p><p>Rust likewise has the unsafe{} escape hatch which allows interacting with system resources and non-Rust code. Much like with Java + JNI, using this escape hatch comes with additional scrutiny. But like Java, our Rust code is proving to be significantly safer than pure C/C++ implementations. Let\u2019s look at the new UWB stack as an example. </p><p>There are exactly two uses of unsafe in the UWB code: one to materialize a reference to a Rust object stored inside a Java object, and another for the teardown of the same. Unsafe was actively helpful in this situation because the extra attention on this code allowed us to discover a possible race condition and guard against it. </p><p>In general, use of unsafe in Android\u2019s Rust appears to be working as intended. It\u2019s used rarely, and when it is used, it\u2019s encapsulating behavior that\u2019s easier to reason about and review for safety.  </p><h2>Safety measures make memory-unsafe languages slow</h2>  <p>Mobile devices have limited resources and we\u2019re always trying to make better use of them to provide users with a better experience (for example, by optimizing performance, improving battery life, and reducing lag). Using memory unsafe code often means that we have to make tradeoffs between security and performance, such as adding additional sandboxing, sanitizers, runtime mitigations, and hardware protections. Unfortunately, these all negatively impact code size, memory, and performance. </p><p>Using Rust in Android allows us to optimize both security and system health with fewer compromises. For example, with the new UWB stack we were able to save several megabytes of memory and avoid some IPC latency by running it within an existing process. The new DNS-over-HTTP/3 implementation uses fewer threads to perform the same amount of work by using Rust\u2019s async/await feature to process many tasks on a single thread in a safe manner. </p><h1>What about non-memory-safety vulnerabilities?</h1>  <p>The number of vulnerabilities reported in the bulletin has stayed somewhat steady over the past 4 years at around 20 per month, even as the number of memory safety vulnerabilities has gone down significantly. So, what gives? A few thoughts on that. </p><h2>A drop in severity</h2>  <p>Memory safety vulnerabilities disproportionately represent our most severe vulnerabilities. In 2022, despite only representing 36% of vulnerabilities in the security bulletin, memory-safety vulnerabilities accounted for 86% of our critical severity security vulnerabilities, our highest rating, and 89% of our <a href=\"https://source.android.com/docs/security/overview/updates-resources#local-vs-remote\">remotely exploitable</a> vulnerabilities. Over the past few years, memory safety vulnerabilities have accounted for <a href=\"https://docs.google.com/spreadsheets/d/1lkNJ0uQwbeC1ZTRrxdtuPLCIl7mlUreoKfSIgajnSyY/edit#gid=1190662839\">78% of confirmed exploited \u201cin-the-wild\u201d</a> vulnerabilities on Android devices. </p><p> <div class=\"separator\" style=\"clear: both;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjagxsGRgMlmXNDuPtYJ2Dky0bDcZc36_9acDxBNgmPfFNQJ0UsOi-UMBQGbt86hdtHPZXbVm3g95hw36TJjxZYzuEq7dKBsuZrCacapQxlDPSn05vfffcyVuvNHqK7KxkiXP9iXcCIWc-6cR04svnE2qs0RSPr92k5FtkCgQJBZVzpU30nAAbbAGiXJA/s1600/Screenshot%202022-11-30%2011.15.03%20PM.png\" style=\"display: block; padding: 1em 0; text-align: center;\"><img alt=\"\" border=\"0\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjagxsGRgMlmXNDuPtYJ2Dky0bDcZc36_9acDxBNgmPfFNQJ0UsOi-UMBQGbt86hdtHPZXbVm3g95hw36TJjxZYzuEq7dKBsuZrCacapQxlDPSn05vfffcyVuvNHqK7KxkiXP9iXcCIWc-6cR04svnE2qs0RSPr92k5FtkCgQJBZVzpU30nAAbbAGiXJA/s1600/Screenshot%202022-11-30%2011.15.03%20PM.png\" /></a></div>   <p>Many vulnerabilities have a well defined scope of impact. For example, a permissions bypass vulnerability generally grants access to a specific set of information or resources and is generally only reachable if code is already running on the device. Memory safety vulnerabilities tend to be much more versatile. Getting code execution in a process grants access not just to a specific resource, but everything that that process has access to, including attack surface to other processes. Memory safety vulnerabilities are often flexible enough to allow chaining multiple vulnerabilities together. The high versatility is perhaps one reason why the vast majority of exploit chains that we have seen use one or more memory safety vulnerabilities.<br /><br />With the drop in memory safety vulnerabilities, we\u2019re seeing a corresponding drop in vulnerability severity. </p><p> <div class=\"separator\" style=\"clear: both;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhbyFiia2jHlVeSsSagNZoC4kzxAQPvQ2w-MaLVTCNgFY0xgwwPWbGkKfs92PudM_3tSDrcVUNSeeQtz6Se0Ae3RKmyIoKxR7oClhfEcIIglFlnS-QYSPYU9rxJ11Q8kah7T4HE2vvZNnsXERNLMpGBuZtzWv-dau51lA8ZoTVCcBHDlLjtZzmgb8OeAA/s1600/Screenshot%202022-11-30%2011.15.47%20PM.png\" style=\"display: block; padding: 1em 0; text-align: center;\"><img alt=\"\" border=\"0\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhbyFiia2jHlVeSsSagNZoC4kzxAQPvQ2w-MaLVTCNgFY0xgwwPWbGkKfs92PudM_3tSDrcVUNSeeQtz6Se0Ae3RKmyIoKxR7oClhfEcIIglFlnS-QYSPYU9rxJ11Q8kah7T4HE2vvZNnsXERNLMpGBuZtzWv-dau51lA8ZoTVCcBHDlLjtZzmgb8OeAA/s1600/Screenshot%202022-11-30%2011.15.47%20PM.png\" /></a></div>      <br /><br />With the decrease in our most severe vulnerabilities, we\u2019re seeing increased reports of less severe vulnerability types. For example, about 15% of vulnerabilities in 2022 are DoS vulnerabilities (requiring a factory reset of the device). This represents a drop in security risk.<br /><br />Android appreciates our security research community and all contributions made to the Android VRP. We apply higher payouts for more severe vulnerabilities to ensure that incentives are aligned with vulnerability risk. As we make it harder to find and exploit memory safety vulnerabilities, security researchers are pivoting their focus towards other vulnerability types. Perhaps the total number of vulnerabilities found is primarily constrained by the total researcher time devoted to finding them. Or perhaps there\u2019s another explanation that we have not considered. In any case, we hope that if our vulnerability researcher community is finding fewer of these powerful and versatile vulnerabilities, the same applies to adversaries. </p><h2>Attack surface</h2>  <p>Despite most of the existing code in Android being in C/C++, most of Android\u2019s API surface is implemented in Java. This means that Java is disproportionately represented in the OS\u2019s attack surface that is reachable by apps. This provides an important security property: most of the attack surface that\u2019s reachable by apps isn\u2019t susceptible to memory corruption bugs. It also means that we would expect Java to be over-represented when looking at non-memory safety vulnerabilities. It\u2019s important to note however that types of vulnerabilities that we\u2019re seeing in Java are largely logic bugs, and as mentioned above, generally lower in severity. Going forward, we will be exploring how Rust\u2019s richer type system can <a href=\"http://cliffle.com/blog/rust-typestate/\">help prevent common types of logic bugs</a> as well. </p><h2>Google\u2019s ability to react</h2>  <p>With the vulnerability types we\u2019re seeing now, Google\u2019s ability to detect and prevent misuse is considerably better. <a href=\"https://developers.google.com/android/play-protect/cloud-based-protections\">Apps are scanned</a> to help detect misuse of APIs before being published on the Play store and Google Play Protect warns users if they have abusive apps installed.  </p><h1>What\u2019s next?</h1>  <p>Migrating away from C/C++ is challenging, but we\u2019re making progress. Rust use is growing in the Android platform, but that\u2019s not the end of the story. To meet the goals of improving security, stability, and quality Android-wide, we need to be able to use Rust anywhere in the codebase that native code is required. We\u2019re implementing userspace HALs in Rust. We\u2019re adding support for Rust in Trusted Applications. We\u2019ve migrated VM firmware in the Android Virtualization Framework to Rust. With support for Rust landing in Linux 6.1 we\u2019re excited to bring memory-safety to the kernel, starting with kernel drivers. </p><p>As Android migrates away from C/C++ to Java/Kotlin/Rust, we expect the number of memory safety vulnerabilities to continue to fall. Here\u2019s to a future where memory corruption bugs on Android are rare! </p>"
                }
            ],
            "summary": "<span class=\"byline-author\">Posted by Jeffrey Vander Stoep</span> <p>For more than a decade, memory safety vulnerabilities have consistently represented more than 65% of vulnerabilities <a href=\"https://alexgaynor.net/2020/may/27/science-on-memory-unsafety-and-security/\">across products, and across the industry</a>. On Android, we\u2019re now seeing something different - a significant drop in memory safety vulnerabilities and an associated drop in the severity of our vulnerabilities. </p><p>  </p><p>Looking at vulnerabilities reported in the <a href=\"https://source.android.com/docs/security/bulletin\">Android security bulletin</a>, which includes <a href=\"https://source.android.com/docs/security/overview/updates-resources#severity\">critical/high</a> severity vulnerabilities reported through our <a href=\"https://bughunters.google.com/about/rules/6171833274204160/android-and-google-devices-security-reward-program-rules\">vulnerability rewards program</a> (VRP) and vulnerabilities reported internally, we see that the number of memory safety vulnerabilities have dropped considerably over the past few years/releases. From 2019 to 2022 the annual number of memory safety vulnerabilities dropped from 223 down to 85. </p><p>    <div class=\"separator\" style=\"clear: both;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEh0Jc4WA4Zbch9KSu4ApG67kOIwSoxnTih3B43kfyr_nS8Q96-5eaS4l2Czb-ZDexcU6c5JMtnXboax5ZO1J0VbkqRKqfiIl5TtOfoTHmLiAivLPxRqpvTV1wJWNi0azR38SpKMFDLIcKjGRMwyOcKzdCEM4RBptIhVnR63DkWsg3brjQrG9D9rlAAvUA/s1600/Screenshot%202022-11-30%2011.08.27%20PM.png\" style=\"display: block; padding: 1em 0; text-align: center;\"><img alt=\"\" border=\"0\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEh0Jc4WA4Zbch9KSu4ApG67kOIwSoxnTih3B43kfyr_nS8Q96-5eaS4l2Czb-ZDexcU6c5JMtnXboax5ZO1J0VbkqRKqfiIl5TtOfoTHmLiAivLPxRqpvTV1wJWNi0azR38SpKMFDLIcKjGRMwyOcKzdCEM4RBptIhVnR63DkWsg3brjQrG9D9rlAAvUA/s1600/Screenshot%202022-11-30%2011.08.27%20PM.png\" /></a></div>      <p>This drop coincides with a shift in programming language usage away from memory unsafe languages. <strong>Android 13 is the first Android release where a majority of new code added to the release is in a memory safe language</strong>.  <p><div class=\"separator\" style=\"clear: both;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEigIE5IcW8C7JTLXvkcJzrChCsF8-y37632RSEbvTbhjplY5A4Tafvk2IuRKYShxjeznoC-EK3v9IrnpehiT_wUdnGGkvUKf5YSv8Dh9pLaD5GtPBu5O4JHP97ah5XFticV-aCt7G7YX-NIfRFXPhDbQ_pVNROX2ifIDCgBck6KyzZG-CqcvRJiaxFIjw/s626/Screenshot%202022-11-30%2011.20.22%20PM.png\" style=\"display: block; padding: 1em 0; text-align: center;\"><img alt=\"\" border=\"0\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEigIE5IcW8C7JTLXvkcJzrChCsF8-y37632RSEbvTbhjplY5A4Tafvk2IuRKYShxjeznoC-EK3v9IrnpehiT_wUdnGGkvUKf5YSv8Dh9pLaD5GtPBu5O4JHP97ah5XFticV-aCt7G7YX-NIfRFXPhDbQ_pVNROX2ifIDCgBck6KyzZG-CqcvRJiaxFIjw/s400/Screenshot%202022-11-30%2011.20.22%20PM.png\" width=\"400\" /></a></div>As the amount of new memory-unsafe code entering Android has decreased, so too has the number of memory safety vulnerabilities. From 2019 to 2022 it has dropped from 76% down to 35% of Android\u2019s total vulnerabilities. <strong>2022 is the first year where memory safety vulnerabilities do not represent a majority of Android\u2019s vulnerabilities</strong>. </p><p>   <div class=\"separator\" style=\"clear: both;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhQtnkSTDtPq_NDcTMM-zh_Ck9IFGj9Y9sC2yvZ7MRSYCSKZ9mqkYt5hfbxXZhrmAUdxxinY8GnNtT8_H0T6it9k0_mmjaWrxpbKhFMuR8N9eOopGBfKn5zxRH92hxO36ZTWdT0fl7ss2B8udmDgryj5BYhKkuYcqKQYemUMqGGwONg00C_DibLdyBiZQ/s1600/Screenshot%202022-11-30%2011.12.01%20PM.png\" style=\"display: block; padding: 1em 0; text-align: center;\"><img alt=\"\" border=\"0\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhQtnkSTDtPq_NDcTMM-zh_Ck9IFGj9Y9sC2yvZ7MRSYCSKZ9mqkYt5hfbxXZhrmAUdxxinY8GnNtT8_H0T6it9k0_mmjaWrxpbKhFMuR8N9eOopGBfKn5zxRH92hxO36ZTWdT0fl7ss2B8udmDgryj5BYhKkuYcqKQYemUMqGGwONg00C_DibLdyBiZQ/s1600/Screenshot%202022-11-30%2011.12.01%20PM.png\" /></a></div>   </p><p>While correlation doesn\u2019t necessarily mean causation, it\u2019s interesting to note that the percent of vulnerabilities caused by memory safety issues seems to correlate rather closely with the development language that\u2019s used for new code. This matches the <a href=\"https://security.googleblog.com/2021/04/rust-in-android-platform.html\">expectations published in our blog post 2 years ago</a> about the age of memory safety vulnerabilities and why our focus should be on new code, not rewriting existing components. Of course there may be other contributing factors or alternative explanations. However, the shift is a major departure from industry-wide trends that have persisted for more than a decade (and likely longer) despite substantial investments in improvements to memory unsafe languages.<br /><br />We continue to invest in tools to improve the safety of our C/C++. Over the past few releases we\u2019ve introduced the Scudo hardened allocator, HWASAN, GWP-ASAN, and KFENCE on production Android devices. We\u2019ve also increased our fuzzing coverage on our existing code base. Vulnerabilities found using these tools contributed both to prevention of vulnerabilities in new code as well as vulnerabilities found in old code that are included in the above evaluation. These are important tools, and critically important for our C/C++ code. However, these alone do not account for the large shift in vulnerabilities that we\u2019re seeing, and other projects that have deployed these technologies have not seen a major shift in their vulnerability composition. We believe Android\u2019s ongoing shift from memory-unsafe to memory-safe languages is a major factor. </p><h1>Rust for Native Code</h1>  <p>In Android 12 we announced support for the Rust programming language in the Android platform as a memory-safe alternative to C/C++. Since then we\u2019ve been scaling up our Rust experience and usage within the Android Open Source Project (AOSP).<br /><br />As we noted in the original announcement, our goal is not to convert existing C/C++ to Rust, but rather to shift development of new code to memory safe languages over time. </p><p><div class=\"separator\" style=\"clear: both;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgK7bZcWqsUDmKTeZEvMXZDXDoGViXjhUmjmkIpG7OwCKVVRK2Ps7UqWzENqylekR3jREu5j6uCcMp6KXC52LY_0vsPO33_6fzZB1lgCEP5bhcU-D4B1EUxWrrhfAR4j3Pu_jiIGSlNrRSov58resIoQcAPuoxbeccvY6PbCPl3E9oFLuCivwFoT-lG5g/s1600/Screenshot%202022-11-30%2011.13.29%20PM.png\" style=\"display: block; padding: 1em 0; text-align: center;\"><img alt=\"\" border=\"0\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgK7bZcWqsUDmKTeZEvMXZDXDoGViXjhUmjmkIpG7OwCKVVRK2Ps7UqWzENqylekR3jREu5j6uCcMp6KXC52LY_0vsPO33_6fzZB1lgCEP5bhcU-D4B1EUxWrrhfAR4j3Pu_jiIGSlNrRSov58resIoQcAPuoxbeccvY6PbCPl3E9oFLuCivwFoT-lG5g/s1600/Screenshot%202022-11-30%2011.13.29%20PM.png\" /></a></div> </p><p>In Android 13, about 21% of all new native code (C/C++/Rust) is in Rust. There are approximately 1.5 million total lines of Rust code in AOSP across new functionality and components such as Keystore2, the new Ultra-wideband (UWB) stack, DNS-over-HTTP3, Android\u2019s Virtualization framework (AVF), and various other components and their open source dependencies. These are low-level components that require a systems language which otherwise would have been implemented in C++. </p><h2>Security impact</h2>  <p><strong>To date, there have been zero memory safety vulnerabilities discovered in Android\u2019s Rust code.</strong></p><p><br />We don\u2019t expect that number to stay zero forever, but given the volume of new Rust code across two Android releases, and the security-sensitive components where it\u2019s being used, it\u2019s a significant result. It demonstrates that Rust is fulfilling its intended purpose of preventing Android\u2019s most common source of vulnerabilities. Historical vulnerability density is greater than 1/kLOC (1 vulnerability per thousand lines of code) in many of Android\u2019s C/C++ components (e.g. media, Bluetooth, NFC, etc). Based on this historical vulnerability density, it\u2019s likely that using Rust has already prevented hundreds of vulnerabilities from reaching production. </p><h2>What about unsafe Rust?</h2>  <p>Operating system development requires accessing resources that the compiler cannot reason about. For memory-safe languages this means that an escape hatch is required to do systems programming. For Java, Android uses JNI to access low-level resources. When using JNI, care must be taken to avoid introducing unsafe behavior. Fortunately, it has proven significantly simpler to review small snippets of C/C++ for safety than entire programs. There are no pure Java processes in Android. It\u2019s all built on top of JNI. Despite that, memory safety vulnerabilities are exceptionally rare in our Java code. </p><p>Rust likewise has the unsafe{} escape hatch which allows interacting with system resources and non-Rust code. Much like with Java + JNI, using this escape hatch comes with additional scrutiny. But like Java, our Rust code is proving to be significantly safer than pure C/C++ implementations. Let\u2019s look at the new UWB stack as an example. </p><p>There are exactly two uses of unsafe in the UWB code: one to materialize a reference to a Rust object stored inside a Java object, and another for the teardown of the same. Unsafe was actively helpful in this situation because the extra attention on this code allowed us to discover a possible race condition and guard against it. </p><p>In general, use of unsafe in Android\u2019s Rust appears to be working as intended. It\u2019s used rarely, and when it is used, it\u2019s encapsulating behavior that\u2019s easier to reason about and review for safety.  </p><h2>Safety measures make memory-unsafe languages slow</h2>  <p>Mobile devices have limited resources and we\u2019re always trying to make better use of them to provide users with a better experience (for example, by optimizing performance, improving battery life, and reducing lag). Using memory unsafe code often means that we have to make tradeoffs between security and performance, such as adding additional sandboxing, sanitizers, runtime mitigations, and hardware protections. Unfortunately, these all negatively impact code size, memory, and performance. </p><p>Using Rust in Android allows us to optimize both security and system health with fewer compromises. For example, with the new UWB stack we were able to save several megabytes of memory and avoid some IPC latency by running it within an existing process. The new DNS-over-HTTP/3 implementation uses fewer threads to perform the same amount of work by using Rust\u2019s async/await feature to process many tasks on a single thread in a safe manner. </p><h1>What about non-memory-safety vulnerabilities?</h1>  <p>The number of vulnerabilities reported in the bulletin has stayed somewhat steady over the past 4 years at around 20 per month, even as the number of memory safety vulnerabilities has gone down significantly. So, what gives? A few thoughts on that. </p><h2>A drop in severity</h2>  <p>Memory safety vulnerabilities disproportionately represent our most severe vulnerabilities. In 2022, despite only representing 36% of vulnerabilities in the security bulletin, memory-safety vulnerabilities accounted for 86% of our critical severity security vulnerabilities, our highest rating, and 89% of our <a href=\"https://source.android.com/docs/security/overview/updates-resources#local-vs-remote\">remotely exploitable</a> vulnerabilities. Over the past few years, memory safety vulnerabilities have accounted for <a href=\"https://docs.google.com/spreadsheets/d/1lkNJ0uQwbeC1ZTRrxdtuPLCIl7mlUreoKfSIgajnSyY/edit#gid=1190662839\">78% of confirmed exploited \u201cin-the-wild\u201d</a> vulnerabilities on Android devices. </p><p> <div class=\"separator\" style=\"clear: both;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjagxsGRgMlmXNDuPtYJ2Dky0bDcZc36_9acDxBNgmPfFNQJ0UsOi-UMBQGbt86hdtHPZXbVm3g95hw36TJjxZYzuEq7dKBsuZrCacapQxlDPSn05vfffcyVuvNHqK7KxkiXP9iXcCIWc-6cR04svnE2qs0RSPr92k5FtkCgQJBZVzpU30nAAbbAGiXJA/s1600/Screenshot%202022-11-30%2011.15.03%20PM.png\" style=\"display: block; padding: 1em 0; text-align: center;\"><img alt=\"\" border=\"0\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjagxsGRgMlmXNDuPtYJ2Dky0bDcZc36_9acDxBNgmPfFNQJ0UsOi-UMBQGbt86hdtHPZXbVm3g95hw36TJjxZYzuEq7dKBsuZrCacapQxlDPSn05vfffcyVuvNHqK7KxkiXP9iXcCIWc-6cR04svnE2qs0RSPr92k5FtkCgQJBZVzpU30nAAbbAGiXJA/s1600/Screenshot%202022-11-30%2011.15.03%20PM.png\" /></a></div>   <p>Many vulnerabilities have a well defined scope of impact. For example, a permissions bypass vulnerability generally grants access to a specific set of information or resources and is generally only reachable if code is already running on the device. Memory safety vulnerabilities tend to be much more versatile. Getting code execution in a process grants access not just to a specific resource, but everything that that process has access to, including attack surface to other processes. Memory safety vulnerabilities are often flexible enough to allow chaining multiple vulnerabilities together. The high versatility is perhaps one reason why the vast majority of exploit chains that we have seen use one or more memory safety vulnerabilities.<br /><br />With the drop in memory safety vulnerabilities, we\u2019re seeing a corresponding drop in vulnerability severity. </p><p> <div class=\"separator\" style=\"clear: both;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhbyFiia2jHlVeSsSagNZoC4kzxAQPvQ2w-MaLVTCNgFY0xgwwPWbGkKfs92PudM_3tSDrcVUNSeeQtz6Se0Ae3RKmyIoKxR7oClhfEcIIglFlnS-QYSPYU9rxJ11Q8kah7T4HE2vvZNnsXERNLMpGBuZtzWv-dau51lA8ZoTVCcBHDlLjtZzmgb8OeAA/s1600/Screenshot%202022-11-30%2011.15.47%20PM.png\" style=\"display: block; padding: 1em 0; text-align: center;\"><img alt=\"\" border=\"0\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhbyFiia2jHlVeSsSagNZoC4kzxAQPvQ2w-MaLVTCNgFY0xgwwPWbGkKfs92PudM_3tSDrcVUNSeeQtz6Se0Ae3RKmyIoKxR7oClhfEcIIglFlnS-QYSPYU9rxJ11Q8kah7T4HE2vvZNnsXERNLMpGBuZtzWv-dau51lA8ZoTVCcBHDlLjtZzmgb8OeAA/s1600/Screenshot%202022-11-30%2011.15.47%20PM.png\" /></a></div>      <br /><br />With the decrease in our most severe vulnerabilities, we\u2019re seeing increased reports of less severe vulnerability types. For example, about 15% of vulnerabilities in 2022 are DoS vulnerabilities (requiring a factory reset of the device). This represents a drop in security risk.<br /><br />Android appreciates our security research community and all contributions made to the Android VRP. We apply higher payouts for more severe vulnerabilities to ensure that incentives are aligned with vulnerability risk. As we make it harder to find and exploit memory safety vulnerabilities, security researchers are pivoting their focus towards other vulnerability types. Perhaps the total number of vulnerabilities found is primarily constrained by the total researcher time devoted to finding them. Or perhaps there\u2019s another explanation that we have not considered. In any case, we hope that if our vulnerability researcher community is finding fewer of these powerful and versatile vulnerabilities, the same applies to adversaries. </p><h2>Attack surface</h2>  <p>Despite most of the existing code in Android being in C/C++, most of Android\u2019s API surface is implemented in Java. This means that Java is disproportionately represented in the OS\u2019s attack surface that is reachable by apps. This provides an important security property: most of the attack surface that\u2019s reachable by apps isn\u2019t susceptible to memory corruption bugs. It also means that we would expect Java to be over-represented when looking at non-memory safety vulnerabilities. It\u2019s important to note however that types of vulnerabilities that we\u2019re seeing in Java are largely logic bugs, and as mentioned above, generally lower in severity. Going forward, we will be exploring how Rust\u2019s richer type system can <a href=\"http://cliffle.com/blog/rust-typestate/\">help prevent common types of logic bugs</a> as well. </p><h2>Google\u2019s ability to react</h2>  <p>With the vulnerability types we\u2019re seeing now, Google\u2019s ability to detect and prevent misuse is considerably better. <a href=\"https://developers.google.com/android/play-protect/cloud-based-protections\">Apps are scanned</a> to help detect misuse of APIs before being published on the Play store and Google Play Protect warns users if they have abusive apps installed.  </p><h1>What\u2019s next?</h1>  <p>Migrating away from C/C++ is challenging, but we\u2019re making progress. Rust use is growing in the Android platform, but that\u2019s not the end of the story. To meet the goals of improving security, stability, and quality Android-wide, we need to be able to use Rust anywhere in the codebase that native code is required. We\u2019re implementing userspace HALs in Rust. We\u2019re adding support for Rust in Trusted Applications. We\u2019ve migrated VM firmware in the Android Virtualization Framework to Rust. With support for Rust landing in Linux 6.1 we\u2019re excited to bring memory-safety to the kernel, starting with kernel drivers. </p><p>As Android migrates away from C/C++ to Java/Kotlin/Rust, we expect the number of memory safety vulnerabilities to continue to fall. Here\u2019s to a future where memory corruption bugs on Android are rare! </p>",
            "links": [
                {
                    "href": "http://security.googleblog.com/feeds/1396014309343612973/comments/default",
                    "rel": "replies",
                    "title": "Post Comments",
                    "type": "application/atom+xml"
                },
                {
                    "href": "http://www.blogger.com/comment.g?blogID=1176949257541686127&postID=1396014309343612973&isPopup=true",
                    "rel": "replies",
                    "title": "0 Comments",
                    "type": "text/html"
                },
                {
                    "href": "http://www.blogger.com/feeds/1176949257541686127/posts/default/1396014309343612973",
                    "rel": "edit",
                    "type": "application/atom+xml"
                },
                {
                    "href": "http://www.blogger.com/feeds/1176949257541686127/posts/default/1396014309343612973",
                    "rel": "self",
                    "type": "application/atom+xml"
                },
                {
                    "href": "http://security.googleblog.com/2022/12/memory-safe-languages-in-android-13.html",
                    "rel": "alternate",
                    "title": "Memory Safe Languages in Android 13",
                    "type": "text/html"
                }
            ],
            "authors": [
                {
                    "name": "Edward Fernandez",
                    "href": "http://www.blogger.com/profile/03784424747198152685",
                    "email": "noreply@blogger.com"
                }
            ],
            "author_detail": {
                "name": "Edward Fernandez",
                "href": "http://www.blogger.com/profile/03784424747198152685",
                "email": "noreply@blogger.com"
            },
            "href": "",
            "author": "Edward Fernandez (noreply@blogger.com)",
            "gd_image": {
                "height": "16",
                "rel": "http://schemas.google.com/g/2005#thumbnail",
                "src": "https://img1.blogblog.com/img/b16-rounded.gif",
                "width": "16"
            },
            "media_thumbnail": [
                {
                    "height": "72",
                    "url": "https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEh0Jc4WA4Zbch9KSu4ApG67kOIwSoxnTih3B43kfyr_nS8Q96-5eaS4l2Czb-ZDexcU6c5JMtnXboax5ZO1J0VbkqRKqfiIl5TtOfoTHmLiAivLPxRqpvTV1wJWNi0azR38SpKMFDLIcKjGRMwyOcKzdCEM4RBptIhVnR63DkWsg3brjQrG9D9rlAAvUA/s72-c/Screenshot%202022-11-30%2011.08.27%20PM.png",
                    "width": "72"
                }
            ],
            "thr_total": "0"
        },
        {
            "id": "tag:blogger.com,1999:blog-1176949257541686127.post-2642284495799080200",
            "guidislink": true,
            "link": "http://security.googleblog.com/2022/11/our-principles-for-iot-security-labeling.html",
            "published": "2022-11-02T13:00:00.003-04:00",
            "published_parsed": [
                2022,
                11,
                2,
                17,
                0,
                0,
                2,
                306,
                0
            ],
            "updated": "2022-11-14T22:29:35.945-05:00",
            "updated_parsed": [
                2022,
                11,
                15,
                3,
                29,
                35,
                1,
                319,
                0
            ],
            "title": "Our Principles for IoT Security Labeling",
            "title_detail": {
                "type": "text/plain",
                "language": null,
                "base": "http://feeds.feedburner.com/GoogleOnlineSecurityBlog",
                "value": "Our Principles for IoT Security Labeling"
            },
            "content": [
                {
                    "type": "text/html",
                    "language": null,
                    "base": "http://feeds.feedburner.com/GoogleOnlineSecurityBlog",
                    "value": "<span class=\"byline-author\">Posted by Dave Kleidermacher, Eugene Liderman, and Android and Made by Google security teams</span> <p>We believe that security and transparency are paramount pillars for electronic products connected to the Internet.  Over the past year, we\u2019ve been excited to see more focused activity across policymakers, industry partners, developers, and public interest advocates around raising the security and transparency bar for IoT products.  </p><p>That said, the details of IoT product labeling - the definition of labeling, what labeling needs to convey in terms of security and privacy, where the label should reside, and how to achieve consumer acceptance, are still open for debate.  Google has also been considering these core questions for a long time.  As an operating system, IoT product provider, and the maintainer of multiple large ecosystems, we see firsthand how critical these details will be to the future of the IoT. In an effort to be a catalyst for collaboration and transparency, today we\u2019re sharing our proposed list of principles around IoT security labeling. </p><p><strong>Setting the Stage: Defining IoT Labeling </strong></p><p>IoT labeling is a complex and nuanced topic, so as an industry, we should first align on a set of labeling definitions that could help reduce potential fragmentation and offer a harmonized approach that could drive a desired outcome: </p><ul> <li><span style=\"text-decoration: underline;\">Label</span>: printed and/or digital representation of a digital product\u2019s security and/or privacy status intended to inform consumers and/or other stakeholders.  A label may include both printed and digital representations; for example, a printed label may include a logo and QR code that references a digital representation of the security claims being made.  </li><li><span style=\"text-decoration: underline;\">Labeling scheme</span>:  a program that defines, manages, and monitors the use of labels, including but not limited to user experience, adherence to specific standards or security profiles, and lifecycle management of the label (e.g. decommissioning)  </li><li><span style=\"text-decoration: underline;\">Evaluation scheme</span>: a program that publishes, manages, and monitors the security claims of digital products against security requirements and related standards; labeling schemes may rely on evaluation schemes to produce the information referred to in or by their labels. </li></ul><p><strong>Proposed Principles for IoT Security Labeling Schemes</strong></p><p>We believe in five core principles for IoT labeling schemes. These principles will help increase transparency against the full baseline of security criteria for IoT. These principles will also increase competition in security and push manufacturers to offer products with effective security protections, increase transparency, and help generate higher levels of assurance of protection over time. </p><p><strong><em><span style=\"text-decoration: underline;\">1. A printed label must not imply trust</span></em></strong></p><p>Unlike food labels, digital security labels must be \u201clive\u201d labels, where security/privacy status is conveyed on a central maintained website, which ideally would be the same site hosting the evaluation scheme. A physical label, either printed on a box or visible in an app, can be used if and only if it encourages users to visit the website (e.g. scan a QR code or click a link) to obtain the real-time status.  </p><p>At any point in time, a digital product may become unsafe for use.  For example, if a critical, in-the-wild, remote exploit of a product is discovered and cannot be mitigated (e.g. via a patch), then it may be necessary to change that product\u2019s status from safe to unsafe.  </p><p>Printed labels, if they convey trust implicitly such as, \u201ccertified to NNN standard\u201d or, \u201c3 stars\u201d, run the danger of influencing consumers to make harmful decisions. A consumer may purchase a webcam with a \u201c3-star\u201d security label only to find when they return home the product has non-mitigatable vulnerabilities that make it unsafe. Or, a product may sit on a shelf long enough to become non-compliant or unsafe. Labeling programs should help consumers make better security decisions. The dangers around a printed \u201ctrust me\u201d label will in some circumstances, mislead consumers.  </p><p><strong><em><span style=\"text-decoration: underline;\">2. Labels must reference strong international evaluation schemes</span></em></strong></p><p>The challenge of utilizing a labeling scheme is not the physical manifestation of the label but rather ensuring that the label references a security/privacy status/posture that is maintained by a trustworthy security/privacy evaluation scheme, such as the ones being developed by the <a href=\"https://csa-iot.org/newsroom/global-approach-to-iot-cybersecurity/\">Connectivity Standards Alliance (CSA)</a> and <a href=\"https://www.gsma.com/security/security-advice-for-mobile-device-users/\">GSMA</a>. Both of these organizations are actively developing IoT security/privacy evaluation schemes that reference well-regarded standards, including recent IoT baseline security guidance from NIST, ETSI, ISO, and OWASP.  Some important requirements for evaluation schemes leveraged by a national labeling program include: </p><p><strong><em>Strong governance</em>: </strong>The NGO must have strong governance.  For example, NGOs that house both a scheme and their own in-house evaluation lab introduce potential conflicts of interest that should be avoided.  </p><p><strong><em>Strong track record for managing evaluation schemes at scale</em>:</strong> Managing a high quality, global scheme is hard. National authorities have struggled at this for many years, especially in the consumer realm.  An NGO that has no prior track record of managing a scheme with significant global adoption is unlikely to be sufficiently trustworthy for a national labeling scheme to reference. CSA and GSMA have long track records of managing global schemes that have stood the test of time.   </p><p><strong><em>Choice with a high quality bar</em>:</strong> The world needs a small set of high quality evaluation schemes that can act as the hub within a hub and spoke model for enabling national labeling schemes across the globe. Evaluation schemes will authorize a range of labs for lab-tested results, providing price competition for lab engagements. We need more than one scheme to encourage competition among evaluation schemes, as they too will levy fees for membership, certification, and monitoring. However, balance is key, as too many schemes could be challenging for governments to monitor and trust. Setting a high bar for governance and track record, as described above, will help curate global evaluation scheme choices.   </p><p><strong><em>International participation</em>:</strong> National labeling schemes must recognize that many manufacturers sell products across the world. A national label that does not reference NGOs that serve the global community will force multiple inconsistent national labeling schemes that are prohibitively expensive for small and medium size product developers. Misaligned or non-harmonized national efforts may become a significant barrier to entry for smaller vendors and run counter to the intended goals of competition-enhancing policies in their respective markets. </p><p><strong><em>Assurance maintenance</em>: </strong>The NGO evaluation scheme must provide a mechanism for independent researchers to pressure test conformance claims made by manufacturers. Moment-in-time certifications have historically plagued security evaluation schemes, and for cost reasons, forced annual re-certifications are not the answer either. For the vast majority of consumer products, we should rely on crowdsourced research to identify weaknesses that may question a certification result. This approach has succeeded in helping to maintain the security of numerous global products and platforms and is especially needed to help monitor the results of self-attestation certifications that will be needed in any national scale labeling program. This is also an area where federal funding may be most needed; security bounty programs will add even more incentive for the security community to pressure test evaluation scheme results and hold the entire labeling program supply chain accountable. These reward programs are also a great way to recruit more people into the cybersecurity field. </p><p><strong><em><span style=\"text-decoration: underline;\">3. A minimum security baseline must be coupled with flexibility above it</span></em></strong></p><p>A minimum security baseline must be coupled with flexibility to define additional requirements and/or levels to accelerate ecosystem improvements. Security labeling is nascent, and most schemes are focused on common sense baseline requirement standards. These standards will set an important minimum bar for digital security, reducing the likelihood that consumers will be exposed to truly poor security practices. However, we should never say things like, \u201cwe need a labeling scheme to ensure that digital products are secure.\u201d  Security is not a binary state. Applying a minimum set of best practices will not magically make a product free of vulnerabilities. But it will discourage the most common security foibles.  Furthermore, it is folly to expect that baseline security standards will protect against advanced persistent threat actors. Rather, they\u2019ll hopefully provide broad protection against common opportunistic attackers. The <a href=\"https://www.hackread.com/mirai-botnet-ddos-attacks-brief/\">Mirai botnet attack</a> was so successful because so many digital products lack the most rudimentary security functionality: the ability to apply a security update in the field. </p><p>Over time we need to do better. Security evaluation schemes need to be sufficiently flexible to allow for additional security functional requirements to be measured and rated across products. For example, the current baseline security requirements do not cover things like the strength of a biometric authenticator (important for phones and a growing range of consumer digital products) nor do they provide a standardized method for comparing the relative strength of security update policies (e.g. a product that receives regular updates for five years should be valued more highly by consumers than one that receives updates for two years). Communities that focus on specific vertical markets of product families are motivated to create security functional requirement profiles (and labels) that go above and beyond the baseline and are more tailored for that product category. Labeling schemes must allow for this flexibility, as long as profile compliance is managed by high quality evaluation schemes. </p><p>Similarly, in addition to functionality such as biometrics and update frequency, labels need to allow for assurance levels, which answer the question, \u201chow much confidence should we have in this product\u2019s security functionality claims?\u201d For example, emerging consumer evaluation schemes may permit a self-attestation of conformance or a lab test that validates basic security functionality. These kinds of attestations yield relatively low assurance, but still better than none.  Today\u2019s schemes do not allow for an assessment that emulates a high potential attacker trying to break the system\u2019s security functionality. To date, due to cost and complexity, high potential attacker vulnerability assessments have been limited to a vanishingly small number of products, including secure elements and small hypervisors. Yet for a nation\u2019s most critical systems, such as connected medical devices, cars, and applications that manage sensitive data for millions of consumers, a higher level of assurance will be needed, and any labeling scheme must not preclude future extensions that offer higher levels of assurance. </p><p><strong><em><span style=\"text-decoration: underline;\">4. Broad-based transparency is just as important as the minimum bar</span></em></strong></p><p>While it is desirable that labeling schemes provide consumers with simple guidance on safety, the desire for such a simple bar forces it to be the lowest common denominator for security capability so as not to preclude large portions of the market. It is equally important that labeling schemes increase transparency in security. So much of the discussion around labeling schemes has focused on selecting the best possible minimum bar rather than promoting transparency of security capability, regardless of what minimum bar a product may meet. This is short-sighted and fails to learn from many other consumer rating schemes (e.g. Consumer Reports) that have successfully provided transparency around a much wider range of product capabilities over time.  </p><p>Again, while a common baseline is a good place to start, we must also encourage the use of more comprehensive requirement specifications developed by high-quality NGO standards bodies and/or schemes against which products can be assessed. The goal of this method is not to mandate every requirement above the baseline, but rather to mandate transparency of compliance against those requirements. Similar to many other consumer rating schemes, the transparency across a wide range of important capabilities (e.g. the biometrics example above) will enable easy side-by-side comparison during purchasing decisions, which will act as the tide to raise all boats, driving product developers to compete with each other in security. This already happens with speeds and feeds, battery life, energy consumption, and many other features that people care about. For example, the requirement for transparency could classify the strength of the biometric based on spoof / presentation attack detection rate, which we measure for Android. If we develop more comprehensive transparency in our labeling scheme, consumers will learn and care about a wider range of security capabilities that today remain below the veil; that awareness will drive demand for product developers to do better. </p><p><strong><em><span style=\"text-decoration: underline;\">5. Labeling schemes are useless without adoption incentive </span></em></strong></p><p>Transparency is the core concept that can raise demand and improve supply of better security across the IoT.  However, what will cause products to be evaluated so that security capability data will be published and made easily consumable?  After thirty years of the world wide web and connected digital technology, it is clear that simply expecting product developers to \u201cdo the right thing\u201d for security is insufficient.  </p><p>\u201cVoluntary\u201d regimes will attract the same developers that are already doing good security work and depend on doing so for their customers and brands. Security is, on average, poor across the IoT market because product developers optimize for profitability, and the economic impact of poor security is usually not sufficiently high to move the needle. Many avenues can lead to increased economic incentives for improved security. That means a mix of carrots and sticks will be necessary to incentivize developers to increase the security of their products.  </p><p>National labeling schemes should focus on a few of the biggest market movers, in order of decreasing impact: </p><p><strong><em>National mandate</em>:</strong> Some national governments are moving towards legislation or executive orders that will require common baseline security requirements to be met, with corresponding labeling to differentiate compliant products from those not covered by the mandate. National mandates can drive improved behavior at scale. However, mandating a poor labeling scheme can do more harm than good. For example, if every nation creates a bespoke evaluation scheme, small and medium size developers would be priced out of the market due to the need to recertify and label their products across all these schemes.  Not only will non-harmonized approaches harm industry financially, it will also inhibit innovation as developers create less inclusive products to avoid nations with painful labeling regimes. </p><p>National mandates and labeling schemes must reference broadly applicable, high quality, NGO standards and schemes (as described above) so that they can be reused across multiple national labeling schemes. Global normalization and cross-recognition is not a nice-to-have, national schemes will fail if they do not solve for this important economic reality upfront. Ideally, government officials who care about a successful national labeling scheme should be involved to nurture and guide the NGO schemes that are trying to solve this problem globally. </p><p><strong><em>Retailers</em>:</strong> Retailers of digital products could have a huge impact by preferencing baseline standards compliance for digital products. In its most impactful form, the retailer would mandate compliance for all products listed for sale. The larger the retailer, the more impact is possible. Less broad, but still extremely impactful, would be providing visual labeling and/or search and discovery preferences for products that meet the requirements specified in high quality security evaluation schemes. </p><p><strong><em>Platform developers</em>:</strong> Many digital products exist as part of platforms, such as devices built on the Android Open Source Project (AOSP) platform or apps published on the Google Play app store platform. In addition, interoperability standards such as Matter and Bluetooth act as platforms, certifying products that meet those interoperability standards. All of these platform developers may use security compliance within larger certification, compliance, and business incentive programs that can drive adoption at  </p><p>scale. The impact depends on the size and scale of the platform and whether the carrots provided by platform providers are sufficiently attractive. </p><p><strong>Continuing to Strive For Collaboration, Standardization, and Transparency<br /></strong></p><p>Our goal is to increase transparency against the full baseline of security criteria for the IoT over time. This will help drive \u201ccompetition\u201d in security and push manufacturers to offer products with more robust security protections. But we don\u2019t want to stop at just increasing transparency. We will also strive to build realistic higher levels of assurance. As labeling efforts gain steam, we are hopeful that public sector and industry can work together to drive global harmonization to prevent fragmentation, and we hope to provide our expertise and act as a valued partner to governments as they develop policies to help their countries stay ahead of the latest threats in IoT. We look forward to our continued partnership with governments and industry to reduce complexity and increase innovation while improving global cybersecurity.    </p><p>--------------------------------------------------------------------------------------------- </p><p>See also: <a href=\"https://publications.parliament.uk/pa/cm5802/cmpublic/ProductSecurityTelecommunicationsInfrastructure/memo/PSTIB09.htm\">Google testimony</a> on security labeling and evaluation schemes in UK Parliament<br />See also: <a href=\"https://blog.google/technology/safety-security/how-google-is-helping-to-make-the-internet-of-things-more-secure/\">Google participated</a> in a White House strategic discussion on IoT Security Labeling </p>"
                }
            ],
            "summary": "<span class=\"byline-author\">Posted by Dave Kleidermacher, Eugene Liderman, and Android and Made by Google security teams</span> <p>We believe that security and transparency are paramount pillars for electronic products connected to the Internet.  Over the past year, we\u2019ve been excited to see more focused activity across policymakers, industry partners, developers, and public interest advocates around raising the security and transparency bar for IoT products.  </p><p>That said, the details of IoT product labeling - the definition of labeling, what labeling needs to convey in terms of security and privacy, where the label should reside, and how to achieve consumer acceptance, are still open for debate.  Google has also been considering these core questions for a long time.  As an operating system, IoT product provider, and the maintainer of multiple large ecosystems, we see firsthand how critical these details will be to the future of the IoT. In an effort to be a catalyst for collaboration and transparency, today we\u2019re sharing our proposed list of principles around IoT security labeling. </p><p><strong>Setting the Stage: Defining IoT Labeling </strong></p><p>IoT labeling is a complex and nuanced topic, so as an industry, we should first align on a set of labeling definitions that could help reduce potential fragmentation and offer a harmonized approach that could drive a desired outcome: </p><ul> <li><span style=\"text-decoration: underline;\">Label</span>: printed and/or digital representation of a digital product\u2019s security and/or privacy status intended to inform consumers and/or other stakeholders.  A label may include both printed and digital representations; for example, a printed label may include a logo and QR code that references a digital representation of the security claims being made.  </li><li><span style=\"text-decoration: underline;\">Labeling scheme</span>:  a program that defines, manages, and monitors the use of labels, including but not limited to user experience, adherence to specific standards or security profiles, and lifecycle management of the label (e.g. decommissioning)  </li><li><span style=\"text-decoration: underline;\">Evaluation scheme</span>: a program that publishes, manages, and monitors the security claims of digital products against security requirements and related standards; labeling schemes may rely on evaluation schemes to produce the information referred to in or by their labels. </li></ul><p><strong>Proposed Principles for IoT Security Labeling Schemes</strong></p><p>We believe in five core principles for IoT labeling schemes. These principles will help increase transparency against the full baseline of security criteria for IoT. These principles will also increase competition in security and push manufacturers to offer products with effective security protections, increase transparency, and help generate higher levels of assurance of protection over time. </p><p><strong><em><span style=\"text-decoration: underline;\">1. A printed label must not imply trust</span></em></strong></p><p>Unlike food labels, digital security labels must be \u201clive\u201d labels, where security/privacy status is conveyed on a central maintained website, which ideally would be the same site hosting the evaluation scheme. A physical label, either printed on a box or visible in an app, can be used if and only if it encourages users to visit the website (e.g. scan a QR code or click a link) to obtain the real-time status.  </p><p>At any point in time, a digital product may become unsafe for use.  For example, if a critical, in-the-wild, remote exploit of a product is discovered and cannot be mitigated (e.g. via a patch), then it may be necessary to change that product\u2019s status from safe to unsafe.  </p><p>Printed labels, if they convey trust implicitly such as, \u201ccertified to NNN standard\u201d or, \u201c3 stars\u201d, run the danger of influencing consumers to make harmful decisions. A consumer may purchase a webcam with a \u201c3-star\u201d security label only to find when they return home the product has non-mitigatable vulnerabilities that make it unsafe. Or, a product may sit on a shelf long enough to become non-compliant or unsafe. Labeling programs should help consumers make better security decisions. The dangers around a printed \u201ctrust me\u201d label will in some circumstances, mislead consumers.  </p><p><strong><em><span style=\"text-decoration: underline;\">2. Labels must reference strong international evaluation schemes</span></em></strong></p><p>The challenge of utilizing a labeling scheme is not the physical manifestation of the label but rather ensuring that the label references a security/privacy status/posture that is maintained by a trustworthy security/privacy evaluation scheme, such as the ones being developed by the <a href=\"https://csa-iot.org/newsroom/global-approach-to-iot-cybersecurity/\">Connectivity Standards Alliance (CSA)</a> and <a href=\"https://www.gsma.com/security/security-advice-for-mobile-device-users/\">GSMA</a>. Both of these organizations are actively developing IoT security/privacy evaluation schemes that reference well-regarded standards, including recent IoT baseline security guidance from NIST, ETSI, ISO, and OWASP.  Some important requirements for evaluation schemes leveraged by a national labeling program include: </p><p><strong><em>Strong governance</em>: </strong>The NGO must have strong governance.  For example, NGOs that house both a scheme and their own in-house evaluation lab introduce potential conflicts of interest that should be avoided.  </p><p><strong><em>Strong track record for managing evaluation schemes at scale</em>:</strong> Managing a high quality, global scheme is hard. National authorities have struggled at this for many years, especially in the consumer realm.  An NGO that has no prior track record of managing a scheme with significant global adoption is unlikely to be sufficiently trustworthy for a national labeling scheme to reference. CSA and GSMA have long track records of managing global schemes that have stood the test of time.   </p><p><strong><em>Choice with a high quality bar</em>:</strong> The world needs a small set of high quality evaluation schemes that can act as the hub within a hub and spoke model for enabling national labeling schemes across the globe. Evaluation schemes will authorize a range of labs for lab-tested results, providing price competition for lab engagements. We need more than one scheme to encourage competition among evaluation schemes, as they too will levy fees for membership, certification, and monitoring. However, balance is key, as too many schemes could be challenging for governments to monitor and trust. Setting a high bar for governance and track record, as described above, will help curate global evaluation scheme choices.   </p><p><strong><em>International participation</em>:</strong> National labeling schemes must recognize that many manufacturers sell products across the world. A national label that does not reference NGOs that serve the global community will force multiple inconsistent national labeling schemes that are prohibitively expensive for small and medium size product developers. Misaligned or non-harmonized national efforts may become a significant barrier to entry for smaller vendors and run counter to the intended goals of competition-enhancing policies in their respective markets. </p><p><strong><em>Assurance maintenance</em>: </strong>The NGO evaluation scheme must provide a mechanism for independent researchers to pressure test conformance claims made by manufacturers. Moment-in-time certifications have historically plagued security evaluation schemes, and for cost reasons, forced annual re-certifications are not the answer either. For the vast majority of consumer products, we should rely on crowdsourced research to identify weaknesses that may question a certification result. This approach has succeeded in helping to maintain the security of numerous global products and platforms and is especially needed to help monitor the results of self-attestation certifications that will be needed in any national scale labeling program. This is also an area where federal funding may be most needed; security bounty programs will add even more incentive for the security community to pressure test evaluation scheme results and hold the entire labeling program supply chain accountable. These reward programs are also a great way to recruit more people into the cybersecurity field. </p><p><strong><em><span style=\"text-decoration: underline;\">3. A minimum security baseline must be coupled with flexibility above it</span></em></strong></p><p>A minimum security baseline must be coupled with flexibility to define additional requirements and/or levels to accelerate ecosystem improvements. Security labeling is nascent, and most schemes are focused on common sense baseline requirement standards. These standards will set an important minimum bar for digital security, reducing the likelihood that consumers will be exposed to truly poor security practices. However, we should never say things like, \u201cwe need a labeling scheme to ensure that digital products are secure.\u201d  Security is not a binary state. Applying a minimum set of best practices will not magically make a product free of vulnerabilities. But it will discourage the most common security foibles.  Furthermore, it is folly to expect that baseline security standards will protect against advanced persistent threat actors. Rather, they\u2019ll hopefully provide broad protection against common opportunistic attackers. The <a href=\"https://www.hackread.com/mirai-botnet-ddos-attacks-brief/\">Mirai botnet attack</a> was so successful because so many digital products lack the most rudimentary security functionality: the ability to apply a security update in the field. </p><p>Over time we need to do better. Security evaluation schemes need to be sufficiently flexible to allow for additional security functional requirements to be measured and rated across products. For example, the current baseline security requirements do not cover things like the strength of a biometric authenticator (important for phones and a growing range of consumer digital products) nor do they provide a standardized method for comparing the relative strength of security update policies (e.g. a product that receives regular updates for five years should be valued more highly by consumers than one that receives updates for two years). Communities that focus on specific vertical markets of product families are motivated to create security functional requirement profiles (and labels) that go above and beyond the baseline and are more tailored for that product category. Labeling schemes must allow for this flexibility, as long as profile compliance is managed by high quality evaluation schemes. </p><p>Similarly, in addition to functionality such as biometrics and update frequency, labels need to allow for assurance levels, which answer the question, \u201chow much confidence should we have in this product\u2019s security functionality claims?\u201d For example, emerging consumer evaluation schemes may permit a self-attestation of conformance or a lab test that validates basic security functionality. These kinds of attestations yield relatively low assurance, but still better than none.  Today\u2019s schemes do not allow for an assessment that emulates a high potential attacker trying to break the system\u2019s security functionality. To date, due to cost and complexity, high potential attacker vulnerability assessments have been limited to a vanishingly small number of products, including secure elements and small hypervisors. Yet for a nation\u2019s most critical systems, such as connected medical devices, cars, and applications that manage sensitive data for millions of consumers, a higher level of assurance will be needed, and any labeling scheme must not preclude future extensions that offer higher levels of assurance. </p><p><strong><em><span style=\"text-decoration: underline;\">4. Broad-based transparency is just as important as the minimum bar</span></em></strong></p><p>While it is desirable that labeling schemes provide consumers with simple guidance on safety, the desire for such a simple bar forces it to be the lowest common denominator for security capability so as not to preclude large portions of the market. It is equally important that labeling schemes increase transparency in security. So much of the discussion around labeling schemes has focused on selecting the best possible minimum bar rather than promoting transparency of security capability, regardless of what minimum bar a product may meet. This is short-sighted and fails to learn from many other consumer rating schemes (e.g. Consumer Reports) that have successfully provided transparency around a much wider range of product capabilities over time.  </p><p>Again, while a common baseline is a good place to start, we must also encourage the use of more comprehensive requirement specifications developed by high-quality NGO standards bodies and/or schemes against which products can be assessed. The goal of this method is not to mandate every requirement above the baseline, but rather to mandate transparency of compliance against those requirements. Similar to many other consumer rating schemes, the transparency across a wide range of important capabilities (e.g. the biometrics example above) will enable easy side-by-side comparison during purchasing decisions, which will act as the tide to raise all boats, driving product developers to compete with each other in security. This already happens with speeds and feeds, battery life, energy consumption, and many other features that people care about. For example, the requirement for transparency could classify the strength of the biometric based on spoof / presentation attack detection rate, which we measure for Android. If we develop more comprehensive transparency in our labeling scheme, consumers will learn and care about a wider range of security capabilities that today remain below the veil; that awareness will drive demand for product developers to do better. </p><p><strong><em><span style=\"text-decoration: underline;\">5. Labeling schemes are useless without adoption incentive </span></em></strong></p><p>Transparency is the core concept that can raise demand and improve supply of better security across the IoT.  However, what will cause products to be evaluated so that security capability data will be published and made easily consumable?  After thirty years of the world wide web and connected digital technology, it is clear that simply expecting product developers to \u201cdo the right thing\u201d for security is insufficient.  </p><p>\u201cVoluntary\u201d regimes will attract the same developers that are already doing good security work and depend on doing so for their customers and brands. Security is, on average, poor across the IoT market because product developers optimize for profitability, and the economic impact of poor security is usually not sufficiently high to move the needle. Many avenues can lead to increased economic incentives for improved security. That means a mix of carrots and sticks will be necessary to incentivize developers to increase the security of their products.  </p><p>National labeling schemes should focus on a few of the biggest market movers, in order of decreasing impact: </p><p><strong><em>National mandate</em>:</strong> Some national governments are moving towards legislation or executive orders that will require common baseline security requirements to be met, with corresponding labeling to differentiate compliant products from those not covered by the mandate. National mandates can drive improved behavior at scale. However, mandating a poor labeling scheme can do more harm than good. For example, if every nation creates a bespoke evaluation scheme, small and medium size developers would be priced out of the market due to the need to recertify and label their products across all these schemes.  Not only will non-harmonized approaches harm industry financially, it will also inhibit innovation as developers create less inclusive products to avoid nations with painful labeling regimes. </p><p>National mandates and labeling schemes must reference broadly applicable, high quality, NGO standards and schemes (as described above) so that they can be reused across multiple national labeling schemes. Global normalization and cross-recognition is not a nice-to-have, national schemes will fail if they do not solve for this important economic reality upfront. Ideally, government officials who care about a successful national labeling scheme should be involved to nurture and guide the NGO schemes that are trying to solve this problem globally. </p><p><strong><em>Retailers</em>:</strong> Retailers of digital products could have a huge impact by preferencing baseline standards compliance for digital products. In its most impactful form, the retailer would mandate compliance for all products listed for sale. The larger the retailer, the more impact is possible. Less broad, but still extremely impactful, would be providing visual labeling and/or search and discovery preferences for products that meet the requirements specified in high quality security evaluation schemes. </p><p><strong><em>Platform developers</em>:</strong> Many digital products exist as part of platforms, such as devices built on the Android Open Source Project (AOSP) platform or apps published on the Google Play app store platform. In addition, interoperability standards such as Matter and Bluetooth act as platforms, certifying products that meet those interoperability standards. All of these platform developers may use security compliance within larger certification, compliance, and business incentive programs that can drive adoption at  </p><p>scale. The impact depends on the size and scale of the platform and whether the carrots provided by platform providers are sufficiently attractive. </p><p><strong>Continuing to Strive For Collaboration, Standardization, and Transparency<br /></strong></p><p>Our goal is to increase transparency against the full baseline of security criteria for the IoT over time. This will help drive \u201ccompetition\u201d in security and push manufacturers to offer products with more robust security protections. But we don\u2019t want to stop at just increasing transparency. We will also strive to build realistic higher levels of assurance. As labeling efforts gain steam, we are hopeful that public sector and industry can work together to drive global harmonization to prevent fragmentation, and we hope to provide our expertise and act as a valued partner to governments as they develop policies to help their countries stay ahead of the latest threats in IoT. We look forward to our continued partnership with governments and industry to reduce complexity and increase innovation while improving global cybersecurity.    </p><p>--------------------------------------------------------------------------------------------- </p><p>See also: <a href=\"https://publications.parliament.uk/pa/cm5802/cmpublic/ProductSecurityTelecommunicationsInfrastructure/memo/PSTIB09.htm\">Google testimony</a> on security labeling and evaluation schemes in UK Parliament<br />See also: <a href=\"https://blog.google/technology/safety-security/how-google-is-helping-to-make-the-internet-of-things-more-secure/\">Google participated</a> in a White House strategic discussion on IoT Security Labeling </p>",
            "links": [
                {
                    "href": "http://security.googleblog.com/feeds/2642284495799080200/comments/default",
                    "rel": "replies",
                    "title": "Post Comments",
                    "type": "application/atom+xml"
                },
                {
                    "href": "http://www.blogger.com/comment.g?blogID=1176949257541686127&postID=2642284495799080200&isPopup=true",
                    "rel": "replies",
                    "title": "0 Comments",
                    "type": "text/html"
                },
                {
                    "href": "http://www.blogger.com/feeds/1176949257541686127/posts/default/2642284495799080200",
                    "rel": "edit",
                    "type": "application/atom+xml"
                },
                {
                    "href": "http://www.blogger.com/feeds/1176949257541686127/posts/default/2642284495799080200",
                    "rel": "self",
                    "type": "application/atom+xml"
                },
                {
                    "href": "http://security.googleblog.com/2022/11/our-principles-for-iot-security-labeling.html",
                    "rel": "alternate",
                    "title": "Our Principles for IoT Security Labeling",
                    "type": "text/html"
                }
            ],
            "authors": [
                {
                    "name": "Edward Fernandez",
                    "href": "http://www.blogger.com/profile/03784424747198152685",
                    "email": "noreply@blogger.com"
                }
            ],
            "author_detail": {
                "name": "Edward Fernandez",
                "href": "http://www.blogger.com/profile/03784424747198152685",
                "email": "noreply@blogger.com"
            },
            "href": "http://www.blogger.com/profile/03784424747198152685",
            "author": "Edward Fernandez (noreply@blogger.com)",
            "gd_image": {
                "height": "16",
                "rel": "http://schemas.google.com/g/2005#thumbnail",
                "src": "https://img1.blogblog.com/img/b16-rounded.gif",
                "width": "16"
            },
            "thr_total": "0"
        },
        {
            "id": "tag:blogger.com,1999:blog-1176949257541686127.post-1350669566602288553",
            "guidislink": true,
            "link": "http://security.googleblog.com/2022/10/announcing-guac-great-pairing-with-slsa.html",
            "published": "2022-10-20T13:01:00.000-04:00",
            "published_parsed": [
                2022,
                10,
                20,
                17,
                1,
                0,
                3,
                293,
                0
            ],
            "updated": "2022-10-20T13:01:02.521-04:00",
            "updated_parsed": [
                2022,
                10,
                20,
                17,
                1,
                2,
                3,
                293,
                0
            ],
            "title": "Announcing GUAC, a great pairing with SLSA (and SBOM)!",
            "title_detail": {
                "type": "text/plain",
                "language": null,
                "base": "http://feeds.feedburner.com/GoogleOnlineSecurityBlog",
                "value": "Announcing GUAC, a great pairing with SLSA (and SBOM)!"
            },
            "content": [
                {
                    "type": "text/html",
                    "language": null,
                    "base": "http://feeds.feedburner.com/GoogleOnlineSecurityBlog",
                    "value": "<span class=\"byline-author\">Posted by Brandon Lum, Mihai Maruseac, Isaac Hepworth, Google Open Source Security Team </span><p>Supply chain security is at the fore of the industry\u2019s collective consciousness. We\u2019ve recently seen a significant <a href=\"https://www.sonatype.com/press-releases/sonatype-finds-700-average-increase-in-open-source-supply-chain-attacks\">rise in software supply chain attacks</a>, a Log4j vulnerability of catastrophic severity and breadth, and even an <a href=\"https://www.whitehouse.gov/briefing-room/presidential-actions/2021/05/12/executive-order-on-improving-the-nations-cybersecurity/\">Executive Order on Cybersecurity</a>.  </p><p>It is against this background that Google is seeking contributors to a new open source project called GUAC (pronounced like the dip). GUAC, or Graph for Understanding Artifact Composition, is in the early stages yet is <strong>poised to change how the industry understands software supply chains</strong>. GUAC addresses a need created by the burgeoning efforts across the ecosystem to generate software build, security, and dependency metadata. True to Google\u2019s mission to organize and make the world\u2019s information universally accessible and useful, GUAC is meant to democratize the availability of this security information by making it freely accessible and useful for every organization, not just those with enterprise-scale security and IT funding.  </p><p>Thanks to community collaboration in groups such as <a href=\"https://openssf.org/\">OpenSSF</a>, <a href=\"http://slsa.dev\">SLSA</a>, <a href=\"http://spdx.dev\">SPDX</a>, <a href=\"https://cyclonedx.org/\">CycloneDX</a>, and others, organizations increasingly have ready access to: </p><ul> <li>Software Bills of Materials (SBOMs) (with <a href=\"https://github.com/opensbom-generator/spdx-sbom-generator\">SPDX-SBOM-Generator</a>, <a href=\"https://github.com/anchore/syft\">Syft</a>, <a href=\"https://github.com/kubernetes-sigs/bom\">kubernetes bom tool</a>)  </li><li>signed attestations about how software was built (e.g. <a href=\"https://slsa.dev/\">SLSA</a> with <a href=\"https://slsa.dev/blog/2022/08/slsa-github-workflows-generic-ga\">SLSA3 Github Actions Builder, Google Cloud Build</a>)  </li><li>vulnerability databases that aggregate information across ecosystems and make vulnerabilities more discoverable and actionable (e.g. <a href=\"https://osv.dev/\">OSV.dev</a>, <a href=\"https://globalsecuritydatabase.org/\">Global Security Database (GSD)</a>).   </li></ul><p>These data are useful on their own, but it\u2019s difficult to combine and synthesize the information for a more comprehensive view. The documents are scattered across different databases and producers, are attached to different ecosystem entities, and cannot be easily aggregated to answer higher-level questions about an organization\u2019s software assets. </p><p>To help address this issue we\u2019ve teamed up with Kusari, Purdue University, and Citi to create GUAC, a free tool to bring together many different sources of software security metadata. We\u2019re excited to share the project\u2019s proof of concept, which lets you query a small dataset of software metadata including SLSA provenance, SBOMs, and <a href=\"https://securityscorecards.dev/\">OpenSSF Scorecards</a>.   </p><h1>What is GUAC</h1>  <p>Graph for Understanding Artifact Composition (GUAC) aggregates software security metadata into a high fidelity graph database\u2014normalizing entity identities and mapping standard relationships between them. Querying this graph can drive higher-level organizational outcomes such as audit, policy, risk management, and even developer assistance. </p><p>Conceptually, GUAC occupies the \u201caggregation and synthesis\u201d layer of the software supply chain transparency logical model: </p><div class=\"separator\" style=\"clear: both;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhmDzAO2_-eCS88hfdrax64UfGbRlaPYT23jAvuag6L7JOP5yJ81iKqnp5YULhE9ghit94LbE99ZDe89vysWGrNbpIGiJquBM_stGfocTVYSL9YMj641uVqNa7wDoVfFuSLCk40PRzyQ-Lwyspu4YUiuqiM1Y5Ed9QG37i4cw1qcTJIJetRhp63FCgU8A/s1600/GUAC%20image%201%20.png\" style=\"display: block; padding: 1em 0px; text-align: center;\"><img alt=\"\" border=\"0\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhmDzAO2_-eCS88hfdrax64UfGbRlaPYT23jAvuag6L7JOP5yJ81iKqnp5YULhE9ghit94LbE99ZDe89vysWGrNbpIGiJquBM_stGfocTVYSL9YMj641uVqNa7wDoVfFuSLCk40PRzyQ-Lwyspu4YUiuqiM1Y5Ed9QG37i4cw1qcTJIJetRhp63FCgU8A/s1600/GUAC%20image%201%20.png\" /></a></div><p>GUAC has four major areas of functionality: </p><ol style=\"text-align: left;\"> <li><strong>Collection</strong><br />GUAC can be configured to connect to a variety of sources of software security metadata. Some sources may be open and public (e.g., OSV); some may be first-party (e.g., an organization\u2019s internal repositories); some may be proprietary third-party (e.g., from data vendors). <br /> </li><li><strong>Ingestion</strong><br />From its upstream data sources GUAC imports data on artifacts, projects, resources, vulnerabilities, repositories, and even developers.<br /> </li><li><strong>Collation</strong><br />Having ingested raw metadata from disparate upstream sources, GUAC assembles it into a coherent graph by normalizing entity identifiers, traversing the dependency tree, and reifying implicit entity relationships, e.g., project \u2192 developer; vulnerability \u2192 software version; artifact \u2192 source repo, and so on.<br /> </li><li><strong>Query</strong><br />Against an assembled graph one may query for metadata attached to, or related to, entities within the graph. Querying for a given artifact may return its SBOM, provenance, build chain, project scorecard, vulnerabilities, and recent lifecycle events \u2014 and those for its transitive dependencies. <div class=\"separator\" style=\"clear: both;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgeBVObufbFPQFpDBXRdcLpLr9CpmZRINhr0d6iemWDlm-NZTGRymZ5wYTgAEOSS1IFKp1xlz8tibS3BQKVwQ63r08Yj-yIcbOwEec7MjgvGQPqFqVik3-VOJw5qZc0vcmPgiHKw87SLx2q6-McEW-LL5zFdCGAH3s-24qBD0Vh8C-Pi0UYDizzSxF14w/s1600/GUAC%20image%202.png\" style=\"display: block; padding: 1em 0px; text-align: center;\"><img alt=\"\" border=\"0\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgeBVObufbFPQFpDBXRdcLpLr9CpmZRINhr0d6iemWDlm-NZTGRymZ5wYTgAEOSS1IFKp1xlz8tibS3BQKVwQ63r08Yj-yIcbOwEec7MjgvGQPqFqVik3-VOJw5qZc0vcmPgiHKw87SLx2q6-McEW-LL5zFdCGAH3s-24qBD0Vh8C-Pi0UYDizzSxF14w/s1600/GUAC%20image%202.png\" /></a></div><p>A CISO or compliance officer in an organization wants to be able to reason about the risk of their organization. An open source organization like the Open Source Security Foundation wants to identify critical libraries to maintain and secure. Developers need richer and more trustworthy intelligence about the dependencies in their projects. </p><p>The good news is, increasingly one finds the upstream supply chain already enriched with attestations and metadata to power higher-level reasoning and insights. The bad news is that it is difficult or impossible today for software consumers, operators, and administrators to gather this data into a unified view across their software assets. </p><p>To understand something complex like the blast radius of a vulnerability, one needs to trace the relationship between a component and everything else in the portfolio\u2014a task that could span thousands of metadata documents across hundreds of sources. In the open source ecosystem, the number of documents could reach into the millions. </p><p>GUAC aggregates and synthesizes software security metadata at scale and makes it meaningful and actionable. With GUAC in hand, we will be able to answer questions at three important stages of software supply chain security: </p><ul> <li><strong>Proactive</strong>, e.g.,  <ul>  <li>What are the most used critical components in my software supply chain ecosystem?    </li><li>Where are the weak points in my overall security posture?   </li><li>How do I prevent supply chain compromises before they happen?   </li><li>Where am I exposed to risky dependencies? </li>  </ul> </li><li><strong>Operational</strong>, e.g.,  <ul>  <li>Is there evidence that the application I\u2019m about to deploy meets organization policy?   </li><li>Do all binaries in production trace back to a securely managed repository? </li>  </ul> </li><li><strong>Reactive</strong>, e.g.,  <ul>  <li>Which parts of my organization\u2019s inventory is affected by new vulnerability X?   </li><li>A suspicious project lifecycle event has occurred. Where is risk introduced to my organization?   </li><li>An open source project is being deprecated. How am I affected?<p></p></li></ul></li></ul></li></ol><div class=\"separator\" style=\"clear: both;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEispPLuVOA_GxcT5Twn81VVbMksuIX_xEvksTLzCPxqPs26Yt14--Kn9ZpeAEsMpdBhgovvF_BEhPrYYnctzv2zQTFGbgRDvO0qTkapXRlVtrWIUOq21Kyr7Ffw2LAEuBfQXIjZfb9XrtYBzcigK4h-3LPr_Wk2HpxkCgC_exw7XOX_vFKqYR8yYPNCyg/s1600/GUAC%203.png\" style=\"display: block; padding: 1em 0px; text-align: center;\"><img alt=\"\" border=\"0\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEispPLuVOA_GxcT5Twn81VVbMksuIX_xEvksTLzCPxqPs26Yt14--Kn9ZpeAEsMpdBhgovvF_BEhPrYYnctzv2zQTFGbgRDvO0qTkapXRlVtrWIUOq21Kyr7Ffw2LAEuBfQXIjZfb9XrtYBzcigK4h-3LPr_Wk2HpxkCgC_exw7XOX_vFKqYR8yYPNCyg/s1600/GUAC%203.png\" /></a></div><p></p><blockquote style=\"border: none; margin: 0 0 0 40px; padding: 0px;\"><h1 style=\"text-align: left;\">Get Involved</h1></blockquote><blockquote style=\"border: none; margin: 0 0 0 40px; padding: 0px;\"><p style=\"text-align: left;\"><a href=\"https://github.com/guacsec/guac\">GUAC is an Open Source project on Github</a>, and we are excited to get more folks involved and contributing (read the <a href=\"https://github.com/guacsec/guac/blob/main/CONTRIBUTING.md\">contributor guide</a> to get started)! The project is still in its early stages, with a <a href=\"https://github.com/guacsec/guac/blob/main/SETUP.md\">proof of concept</a> that can ingest SLSA, SBOM, and Scorecard documents and support simple queries and exploration of software metadata. The next efforts will focus on scaling the current capabilities and adding new document types for ingestion. We welcome help and contributions of code or documentation.  </p></blockquote><blockquote style=\"border: none; margin: 0 0 0 40px; padding: 0px;\"><p style=\"text-align: left;\">Since the project will be consuming documents from many different sources and formats, we have put together a group of \u201cTechnical Advisory Members'' to help advise the project. These members include representation from companies and groups such as SPDX, CycloneDX Anchore, Aquasec, IBM, Intel, and <a href=\"https://github.com/guacsec/guac/blob/main/TECHNICAL_ADVISORY_MEMBERS\">many more</a>. If you\u2019re interested in participating as a contributor or advisor representing end users\u2019 needs\u2014or the sources of metadata GUAC consumes\u2014you can register your interest in the relevant <a href=\"https://github.com/guacsec/guac/issues/1\">GitHub issue</a>. </p></blockquote><blockquote style=\"border: none; margin: 0 0 0 40px; padding: 0px;\"><p style=\"text-align: left;\">The GUAC team will be showcasing the project at Kubecon NA 2022 next week. Come by our <a href=\"https://sched.co/182Jr\">session</a> if you\u2019ll be there and have a chat with us\u2014we\u2019d be happy to talk in person or virtually!</p></blockquote>"
                }
            ],
            "summary": "<span class=\"byline-author\">Posted by Brandon Lum, Mihai Maruseac, Isaac Hepworth, Google Open Source Security Team </span><p>Supply chain security is at the fore of the industry\u2019s collective consciousness. We\u2019ve recently seen a significant <a href=\"https://www.sonatype.com/press-releases/sonatype-finds-700-average-increase-in-open-source-supply-chain-attacks\">rise in software supply chain attacks</a>, a Log4j vulnerability of catastrophic severity and breadth, and even an <a href=\"https://www.whitehouse.gov/briefing-room/presidential-actions/2021/05/12/executive-order-on-improving-the-nations-cybersecurity/\">Executive Order on Cybersecurity</a>.  </p><p>It is against this background that Google is seeking contributors to a new open source project called GUAC (pronounced like the dip). GUAC, or Graph for Understanding Artifact Composition, is in the early stages yet is <strong>poised to change how the industry understands software supply chains</strong>. GUAC addresses a need created by the burgeoning efforts across the ecosystem to generate software build, security, and dependency metadata. True to Google\u2019s mission to organize and make the world\u2019s information universally accessible and useful, GUAC is meant to democratize the availability of this security information by making it freely accessible and useful for every organization, not just those with enterprise-scale security and IT funding.  </p><p>Thanks to community collaboration in groups such as <a href=\"https://openssf.org/\">OpenSSF</a>, <a href=\"http://slsa.dev\">SLSA</a>, <a href=\"http://spdx.dev\">SPDX</a>, <a href=\"https://cyclonedx.org/\">CycloneDX</a>, and others, organizations increasingly have ready access to: </p><ul> <li>Software Bills of Materials (SBOMs) (with <a href=\"https://github.com/opensbom-generator/spdx-sbom-generator\">SPDX-SBOM-Generator</a>, <a href=\"https://github.com/anchore/syft\">Syft</a>, <a href=\"https://github.com/kubernetes-sigs/bom\">kubernetes bom tool</a>)  </li><li>signed attestations about how software was built (e.g. <a href=\"https://slsa.dev/\">SLSA</a> with <a href=\"https://slsa.dev/blog/2022/08/slsa-github-workflows-generic-ga\">SLSA3 Github Actions Builder, Google Cloud Build</a>)  </li><li>vulnerability databases that aggregate information across ecosystems and make vulnerabilities more discoverable and actionable (e.g. <a href=\"https://osv.dev/\">OSV.dev</a>, <a href=\"https://globalsecuritydatabase.org/\">Global Security Database (GSD)</a>).   </li></ul><p>These data are useful on their own, but it\u2019s difficult to combine and synthesize the information for a more comprehensive view. The documents are scattered across different databases and producers, are attached to different ecosystem entities, and cannot be easily aggregated to answer higher-level questions about an organization\u2019s software assets. </p><p>To help address this issue we\u2019ve teamed up with Kusari, Purdue University, and Citi to create GUAC, a free tool to bring together many different sources of software security metadata. We\u2019re excited to share the project\u2019s proof of concept, which lets you query a small dataset of software metadata including SLSA provenance, SBOMs, and <a href=\"https://securityscorecards.dev/\">OpenSSF Scorecards</a>.   </p><h1>What is GUAC</h1>  <p>Graph for Understanding Artifact Composition (GUAC) aggregates software security metadata into a high fidelity graph database\u2014normalizing entity identities and mapping standard relationships between them. Querying this graph can drive higher-level organizational outcomes such as audit, policy, risk management, and even developer assistance. </p><p>Conceptually, GUAC occupies the \u201caggregation and synthesis\u201d layer of the software supply chain transparency logical model: </p><div class=\"separator\" style=\"clear: both;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhmDzAO2_-eCS88hfdrax64UfGbRlaPYT23jAvuag6L7JOP5yJ81iKqnp5YULhE9ghit94LbE99ZDe89vysWGrNbpIGiJquBM_stGfocTVYSL9YMj641uVqNa7wDoVfFuSLCk40PRzyQ-Lwyspu4YUiuqiM1Y5Ed9QG37i4cw1qcTJIJetRhp63FCgU8A/s1600/GUAC%20image%201%20.png\" style=\"display: block; padding: 1em 0px; text-align: center;\"><img alt=\"\" border=\"0\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhmDzAO2_-eCS88hfdrax64UfGbRlaPYT23jAvuag6L7JOP5yJ81iKqnp5YULhE9ghit94LbE99ZDe89vysWGrNbpIGiJquBM_stGfocTVYSL9YMj641uVqNa7wDoVfFuSLCk40PRzyQ-Lwyspu4YUiuqiM1Y5Ed9QG37i4cw1qcTJIJetRhp63FCgU8A/s1600/GUAC%20image%201%20.png\" /></a></div><p>GUAC has four major areas of functionality: </p><ol style=\"text-align: left;\"> <li><strong>Collection</strong><br />GUAC can be configured to connect to a variety of sources of software security metadata. Some sources may be open and public (e.g., OSV); some may be first-party (e.g., an organization\u2019s internal repositories); some may be proprietary third-party (e.g., from data vendors). <br /> </li><li><strong>Ingestion</strong><br />From its upstream data sources GUAC imports data on artifacts, projects, resources, vulnerabilities, repositories, and even developers.<br /> </li><li><strong>Collation</strong><br />Having ingested raw metadata from disparate upstream sources, GUAC assembles it into a coherent graph by normalizing entity identifiers, traversing the dependency tree, and reifying implicit entity relationships, e.g., project \u2192 developer; vulnerability \u2192 software version; artifact \u2192 source repo, and so on.<br /> </li><li><strong>Query</strong><br />Against an assembled graph one may query for metadata attached to, or related to, entities within the graph. Querying for a given artifact may return its SBOM, provenance, build chain, project scorecard, vulnerabilities, and recent lifecycle events \u2014 and those for its transitive dependencies. <div class=\"separator\" style=\"clear: both;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgeBVObufbFPQFpDBXRdcLpLr9CpmZRINhr0d6iemWDlm-NZTGRymZ5wYTgAEOSS1IFKp1xlz8tibS3BQKVwQ63r08Yj-yIcbOwEec7MjgvGQPqFqVik3-VOJw5qZc0vcmPgiHKw87SLx2q6-McEW-LL5zFdCGAH3s-24qBD0Vh8C-Pi0UYDizzSxF14w/s1600/GUAC%20image%202.png\" style=\"display: block; padding: 1em 0px; text-align: center;\"><img alt=\"\" border=\"0\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgeBVObufbFPQFpDBXRdcLpLr9CpmZRINhr0d6iemWDlm-NZTGRymZ5wYTgAEOSS1IFKp1xlz8tibS3BQKVwQ63r08Yj-yIcbOwEec7MjgvGQPqFqVik3-VOJw5qZc0vcmPgiHKw87SLx2q6-McEW-LL5zFdCGAH3s-24qBD0Vh8C-Pi0UYDizzSxF14w/s1600/GUAC%20image%202.png\" /></a></div><p>A CISO or compliance officer in an organization wants to be able to reason about the risk of their organization. An open source organization like the Open Source Security Foundation wants to identify critical libraries to maintain and secure. Developers need richer and more trustworthy intelligence about the dependencies in their projects. </p><p>The good news is, increasingly one finds the upstream supply chain already enriched with attestations and metadata to power higher-level reasoning and insights. The bad news is that it is difficult or impossible today for software consumers, operators, and administrators to gather this data into a unified view across their software assets. </p><p>To understand something complex like the blast radius of a vulnerability, one needs to trace the relationship between a component and everything else in the portfolio\u2014a task that could span thousands of metadata documents across hundreds of sources. In the open source ecosystem, the number of documents could reach into the millions. </p><p>GUAC aggregates and synthesizes software security metadata at scale and makes it meaningful and actionable. With GUAC in hand, we will be able to answer questions at three important stages of software supply chain security: </p><ul> <li><strong>Proactive</strong>, e.g.,  <ul>  <li>What are the most used critical components in my software supply chain ecosystem?    </li><li>Where are the weak points in my overall security posture?   </li><li>How do I prevent supply chain compromises before they happen?   </li><li>Where am I exposed to risky dependencies? </li>  </ul> </li><li><strong>Operational</strong>, e.g.,  <ul>  <li>Is there evidence that the application I\u2019m about to deploy meets organization policy?   </li><li>Do all binaries in production trace back to a securely managed repository? </li>  </ul> </li><li><strong>Reactive</strong>, e.g.,  <ul>  <li>Which parts of my organization\u2019s inventory is affected by new vulnerability X?   </li><li>A suspicious project lifecycle event has occurred. Where is risk introduced to my organization?   </li><li>An open source project is being deprecated. How am I affected?<p></p></li></ul></li></ul></li></ol><div class=\"separator\" style=\"clear: both;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEispPLuVOA_GxcT5Twn81VVbMksuIX_xEvksTLzCPxqPs26Yt14--Kn9ZpeAEsMpdBhgovvF_BEhPrYYnctzv2zQTFGbgRDvO0qTkapXRlVtrWIUOq21Kyr7Ffw2LAEuBfQXIjZfb9XrtYBzcigK4h-3LPr_Wk2HpxkCgC_exw7XOX_vFKqYR8yYPNCyg/s1600/GUAC%203.png\" style=\"display: block; padding: 1em 0px; text-align: center;\"><img alt=\"\" border=\"0\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEispPLuVOA_GxcT5Twn81VVbMksuIX_xEvksTLzCPxqPs26Yt14--Kn9ZpeAEsMpdBhgovvF_BEhPrYYnctzv2zQTFGbgRDvO0qTkapXRlVtrWIUOq21Kyr7Ffw2LAEuBfQXIjZfb9XrtYBzcigK4h-3LPr_Wk2HpxkCgC_exw7XOX_vFKqYR8yYPNCyg/s1600/GUAC%203.png\" /></a></div><p></p><blockquote style=\"border: none; margin: 0 0 0 40px; padding: 0px;\"><h1 style=\"text-align: left;\">Get Involved</h1></blockquote><blockquote style=\"border: none; margin: 0 0 0 40px; padding: 0px;\"><p style=\"text-align: left;\"><a href=\"https://github.com/guacsec/guac\">GUAC is an Open Source project on Github</a>, and we are excited to get more folks involved and contributing (read the <a href=\"https://github.com/guacsec/guac/blob/main/CONTRIBUTING.md\">contributor guide</a> to get started)! The project is still in its early stages, with a <a href=\"https://github.com/guacsec/guac/blob/main/SETUP.md\">proof of concept</a> that can ingest SLSA, SBOM, and Scorecard documents and support simple queries and exploration of software metadata. The next efforts will focus on scaling the current capabilities and adding new document types for ingestion. We welcome help and contributions of code or documentation.  </p></blockquote><blockquote style=\"border: none; margin: 0 0 0 40px; padding: 0px;\"><p style=\"text-align: left;\">Since the project will be consuming documents from many different sources and formats, we have put together a group of \u201cTechnical Advisory Members'' to help advise the project. These members include representation from companies and groups such as SPDX, CycloneDX Anchore, Aquasec, IBM, Intel, and <a href=\"https://github.com/guacsec/guac/blob/main/TECHNICAL_ADVISORY_MEMBERS\">many more</a>. If you\u2019re interested in participating as a contributor or advisor representing end users\u2019 needs\u2014or the sources of metadata GUAC consumes\u2014you can register your interest in the relevant <a href=\"https://github.com/guacsec/guac/issues/1\">GitHub issue</a>. </p></blockquote><blockquote style=\"border: none; margin: 0 0 0 40px; padding: 0px;\"><p style=\"text-align: left;\">The GUAC team will be showcasing the project at Kubecon NA 2022 next week. Come by our <a href=\"https://sched.co/182Jr\">session</a> if you\u2019ll be there and have a chat with us\u2014we\u2019d be happy to talk in person or virtually!</p></blockquote>",
            "links": [
                {
                    "href": "http://security.googleblog.com/feeds/1350669566602288553/comments/default",
                    "rel": "replies",
                    "title": "Post Comments",
                    "type": "application/atom+xml"
                },
                {
                    "href": "http://www.blogger.com/comment.g?blogID=1176949257541686127&postID=1350669566602288553&isPopup=true",
                    "rel": "replies",
                    "title": "0 Comments",
                    "type": "text/html"
                },
                {
                    "href": "http://www.blogger.com/feeds/1176949257541686127/posts/default/1350669566602288553",
                    "rel": "edit",
                    "type": "application/atom+xml"
                },
                {
                    "href": "http://www.blogger.com/feeds/1176949257541686127/posts/default/1350669566602288553",
                    "rel": "self",
                    "type": "application/atom+xml"
                },
                {
                    "href": "http://security.googleblog.com/2022/10/announcing-guac-great-pairing-with-slsa.html",
                    "rel": "alternate",
                    "title": "Announcing GUAC, a great pairing with SLSA (and SBOM)!",
                    "type": "text/html"
                }
            ],
            "authors": [
                {
                    "name": "Google",
                    "href": "http://www.blogger.com/profile/11822708545141062574",
                    "email": "noreply@blogger.com"
                }
            ],
            "author_detail": {
                "name": "Google",
                "href": "http://www.blogger.com/profile/11822708545141062574",
                "email": "noreply@blogger.com"
            },
            "href": "",
            "author": "Google (noreply@blogger.com)",
            "gd_image": {
                "height": "16",
                "rel": "http://schemas.google.com/g/2005#thumbnail",
                "src": "https://img1.blogblog.com/img/b16-rounded.gif",
                "width": "16"
            },
            "media_thumbnail": [
                {
                    "height": "72",
                    "url": "https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhmDzAO2_-eCS88hfdrax64UfGbRlaPYT23jAvuag6L7JOP5yJ81iKqnp5YULhE9ghit94LbE99ZDe89vysWGrNbpIGiJquBM_stGfocTVYSL9YMj641uVqNa7wDoVfFuSLCk40PRzyQ-Lwyspu4YUiuqiM1Y5Ed9QG37i4cw1qcTJIJetRhp63FCgU8A/s72-c/GUAC%20image%201%20.png",
                    "width": "72"
                }
            ],
            "thr_total": "0"
        },
        {
            "id": "tag:blogger.com,1999:blog-1176949257541686127.post-7505887328979081747",
            "guidislink": true,
            "link": "http://security.googleblog.com/2022/10/SecurityofPasskeysintheGooglePasswordManager.html",
            "published": "2022-10-12T08:00:00.000-04:00",
            "published_parsed": [
                2022,
                10,
                12,
                12,
                0,
                0,
                2,
                285,
                0
            ],
            "updated": "2022-10-12T08:00:03.637-04:00",
            "updated_parsed": [
                2022,
                10,
                12,
                12,
                0,
                3,
                2,
                285,
                0
            ],
            "title": "Security of Passkeys in the Google Password Manager",
            "title_detail": {
                "type": "text/plain",
                "language": null,
                "base": "http://feeds.feedburner.com/GoogleOnlineSecurityBlog",
                "value": "Security of Passkeys in the Google Password Manager"
            },
            "content": [
                {
                    "type": "text/html",
                    "language": null,
                    "base": "http://feeds.feedburner.com/GoogleOnlineSecurityBlog",
                    "value": "<span class=\"byline-author\">Posted by Arnar Birgisson, Software Engineer</span><div><br /></div><div><span id=\"docs-internal-guid-7794b4f7-7fff-3167-50a2-eb159cc4d1af\"><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 10pt; margin-top: 0pt;\"><span face=\"Roboto, sans-serif\" style=\"font-size: 12pt; vertical-align: baseline; white-space: pre-wrap;\">We are excited to announce passkey support on Android and Chrome for developers to test today, with general availability following later this year. In this post we cover details on how passkeys stored in the <a href=\"https://passwords.google.com/\">Google Password Manager</a> are kept secure. See our </span><a href=\"https://android-developers.googleblog.com/2022/10/bringing-passkeys-to-android-and-chrome.html\"><span face=\"Roboto, sans-serif\" style=\"color: #1155cc; font-size: 12pt; vertical-align: baseline; white-space: pre-wrap;\">post on the Android Developers Blog</span></a><span face=\"Roboto, sans-serif\" style=\"font-size: 12pt; vertical-align: baseline; white-space: pre-wrap;\"> for a more general overview.</span></p><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 10pt; margin-top: 0pt;\"><span face=\"Roboto, sans-serif\" style=\"font-size: 12pt; vertical-align: baseline; white-space: pre-wrap;\">Passkeys are a safer and more secure alternative to passwords. They also replace the need for traditional 2nd factor authentication methods such as text message, app based one-time codes or push-based approvals. Passkeys use public-key cryptography so that data breaches of service providers don't result in a compromise of passkey-protected accounts, and are based on industry standard APIs and protocols to ensure they are not subject to phishing attacks.</span></p><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 10pt; margin-top: 0pt;\"><span face=\"Roboto, sans-serif\" style=\"font-size: 12pt; vertical-align: baseline; white-space: pre-wrap;\">Passkeys are the result of an industry-wide effort. They combine secure authentication standards created within the FIDO Alliance and the W3C Web Authentication working group with a common terminology and user experience across different platforms, recoverability against device loss, and a common integration path for developers. Passkeys are supported in Android and other leading industry client OS platforms.</span></p><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 10pt; margin-top: 0pt;\"><span face=\"Roboto, sans-serif\" style=\"font-size: 12pt; vertical-align: baseline; white-space: pre-wrap;\">A single passkey identifies a particular user account on some online service. A user has different passkeys for different services. The user's operating systems, or software similar to today's password managers, provide user-friendly management of passkeys. From the user's point of view, using passkeys is very similar to using saved passwords, but with significantly better security.</span></p><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 10pt; margin-top: 0pt;\"><span face=\"Roboto, sans-serif\" style=\"font-size: 12pt; vertical-align: baseline; white-space: pre-wrap;\">The main ingredient of a passkey is a cryptographic private key. In most cases, this private key lives only on the user's own devices, such as laptops or mobile phones. When a passkey is created, only its corresponding public key is stored by the online service. During login, the service uses the public key to verify a signature from the private key. This can only come from one of the user's devices. Additionally, the user is also required to unlock their device or credential store for this to happen, preventing sign-ins from e.g. a stolen phone.&nbsp;</span></p><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 10pt; margin-top: 0pt;\"><span face=\"Roboto, sans-serif\" style=\"font-size: 12pt; vertical-align: baseline; white-space: pre-wrap;\">To address the common case of device loss or upgrade, a key feature enabled by passkeys is that the same private key can exist on multiple devices. This happens through platform-provided synchronization and backup.</span></p><h3 dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 4pt; margin-top: 14pt;\"><span face=\"Roboto, sans-serif\" style=\"font-size: 16pt; font-weight: 400; vertical-align: baseline; white-space: pre-wrap;\">Passkeys in the Google Password Manager</span></h3><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 10pt; margin-top: 0pt;\"><span face=\"Roboto, sans-serif\" style=\"font-size: 12pt; vertical-align: baseline; white-space: pre-wrap;\">On Android, the Google Password Manager provides backup and sync of passkeys. This means that if a user sets up two Android devices with the same Google Account, passkeys created on one device are available on the other. This applies both to the case where a user has multiple devices simultaneously, for example a phone and a tablet, and the more common case where a user upgrades e.g. from an old Android phone to a new one.</span></p><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 10pt; margin-top: 0pt;\"><span face=\"Roboto, sans-serif\" style=\"font-size: 12pt; vertical-align: baseline; white-space: pre-wrap;\">Passkeys in the Google Password Manager are </span><span face=\"Roboto, sans-serif\" style=\"font-size: 12pt; font-weight: 700; vertical-align: baseline; white-space: pre-wrap;\">always </span><span face=\"Roboto, sans-serif\" style=\"font-size: 12pt; font-style: italic; font-weight: 700; vertical-align: baseline; white-space: pre-wrap;\">end-to-end encrypted</span><span face=\"Roboto, sans-serif\" style=\"font-size: 12pt; font-style: italic; vertical-align: baseline; white-space: pre-wrap;\">:</span><span face=\"Roboto, sans-serif\" style=\"font-size: 12pt; vertical-align: baseline; white-space: pre-wrap;\"> When a passkey is backed up, its private key is uploaded only in its encrypted form using an encryption key that is only accessible on the user's own devices. This protects passkeys against Google itself, or e.g. a malicious attacker inside Google. Without access to the private key, such an attacker cannot use the passkey to sign in to its corresponding online account.</span></p><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 10pt; margin-top: 0pt;\"><span face=\"Roboto, sans-serif\" style=\"font-size: 12pt; vertical-align: baseline; white-space: pre-wrap;\">Additionally, passkey private keys are encrypted at rest on the user's devices, with a hardware-protected encryption key.</span></p><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 10pt; margin-top: 0pt;\"><span face=\"Roboto, sans-serif\" style=\"font-size: 12pt; vertical-align: baseline; white-space: pre-wrap;\">Creating or using passkeys stored in the Google Password Manager requires a screen lock to be set up. This prevents others from using a passkey even if they have access to the user's device, but is also necessary to facilitate the end-to-end encryption and safe recovery in the case of device loss.</span></p><h3 dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 4pt; margin-top: 14pt;\"><span face=\"Roboto, sans-serif\" style=\"font-size: 16pt; font-weight: 400; vertical-align: baseline; white-space: pre-wrap;\">Recovering access or adding new devices</span></h3><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 10pt; margin-top: 0pt;\"><span face=\"Roboto, sans-serif\" style=\"font-size: 12pt; vertical-align: baseline; white-space: pre-wrap;\">When a user sets up a new Android device by transferring data from an older device, existing end-to-end encryption keys are securely transferred to the new device. In some cases, for example, when the older device was lost or damaged, users may need to recover the end-to-end encryption keys from a secure online backup.</span></p><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 10pt; margin-top: 0pt;\"><span face=\"Roboto, sans-serif\" style=\"font-size: 12pt; vertical-align: baseline; white-space: pre-wrap;\">To recover the end-to-end encryption key, the user must provide the lock screen PIN, password, or pattern of another existing device that had access to those keys. Note, that restoring passkeys on a new device requires </span><span face=\"Roboto, sans-serif\" style=\"font-size: 12pt; font-weight: 700; vertical-align: baseline; white-space: pre-wrap;\">both</span><span face=\"Roboto, sans-serif\" style=\"font-size: 12pt; vertical-align: baseline; white-space: pre-wrap;\"> being signed in to the Google Account and an existing device's screen lock.</span></p><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 10pt; margin-top: 0pt;\"><span face=\"Roboto, sans-serif\" style=\"font-size: 12pt; vertical-align: baseline; white-space: pre-wrap;\">Since screen lock PINs and patterns, in particular, are short, the recovery mechanism provides protection against brute-force guessing. After a small number of consecutive, incorrect attempts to provide the screen lock of an existing device, it can no longer be used. This number is always 10 or less, but for safety reasons we may block attempts before that number is reached. Screen locks of other existing devices may still be used.</span></p><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 10pt; margin-top: 0pt;\"><span face=\"Roboto, sans-serif\" style=\"font-size: 12pt; vertical-align: baseline; white-space: pre-wrap;\">If the maximum number of attempts is reached for all existing devices on file, e.g. when a malicious actor tries to brute force guess, the user may still be able to recover if they still have access to one of the existing devices and knows its screen lock. By signing in to the existing device and changing its screen lock PIN, password or pattern, the count of invalid recovery attempts is reset. End-to-end encryption keys can then be recovered on the new device by entering the new screen lock of the existing device.</span></p><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 10pt; margin-top: 0pt;\"><span face=\"Roboto, sans-serif\" style=\"font-size: 12pt; vertical-align: baseline; white-space: pre-wrap;\">Screen lock PINs, passwords or patterns themselves are not known to Google. The data that allows Google to verify correct input of a device's screen lock is stored on Google's servers in secure hardware enclaves and cannot be read by Google or any other entity. The secure hardware also enforces the limits on maximum guesses, which cannot exceed 10 attempts, even by an internal attack. This protects the screen lock information, even from Google.</span></p><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 10pt; margin-top: 0pt;\"><span face=\"Roboto, sans-serif\" style=\"font-size: 12pt; vertical-align: baseline; white-space: pre-wrap;\">When the screen lock is removed from a device, the previously configured screen lock may still be used for recovery of end-to-end encryption keys on other devices for a period of time up to 64 days. If a user believes their screen lock is compromised, the safer option is to configure a different screen lock (e.g. a different PIN). This disables the previous screen lock as a recovery factor immediately, as long as the user is online and signed in on the device.</span></p><h3 dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 4pt; margin-top: 14pt;\"><span face=\"Roboto, sans-serif\" style=\"font-size: 16pt; font-weight: 400; vertical-align: baseline; white-space: pre-wrap;\">Recovery user experience</span></h3><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 10pt; margin-top: 0pt;\"><span face=\"Roboto, sans-serif\" style=\"font-size: 12pt; vertical-align: baseline; white-space: pre-wrap;\">If end-to-end encryption keys were not transferred during device setup, the recovery process happens automatically the first time a passkey is created or used on the new device. In most cases, this only happens once on each new device.</span></p><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 10pt; margin-top: 0pt;\"><span face=\"Roboto, sans-serif\" style=\"font-size: 12pt; vertical-align: baseline; white-space: pre-wrap;\">From the user's point of view, this means that when using a passkey for the first time on the new device, they will be asked for an existing device's screen lock in order to restore the end-to-end encryption keys, and then for the current device's screen lock or biometric, which is required every time a passkey is used.</span></p><h3 dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 4pt; margin-top: 14pt;\"><span face=\"Roboto, sans-serif\" style=\"font-size: 16pt; font-weight: 400; vertical-align: baseline; white-space: pre-wrap;\">Passkeys and device-bound private keys</span></h3><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 10pt; margin-top: 0pt;\"><span face=\"Roboto, sans-serif\" style=\"font-size: 12pt; vertical-align: baseline; white-space: pre-wrap;\">Passkeys are an instance of </span><a href=\"https://fidoalliance.org/white-paper-multi-device-fido-credentials/\"><span face=\"Roboto, sans-serif\" style=\"color: #1155cc; font-size: 12pt; vertical-align: baseline; white-space: pre-wrap;\">FIDO multi-device credentials</span></a><span face=\"Roboto, sans-serif\" style=\"font-size: 12pt; vertical-align: baseline; white-space: pre-wrap;\">. Google recognizes that in certain deployment scenarios, relying parties may still require signals about the strong device binding that traditional FIDO credentials provide, while taking advantage of the recoverability and usability of passkeys.</span></p><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 10pt; margin-top: 0pt;\"><span face=\"Roboto, sans-serif\" style=\"font-size: 12pt; vertical-align: baseline; white-space: pre-wrap;\">To address this, passkeys on Android support the proposed </span><a href=\"https://pr-preview.s3.amazonaws.com/w3c/webauthn/pull/1663.html#sctn-device-publickey-extension\"><span face=\"Roboto, sans-serif\" style=\"color: #1155cc; font-size: 12pt; vertical-align: baseline; white-space: pre-wrap;\">Device-bound Public Key WebAuthn extension</span></a><span face=\"Roboto, sans-serif\" style=\"font-size: 12pt; vertical-align: baseline; white-space: pre-wrap;\"> (</span><span face=\"Roboto, sans-serif\" style=\"font-size: 12pt; font-style: italic; vertical-align: baseline; white-space: pre-wrap;\">devicePubKey)</span><span face=\"Roboto, sans-serif\" style=\"font-size: 12pt; vertical-align: baseline; white-space: pre-wrap;\">. If this extension is requested when creating or using passkeys on Android, relying parties will receive two signatures in the result: One from the passkey private key, which may exist on multiple devices, and an additional signature from a second private key that only exists on the current device. This </span><span face=\"Roboto, sans-serif\" style=\"font-size: 12pt; font-style: italic; vertical-align: baseline; white-space: pre-wrap;\">device-bound private key</span><span face=\"Roboto, sans-serif\" style=\"font-size: 12pt; vertical-align: baseline; white-space: pre-wrap;\"> is unique to the passkey in question, and each response includes a copy of the corresponding device-bound public key.</span></p><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 10pt; margin-top: 0pt;\"><span face=\"Roboto, sans-serif\" style=\"font-size: 12pt; vertical-align: baseline; white-space: pre-wrap;\">Observing two passkey signatures with the same device-bound public key is a strong signal that the signatures are generated by the same device. On the other hand, if a relying party observes a device-bound public key it has not seen before, this may indicate that the passkey has been synced to a new device.</span></p><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 10pt; margin-top: 0pt;\"><span face=\"Roboto, sans-serif\" style=\"font-size: 12pt; vertical-align: baseline; white-space: pre-wrap;\">On Android, device-bound private keys are generated in the device's trusted execution environment (TEE), via the </span><a href=\"https://source.android.com/docs/security/features/keystore\"><span face=\"Roboto, sans-serif\" style=\"color: #1155cc; font-size: 12pt; vertical-align: baseline; white-space: pre-wrap;\">Android Keystore API</span></a><span face=\"Roboto, sans-serif\" style=\"font-size: 12pt; vertical-align: baseline; white-space: pre-wrap;\">. This provides hardware-backed protections against exfiltration of the device-bound private keys to other devices. Device-bound private keys are not backed up, so e.g. when a device is factory reset and restored from a prior backup, its device-bound key pairs will be different.</span></p><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 10pt; margin-top: 0pt;\"><span face=\"Roboto, sans-serif\" style=\"font-size: 12pt; vertical-align: baseline; white-space: pre-wrap;\">The device-bound key pair is created and stored on-demand. That means relying parties can request the devicePubKey extension when getting a signature from an existing passkey, even if devicePubKey was not requested when the passkey was created.</span></p></span></div>"
                }
            ],
            "summary": "<span class=\"byline-author\">Posted by Arnar Birgisson, Software Engineer</span><div><br /></div><div><span id=\"docs-internal-guid-7794b4f7-7fff-3167-50a2-eb159cc4d1af\"><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 10pt; margin-top: 0pt;\"><span face=\"Roboto, sans-serif\" style=\"font-size: 12pt; vertical-align: baseline; white-space: pre-wrap;\">We are excited to announce passkey support on Android and Chrome for developers to test today, with general availability following later this year. In this post we cover details on how passkeys stored in the <a href=\"https://passwords.google.com/\">Google Password Manager</a> are kept secure. See our </span><a href=\"https://android-developers.googleblog.com/2022/10/bringing-passkeys-to-android-and-chrome.html\"><span face=\"Roboto, sans-serif\" style=\"color: #1155cc; font-size: 12pt; vertical-align: baseline; white-space: pre-wrap;\">post on the Android Developers Blog</span></a><span face=\"Roboto, sans-serif\" style=\"font-size: 12pt; vertical-align: baseline; white-space: pre-wrap;\"> for a more general overview.</span></p><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 10pt; margin-top: 0pt;\"><span face=\"Roboto, sans-serif\" style=\"font-size: 12pt; vertical-align: baseline; white-space: pre-wrap;\">Passkeys are a safer and more secure alternative to passwords. They also replace the need for traditional 2nd factor authentication methods such as text message, app based one-time codes or push-based approvals. Passkeys use public-key cryptography so that data breaches of service providers don't result in a compromise of passkey-protected accounts, and are based on industry standard APIs and protocols to ensure they are not subject to phishing attacks.</span></p><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 10pt; margin-top: 0pt;\"><span face=\"Roboto, sans-serif\" style=\"font-size: 12pt; vertical-align: baseline; white-space: pre-wrap;\">Passkeys are the result of an industry-wide effort. They combine secure authentication standards created within the FIDO Alliance and the W3C Web Authentication working group with a common terminology and user experience across different platforms, recoverability against device loss, and a common integration path for developers. Passkeys are supported in Android and other leading industry client OS platforms.</span></p><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 10pt; margin-top: 0pt;\"><span face=\"Roboto, sans-serif\" style=\"font-size: 12pt; vertical-align: baseline; white-space: pre-wrap;\">A single passkey identifies a particular user account on some online service. A user has different passkeys for different services. The user's operating systems, or software similar to today's password managers, provide user-friendly management of passkeys. From the user's point of view, using passkeys is very similar to using saved passwords, but with significantly better security.</span></p><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 10pt; margin-top: 0pt;\"><span face=\"Roboto, sans-serif\" style=\"font-size: 12pt; vertical-align: baseline; white-space: pre-wrap;\">The main ingredient of a passkey is a cryptographic private key. In most cases, this private key lives only on the user's own devices, such as laptops or mobile phones. When a passkey is created, only its corresponding public key is stored by the online service. During login, the service uses the public key to verify a signature from the private key. This can only come from one of the user's devices. Additionally, the user is also required to unlock their device or credential store for this to happen, preventing sign-ins from e.g. a stolen phone.&nbsp;</span></p><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 10pt; margin-top: 0pt;\"><span face=\"Roboto, sans-serif\" style=\"font-size: 12pt; vertical-align: baseline; white-space: pre-wrap;\">To address the common case of device loss or upgrade, a key feature enabled by passkeys is that the same private key can exist on multiple devices. This happens through platform-provided synchronization and backup.</span></p><h3 dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 4pt; margin-top: 14pt;\"><span face=\"Roboto, sans-serif\" style=\"font-size: 16pt; font-weight: 400; vertical-align: baseline; white-space: pre-wrap;\">Passkeys in the Google Password Manager</span></h3><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 10pt; margin-top: 0pt;\"><span face=\"Roboto, sans-serif\" style=\"font-size: 12pt; vertical-align: baseline; white-space: pre-wrap;\">On Android, the Google Password Manager provides backup and sync of passkeys. This means that if a user sets up two Android devices with the same Google Account, passkeys created on one device are available on the other. This applies both to the case where a user has multiple devices simultaneously, for example a phone and a tablet, and the more common case where a user upgrades e.g. from an old Android phone to a new one.</span></p><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 10pt; margin-top: 0pt;\"><span face=\"Roboto, sans-serif\" style=\"font-size: 12pt; vertical-align: baseline; white-space: pre-wrap;\">Passkeys in the Google Password Manager are </span><span face=\"Roboto, sans-serif\" style=\"font-size: 12pt; font-weight: 700; vertical-align: baseline; white-space: pre-wrap;\">always </span><span face=\"Roboto, sans-serif\" style=\"font-size: 12pt; font-style: italic; font-weight: 700; vertical-align: baseline; white-space: pre-wrap;\">end-to-end encrypted</span><span face=\"Roboto, sans-serif\" style=\"font-size: 12pt; font-style: italic; vertical-align: baseline; white-space: pre-wrap;\">:</span><span face=\"Roboto, sans-serif\" style=\"font-size: 12pt; vertical-align: baseline; white-space: pre-wrap;\"> When a passkey is backed up, its private key is uploaded only in its encrypted form using an encryption key that is only accessible on the user's own devices. This protects passkeys against Google itself, or e.g. a malicious attacker inside Google. Without access to the private key, such an attacker cannot use the passkey to sign in to its corresponding online account.</span></p><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 10pt; margin-top: 0pt;\"><span face=\"Roboto, sans-serif\" style=\"font-size: 12pt; vertical-align: baseline; white-space: pre-wrap;\">Additionally, passkey private keys are encrypted at rest on the user's devices, with a hardware-protected encryption key.</span></p><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 10pt; margin-top: 0pt;\"><span face=\"Roboto, sans-serif\" style=\"font-size: 12pt; vertical-align: baseline; white-space: pre-wrap;\">Creating or using passkeys stored in the Google Password Manager requires a screen lock to be set up. This prevents others from using a passkey even if they have access to the user's device, but is also necessary to facilitate the end-to-end encryption and safe recovery in the case of device loss.</span></p><h3 dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 4pt; margin-top: 14pt;\"><span face=\"Roboto, sans-serif\" style=\"font-size: 16pt; font-weight: 400; vertical-align: baseline; white-space: pre-wrap;\">Recovering access or adding new devices</span></h3><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 10pt; margin-top: 0pt;\"><span face=\"Roboto, sans-serif\" style=\"font-size: 12pt; vertical-align: baseline; white-space: pre-wrap;\">When a user sets up a new Android device by transferring data from an older device, existing end-to-end encryption keys are securely transferred to the new device. In some cases, for example, when the older device was lost or damaged, users may need to recover the end-to-end encryption keys from a secure online backup.</span></p><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 10pt; margin-top: 0pt;\"><span face=\"Roboto, sans-serif\" style=\"font-size: 12pt; vertical-align: baseline; white-space: pre-wrap;\">To recover the end-to-end encryption key, the user must provide the lock screen PIN, password, or pattern of another existing device that had access to those keys. Note, that restoring passkeys on a new device requires </span><span face=\"Roboto, sans-serif\" style=\"font-size: 12pt; font-weight: 700; vertical-align: baseline; white-space: pre-wrap;\">both</span><span face=\"Roboto, sans-serif\" style=\"font-size: 12pt; vertical-align: baseline; white-space: pre-wrap;\"> being signed in to the Google Account and an existing device's screen lock.</span></p><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 10pt; margin-top: 0pt;\"><span face=\"Roboto, sans-serif\" style=\"font-size: 12pt; vertical-align: baseline; white-space: pre-wrap;\">Since screen lock PINs and patterns, in particular, are short, the recovery mechanism provides protection against brute-force guessing. After a small number of consecutive, incorrect attempts to provide the screen lock of an existing device, it can no longer be used. This number is always 10 or less, but for safety reasons we may block attempts before that number is reached. Screen locks of other existing devices may still be used.</span></p><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 10pt; margin-top: 0pt;\"><span face=\"Roboto, sans-serif\" style=\"font-size: 12pt; vertical-align: baseline; white-space: pre-wrap;\">If the maximum number of attempts is reached for all existing devices on file, e.g. when a malicious actor tries to brute force guess, the user may still be able to recover if they still have access to one of the existing devices and knows its screen lock. By signing in to the existing device and changing its screen lock PIN, password or pattern, the count of invalid recovery attempts is reset. End-to-end encryption keys can then be recovered on the new device by entering the new screen lock of the existing device.</span></p><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 10pt; margin-top: 0pt;\"><span face=\"Roboto, sans-serif\" style=\"font-size: 12pt; vertical-align: baseline; white-space: pre-wrap;\">Screen lock PINs, passwords or patterns themselves are not known to Google. The data that allows Google to verify correct input of a device's screen lock is stored on Google's servers in secure hardware enclaves and cannot be read by Google or any other entity. The secure hardware also enforces the limits on maximum guesses, which cannot exceed 10 attempts, even by an internal attack. This protects the screen lock information, even from Google.</span></p><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 10pt; margin-top: 0pt;\"><span face=\"Roboto, sans-serif\" style=\"font-size: 12pt; vertical-align: baseline; white-space: pre-wrap;\">When the screen lock is removed from a device, the previously configured screen lock may still be used for recovery of end-to-end encryption keys on other devices for a period of time up to 64 days. If a user believes their screen lock is compromised, the safer option is to configure a different screen lock (e.g. a different PIN). This disables the previous screen lock as a recovery factor immediately, as long as the user is online and signed in on the device.</span></p><h3 dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 4pt; margin-top: 14pt;\"><span face=\"Roboto, sans-serif\" style=\"font-size: 16pt; font-weight: 400; vertical-align: baseline; white-space: pre-wrap;\">Recovery user experience</span></h3><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 10pt; margin-top: 0pt;\"><span face=\"Roboto, sans-serif\" style=\"font-size: 12pt; vertical-align: baseline; white-space: pre-wrap;\">If end-to-end encryption keys were not transferred during device setup, the recovery process happens automatically the first time a passkey is created or used on the new device. In most cases, this only happens once on each new device.</span></p><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 10pt; margin-top: 0pt;\"><span face=\"Roboto, sans-serif\" style=\"font-size: 12pt; vertical-align: baseline; white-space: pre-wrap;\">From the user's point of view, this means that when using a passkey for the first time on the new device, they will be asked for an existing device's screen lock in order to restore the end-to-end encryption keys, and then for the current device's screen lock or biometric, which is required every time a passkey is used.</span></p><h3 dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 4pt; margin-top: 14pt;\"><span face=\"Roboto, sans-serif\" style=\"font-size: 16pt; font-weight: 400; vertical-align: baseline; white-space: pre-wrap;\">Passkeys and device-bound private keys</span></h3><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 10pt; margin-top: 0pt;\"><span face=\"Roboto, sans-serif\" style=\"font-size: 12pt; vertical-align: baseline; white-space: pre-wrap;\">Passkeys are an instance of </span><a href=\"https://fidoalliance.org/white-paper-multi-device-fido-credentials/\"><span face=\"Roboto, sans-serif\" style=\"color: #1155cc; font-size: 12pt; vertical-align: baseline; white-space: pre-wrap;\">FIDO multi-device credentials</span></a><span face=\"Roboto, sans-serif\" style=\"font-size: 12pt; vertical-align: baseline; white-space: pre-wrap;\">. Google recognizes that in certain deployment scenarios, relying parties may still require signals about the strong device binding that traditional FIDO credentials provide, while taking advantage of the recoverability and usability of passkeys.</span></p><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 10pt; margin-top: 0pt;\"><span face=\"Roboto, sans-serif\" style=\"font-size: 12pt; vertical-align: baseline; white-space: pre-wrap;\">To address this, passkeys on Android support the proposed </span><a href=\"https://pr-preview.s3.amazonaws.com/w3c/webauthn/pull/1663.html#sctn-device-publickey-extension\"><span face=\"Roboto, sans-serif\" style=\"color: #1155cc; font-size: 12pt; vertical-align: baseline; white-space: pre-wrap;\">Device-bound Public Key WebAuthn extension</span></a><span face=\"Roboto, sans-serif\" style=\"font-size: 12pt; vertical-align: baseline; white-space: pre-wrap;\"> (</span><span face=\"Roboto, sans-serif\" style=\"font-size: 12pt; font-style: italic; vertical-align: baseline; white-space: pre-wrap;\">devicePubKey)</span><span face=\"Roboto, sans-serif\" style=\"font-size: 12pt; vertical-align: baseline; white-space: pre-wrap;\">. If this extension is requested when creating or using passkeys on Android, relying parties will receive two signatures in the result: One from the passkey private key, which may exist on multiple devices, and an additional signature from a second private key that only exists on the current device. This </span><span face=\"Roboto, sans-serif\" style=\"font-size: 12pt; font-style: italic; vertical-align: baseline; white-space: pre-wrap;\">device-bound private key</span><span face=\"Roboto, sans-serif\" style=\"font-size: 12pt; vertical-align: baseline; white-space: pre-wrap;\"> is unique to the passkey in question, and each response includes a copy of the corresponding device-bound public key.</span></p><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 10pt; margin-top: 0pt;\"><span face=\"Roboto, sans-serif\" style=\"font-size: 12pt; vertical-align: baseline; white-space: pre-wrap;\">Observing two passkey signatures with the same device-bound public key is a strong signal that the signatures are generated by the same device. On the other hand, if a relying party observes a device-bound public key it has not seen before, this may indicate that the passkey has been synced to a new device.</span></p><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 10pt; margin-top: 0pt;\"><span face=\"Roboto, sans-serif\" style=\"font-size: 12pt; vertical-align: baseline; white-space: pre-wrap;\">On Android, device-bound private keys are generated in the device's trusted execution environment (TEE), via the </span><a href=\"https://source.android.com/docs/security/features/keystore\"><span face=\"Roboto, sans-serif\" style=\"color: #1155cc; font-size: 12pt; vertical-align: baseline; white-space: pre-wrap;\">Android Keystore API</span></a><span face=\"Roboto, sans-serif\" style=\"font-size: 12pt; vertical-align: baseline; white-space: pre-wrap;\">. This provides hardware-backed protections against exfiltration of the device-bound private keys to other devices. Device-bound private keys are not backed up, so e.g. when a device is factory reset and restored from a prior backup, its device-bound key pairs will be different.</span></p><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 10pt; margin-top: 0pt;\"><span face=\"Roboto, sans-serif\" style=\"font-size: 12pt; vertical-align: baseline; white-space: pre-wrap;\">The device-bound key pair is created and stored on-demand. That means relying parties can request the devicePubKey extension when getting a signature from an existing passkey, even if devicePubKey was not requested when the passkey was created.</span></p></span></div>",
            "links": [
                {
                    "href": "http://security.googleblog.com/feeds/7505887328979081747/comments/default",
                    "rel": "replies",
                    "title": "Post Comments",
                    "type": "application/atom+xml"
                },
                {
                    "href": "http://www.blogger.com/comment.g?blogID=1176949257541686127&postID=7505887328979081747&isPopup=true",
                    "rel": "replies",
                    "title": "0 Comments",
                    "type": "text/html"
                },
                {
                    "href": "http://www.blogger.com/feeds/1176949257541686127/posts/default/7505887328979081747",
                    "rel": "edit",
                    "type": "application/atom+xml"
                },
                {
                    "href": "http://www.blogger.com/feeds/1176949257541686127/posts/default/7505887328979081747",
                    "rel": "self",
                    "type": "application/atom+xml"
                },
                {
                    "href": "http://security.googleblog.com/2022/10/SecurityofPasskeysintheGooglePasswordManager.html",
                    "rel": "alternate",
                    "title": "Security of Passkeys in the Google Password Manager",
                    "type": "text/html"
                }
            ],
            "authors": [
                {
                    "name": "Kimberly Samra",
                    "href": "http://www.blogger.com/profile/17209446531010386292",
                    "email": "noreply@blogger.com"
                }
            ],
            "author_detail": {
                "name": "Kimberly Samra",
                "href": "http://www.blogger.com/profile/17209446531010386292",
                "email": "noreply@blogger.com"
            },
            "href": "http://www.blogger.com/profile/17209446531010386292",
            "author": "Kimberly Samra (noreply@blogger.com)",
            "gd_image": {
                "height": "16",
                "rel": "http://schemas.google.com/g/2005#thumbnail",
                "src": "https://img1.blogblog.com/img/b16-rounded.gif",
                "width": "16"
            },
            "thr_total": "0"
        },
        {
            "id": "tag:blogger.com,1999:blog-1176949257541686127.post-8888529176620158656",
            "guidislink": true,
            "link": "http://security.googleblog.com/2022/10/google-pixel-7-and-pixel-7-pro-next.html",
            "published": "2022-10-11T13:01:00.004-04:00",
            "published_parsed": [
                2022,
                10,
                11,
                17,
                1,
                0,
                1,
                284,
                0
            ],
            "updated": "2022-10-11T19:22:42.718-04:00",
            "updated_parsed": [
                2022,
                10,
                11,
                23,
                22,
                42,
                1,
                284,
                0
            ],
            "tags": [
                {
                    "term": "android security",
                    "scheme": "http://www.blogger.com/atom/ns#",
                    "label": null
                },
                {
                    "term": "pixel",
                    "scheme": "http://www.blogger.com/atom/ns#",
                    "label": null
                },
                {
                    "term": "Titan M2",
                    "scheme": "http://www.blogger.com/atom/ns#",
                    "label": null
                }
            ],
            "title": "Google Pixel 7 and Pixel 7 Pro: The next evolution in mobile security",
            "title_detail": {
                "type": "text/plain",
                "language": null,
                "base": "http://feeds.feedburner.com/GoogleOnlineSecurityBlog",
                "value": "Google Pixel 7 and Pixel 7 Pro: The next evolution in mobile security"
            },
            "content": [
                {
                    "type": "text/html",
                    "language": null,
                    "base": "http://feeds.feedburner.com/GoogleOnlineSecurityBlog",
                    "value": "<span class=\"byline-author\">Dave Kleidermacher, Jesse Seed, Brandon Barbello, Sherif Hanna, Eugene Liderman, Android, Pixel, and Silicon Security Teams</span> <p>Every day, billions of people around the world trust Google products to enrich their lives and provide helpful features \u2013  across mobile devices, smart home devices, health and fitness devices, and more. We keep more people safe online than anyone else in the world, with products that are secure by default, private by design and that put you in control. As our advancements in knowledge and computing grow to deliver more help across contexts, locations and languages, our unwavering commitment to protecting your information remains. </p><p>That\u2019s why Pixel phones are designed from the ground up to help protect you and your sensitive data while keeping you in control. We\u2019re taking our industry-leading approach to security and privacy to the next level with Google Pixel 7 and Pixel 7 Pro, our most secure and private phones yet, which were recently recognized as the highest rated for security when tested among other smartphones by a third-party global research firm.<sup id=\"fnref1\"><a href=\"http://feeds.feedburner.com/GoogleOnlineSecurityBlog#fn1\" rel=\"footnote\">1</a></sup>  </p><p>Pixel phones also get better every few months with Feature Drops that provide the latest product updates, tips and tricks from Google. And Pixel 7 and Pixel 7 Pro users will receive at least five years of security updates<sup id=\"fnref2\"><a href=\"http://feeds.feedburner.com/GoogleOnlineSecurityBlog#fn2\" rel=\"footnote\">2</a></sup>, so your Pixel gets even more secure over time. </p><p><strong>Your protection, built into Pixel</strong></p><p>Your digital life and most sensitive information lives on your phone: financial information, passwords, personal data, photos \u2013 you name it. With Google Tensor G2 and our custom Titan M2 security chip, Pixel 7 and Pixel 7 Pro have multiple layers of hardware security to help keep you and your personal information safe. We take a comprehensive, end-to-end approach to security with verifiable protections at each layer - the network, application, operating system and multiple layers on the silicon itself. If you use Pixel for your business, this approach helps protect your company data, too.  </p><p><div class=\"separator\" style=\"clear: both;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEggAnSsDEwcnzxZ_CBRosEw8rzu5l27OQXjqQ3yS0bQ96h0Gt-4OKxF9e81zd0NSHDoPwRxOHj3L0CFamDm_3ROfLsQQw-zvHEWfO2UyOyAWep-sQJqkVkc2ThW-gSdpn4cqbyiXWR0PciKdTL8sBFUM0jVBq-Neo9FK32TyiFfaE9MjyKjAqiNLPdcBQ/s1600/google_de22_thumbnails_tensor_light_1156x578.png\" style=\"display: block; padding: 1em 0; text-align: center;\"><img alt=\"\" border=\"0\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEggAnSsDEwcnzxZ_CBRosEw8rzu5l27OQXjqQ3yS0bQ96h0Gt-4OKxF9e81zd0NSHDoPwRxOHj3L0CFamDm_3ROfLsQQw-zvHEWfO2UyOyAWep-sQJqkVkc2ThW-gSdpn4cqbyiXWR0PciKdTL8sBFUM0jVBq-Neo9FK32TyiFfaE9MjyKjAqiNLPdcBQ/s1600/google_de22_thumbnails_tensor_light_1156x578.png\" /></a></div> </p><p>Google Tensor G2 is Pixel\u2019s newest powerful processor custom built with Google AI, and makes Pixel 7 faster, more efficient and secure<sup id=\"fnref3\"><a href=\"http://feeds.feedburner.com/GoogleOnlineSecurityBlog#fn3\" rel=\"footnote\">3</a></sup>. Every aspect of Tensor G2 was designed to improve Pixel's performance and efficiency for great battery life, amazing photos and videos.  </p><p>Tensor\u2019s built-in security core works with our Titan M2 security chip to keep your personal information, PINs and passwords safe. Titan family chips are also used to protect Google Cloud data centers and Chromebooks, so the same hardware that protects Google servers also secures your sensitive information stored on Pixel.  </p><p>And, in a first for Google, Titan M2 hardware has now been certified under Common Criteria PP0084: the international gold standard for hardware security components also used for identity, SIM cards, and bankcard security chips.<sup id=\"fnref4\"><a href=\"http://feeds.feedburner.com/GoogleOnlineSecurityBlog#fn4\" rel=\"footnote\">4</a></sup> This means that the Titan M2 hardware meets the same rigorous protection guidelines trusted by banks, carriers, and governments.  </p><p>To achieve the certification we went through rigorous third party lab testing by SGS Brightsight, a leading international security lab, and received certification against CC PP0084 with AVA_VAN.5 for the Titan M2 hardware and cryptography library from the Netherlands scheme for Certification in the Area of IT Security (NSCIB).  Of all those numbers and acronyms the part we\u2019re most proud of is that Titan hardware passed the highest level of vulnerability assessment (AVA_VAN.5) - the truest measure of resilience to advanced, methodical attacks. </p><p>This process took us more than three years to complete. The certification not only requires chip hardware to resist invasive penetration testing, but also mandates audits of the chip design and manufacturing process itself.  The benefit for consumers? The now certified Titan M2 chip makes your phone even more resilient to sophisticated attacks.<sup id=\"fnref5\"><a href=\"http://feeds.feedburner.com/GoogleOnlineSecurityBlog#fn5\" rel=\"footnote\">5</a></sup></p><p><strong>Private by design</strong></p><p>Evolving our security and privacy standards to our fast-paced world requires new approaches as well. Earlier this year at I/O, we <a href=\"https://blog.google/technology/safety-security/how-we-make-every-day-safer-with-google/\">introduced Protected Computing</a>, a toolkit of technologies that transforms how, when, and where personal data is processed to protect your privacy and security. Our approach focuses on: </p><ol> <li>Minimizing your data footprint, by shrinking the amount of personally identifiable data altogether  <li>De-identifying data, with a range of anonymization techniques so it\u2019s not linked to you  <li>Restricting data access using technologies like end-to-end encryption and secure enclaves.  </li></ol><p>Many elements of Protected Computing can be found on the new Pixel 7: </p><p>On Android, Private Compute Core keeps your information and AI-driven personalizations private with on-device processing. Data from features like Now Playing, Live Caption and Smart Reply in Messages are all processed on device and are never sent to Google to maintain your privacy.  And even your device backups to the cloud are <a href=\"https://security.googleblog.com/2018/10/google-and-android-have-your-back-by.html\">end-to-end encrypted</a> using Titan in the cloud.<sup id=\"fnref6\"><a href=\"http://feeds.feedburner.com/GoogleOnlineSecurityBlog#fn6\" rel=\"footnote\">6</a></sup>   </p><p>With Google Tensor G2, Pixel\u2019s advanced privacy protection also now covers audio data from events like cough and snore detection on Pixel 7.<sup id=\"fnref7\"><a href=\"http://feeds.feedburner.com/GoogleOnlineSecurityBlog#fn7\" rel=\"footnote\">7</a></sup> Audio data from cough and snore detection is never stored by or sent to Google to maintain your privacy.  </p><p>On Pixel 7, Tensor G2 helps safeguard your system with the <a href=\"https://source.android.com/docs/core/virtualization\">Android Virtualization Framework</a>, unlocking improved security protections like enabling system update integrity checking to occur on-the-fly, reducing boot time after an update.  </p><p><strong>Extra protection when you\u2019re online</strong></p><p>Helping to keep you safe when you use your phone to browse the web and use apps is also critical. This is where a Virtual Private Network (VPN) comes in. A VPN helps protect your online activity from anyone who might try to access it by encrypting your network traffic to turn it into an unreadable format, and masking your original IP address. Typically, if you want a VPN on your phone, you need to get one from a third party. </p><p>To ensure more people have access to enhanced security, later this year, Pixel 7 and Pixel 7 Pro owners will be able to use VPN by Google One, at no extra cost.<sup id=\"fnref8\"><a href=\"http://feeds.feedburner.com/GoogleOnlineSecurityBlog#fn8\" rel=\"footnote\">8</a></sup> <a href=\"https://one.google.com/about/vpn/howitworks\">VPN by Google One</a> is verifiably private, and will allow you to tap into Google\u2019s world-class security for peace of mind when you connect online. With VPN by Google One, Pixel helps protect your online activity at a network level. Think of it like an extra layer of protection for your online security.  </p><p>VPN by Google One creates a high-performance secure connection to the web so your browsing and app data is sent and received via an encrypted pathway. A few simple taps will activate the VPN to help keep your network traffic private from internet providers and hackers, giving you peace of mind when using cellular data, home Wi-Fi, and especially when connected to public networks, like a caf\u00e9 or airport Wi-Fi. No need to worry about online intruders, hackers, or unsecure networks.  </p><p> <div class=\"separator\" style=\"clear: both;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEixLYAdyddPs0T4MgNq-Zgxlat6JywluvS4ucFjzwW_Mx8L6dFJUZNxL9Bql9VUcqiVp4zKCjbvyM9ziy2haRc3dqERPlTgptnQRcjrc5mHadFXpl1EE7LmwehMFIobdGb1GTvKyCAexBZKFKUu9wQyTsL1tvieNiyJANodD7mrwqfZOD9lOSbqAf3WKA/s1600/image_P7P_VPN.jpg\" style=\"display: block; padding: 1em 0; text-align: center;\"><img alt=\"\" border=\"0\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEixLYAdyddPs0T4MgNq-Zgxlat6JywluvS4ucFjzwW_Mx8L6dFJUZNxL9Bql9VUcqiVp4zKCjbvyM9ziy2haRc3dqERPlTgptnQRcjrc5mHadFXpl1EE7LmwehMFIobdGb1GTvKyCAexBZKFKUu9wQyTsL1tvieNiyJANodD7mrwqfZOD9lOSbqAf3WKA/s1600/image_P7P_VPN.jpg\" /></a></div>      </p><p>Unlike traditional VPN services, VPN by Google One uses Protected Computing to technically make it impossible for anyone at a network level, even VPN by Google One, to link your online traffic with your account or identity. VPN by Google One will be available at no extra cost as long as your phone continues to receive security updates. <a href=\"https://support.google.com/googleone/answer/7582172?hl=en&amp;co=GENIE.Platform%3DAndroid\" target=\"_blank\">See here</a> to learn more about VPN by Google One. </p><p><strong>More protection and privacy with Android 13</strong><br /></p><p>Pixel 7 and Pixel 7 Pro have built-in anti-phishing protections from Android that scan for potential threats from phone calls, text messages and emails, and more anti-phishing protections enabled out-of-the-box than smartphones from leading competitors.<sup id=\"fnref9\"><a href=\"http://feeds.feedburner.com/GoogleOnlineSecurityBlog#fn9\" rel=\"footnote\">9</a></sup> In fact, Messages alone protects consumers against <a href=\"https://security.googleblog.com/2022/05/io-2022-android-13-security-and-privacy.html\">1.5 billion spam messages per month</a>. </p><p>Android also resets permissions for apps you haven\u2019t used for an extended time. In a typical month, Android automatically resets more than 3 billion permissions affecting more than 1 billion installed apps. Similarly, if you use clipboard on Android 13, your history is automatically deleted after a period of time. This blocks apps running in the foreground from seeing old information that you previously copied. </p><p><strong>You\u2019re in control</strong></p><p><br />Core to your safety is knowing that you\u2019re in control. You always have control over your settings and devices across all of our products. With Android 13, coming soon through a Feature Drop, Pixel 7 and Pixel 7 Pro will give you additional ways to stay in control of your privacy and what you share with first and third-party apps. With Quick Settings, you can act on security issues as they arise, or review which apps are running in the background and easily stop them. You\u2019ll have a single destination for reviewing your security and privacy settings, risk levels and information, making it easier to manage your safety status.  </p><p> <div class=\"separator\" style=\"clear: both;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhszhPW14qxBvA6-0E1zSIx5L8GXiJqPswYsEHbBnt0mIm8UlVC8SKjhAnPFtxTUThZ3rXF5QSi6F1adzLi5LtD2EzuyO3lkbDRdAXZ-xw4kA9ZedcHc5SJSWQGqUzA0VtUGeANLhaJrGOBw8_yBCTJg6cd6lFbfSqwdnoeopl-b_fxNEMrqPTTRiztZQ/s944/Security%20and%20privacy%20settings%20%281%29.gif\" style=\"display: block; padding: 1em 0; text-align: center;\"><img alt=\"\" border=\"0\" height=\"400\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhszhPW14qxBvA6-0E1zSIx5L8GXiJqPswYsEHbBnt0mIm8UlVC8SKjhAnPFtxTUThZ3rXF5QSi6F1adzLi5LtD2EzuyO3lkbDRdAXZ-xw4kA9ZedcHc5SJSWQGqUzA0VtUGeANLhaJrGOBw8_yBCTJg6cd6lFbfSqwdnoeopl-b_fxNEMrqPTTRiztZQ/s400/Security%20and%20privacy%20settings%20%281%29.gif\" /></a></div>   </p><p>With this new experience, you can review actionable steps to improve your safety status, like revoking a permission or app. This page will also have new action cards to notify you of any safety risks and provide timely recommendations on how to enhance your privacy. And with a single tap, you can grant or remove permissions to data that you don\u2019t want to share with compatible apps. This will be coming soon first to Pixel devices later this year, and other Android phones soon after. </p><p><strong>Verifiably secure </strong></p><p>As computing extends to more devices and use cases, Google is committed to innovating in security and being transparent about the processes that we take to get there. We are leading the industry in verifiable security by not only having products that are tested against real-world threats (like advanced spam, phishing and malware attacks), but also in publishing the results of penetration tests, security audits, and industry certifications across our <a href=\"https://g.co/pixel/certifications\">Pixel</a> and <a href=\"https://support.google.com/product-documentation/answer/10231940\">Nest</a> products. </p><p>Another way to verify our security is through our Android and Google Devices Security Reward Program where we reward security researchers who find vulnerabilities across products, including Pixel, Nest and Fitbit. Last year on Android, we <a href=\"https://security.googleblog.com/2022/02/vulnerability-reward-program-2021-year.html\">awarded nearly $3 million dollars</a>, creating a valuable feedback loop between us and the security research community and, most importantly, helping us keep our users safe.           </p><p>To learn more about Pixel 7 and Pixel 7 Pro, check out the <a href=\"https://store.google.com/category/phones?hl=en-US\">Google Store</a>. </p> <!-- Footnotes themselves at the bottom. --> <h2>Notes</h2><div class=\"footnotes\"><hr /><ol><li id=\"fn1\"><p>     Based on third-party global research firm. Evaluation considered features that may not be available in all countries. See <a href=\"https://omdia.tech.informa.com/commissioned-research/articles/mobile-device-security-2022-annual-buyers-scorecard-assessing-the-security-of-leading-mobile-devices\">here</a> for more information. &nbsp;<a href=\"http://feeds.feedburner.com/GoogleOnlineSecurityBlog#fnref1\" rev=\"footnote\">&#8617;</a><li id=\"fn2\"><p>     <sup> </sup>Android version updates and feature drops for at least 3 years from when the device first became available on the Google Store in the US. Android security updates for at least 5 years from when the device first became available on the Google Store in the US. See g.co/pixel/updates for details.&nbsp;<a href=\"http://feeds.feedburner.com/GoogleOnlineSecurityBlog#fnref2\" rev=\"footnote\">&#8617;</a><li id=\"fn3\"><p>     Compared to Pixel 6. Speed and efficiency claims based on internal testing on pre-production devices. &nbsp;<a href=\"http://feeds.feedburner.com/GoogleOnlineSecurityBlog#fnref3\" rev=\"footnote\">&#8617;</a><li id=\"fn4\"><p>     Common Criteria certification for hardware and cryptographic library (CC PP0084 EAL4+, AVA_VAN.5 and ALC_DVS.2). See g.co/pixel/certifications for details.&nbsp;<a href=\"http://feeds.feedburner.com/GoogleOnlineSecurityBlog#fnref4\" rev=\"footnote\">&#8617;</a><li id=\"fn5\"><p>     Compared to Pixel 5a and earlier Pixel phones. &nbsp;<a href=\"http://feeds.feedburner.com/GoogleOnlineSecurityBlog#fnref5\" rev=\"footnote\">&#8617;</a><li id=\"fn6\"><p>     Excludes MMS attachments and Google Photos.&nbsp;<a href=\"http://feeds.feedburner.com/GoogleOnlineSecurityBlog#fnref6\" rev=\"footnote\">&#8617;</a><li id=\"fn7\"><p>     <strong> </strong>Not intended to diagnose, cure, mitigate, prevent or treat any disease or condition. Consult your healthcare professional if you have questions about your health. See g.co/pixel/digitalwellbeing for more information. &nbsp;<a href=\"http://feeds.feedburner.com/GoogleOnlineSecurityBlog#fnref7\" rev=\"footnote\">&#8617;</a><li id=\"fn8\"><p>     Coming soon. Restrictions apply. Some data is not transmitted through VPN. Not available in all countries. All other Google One membership benefits sold separately. This VPN offer does not impact price or benefits of Google One  Premium plan. Use of VPN may increase data costs depending on your plan. See g.co/pixel/vpn for details.&nbsp;<a href=\"http://feeds.feedburner.com/GoogleOnlineSecurityBlog#fnref8\" rev=\"footnote\">&#8617;</a><li id=\"fn9\"><p>     Based on third-party research funded by Google LLC in June 2022. Evaluation based on no-cost smartphone features enabled by default. Some features may not be available in all countries. See <a href=\"https://www.leviathansecurity.com/media/5fajnujsa8tzkdf5sznnw0utdvqd9g-tgwn4-pp73e\">here</a> for more information.&nbsp;<a href=\"http://feeds.feedburner.com/GoogleOnlineSecurityBlog#fnref9\" rev=\"footnote\">&#8617;</a> </ol></div>"
                }
            ],
            "summary": "<span class=\"byline-author\">Dave Kleidermacher, Jesse Seed, Brandon Barbello, Sherif Hanna, Eugene Liderman, Android, Pixel, and Silicon Security Teams</span> <p>Every day, billions of people around the world trust Google products to enrich their lives and provide helpful features \u2013  across mobile devices, smart home devices, health and fitness devices, and more. We keep more people safe online than anyone else in the world, with products that are secure by default, private by design and that put you in control. As our advancements in knowledge and computing grow to deliver more help across contexts, locations and languages, our unwavering commitment to protecting your information remains. </p><p>That\u2019s why Pixel phones are designed from the ground up to help protect you and your sensitive data while keeping you in control. We\u2019re taking our industry-leading approach to security and privacy to the next level with Google Pixel 7 and Pixel 7 Pro, our most secure and private phones yet, which were recently recognized as the highest rated for security when tested among other smartphones by a third-party global research firm.<sup id=\"fnref1\"><a href=\"http://feeds.feedburner.com/GoogleOnlineSecurityBlog#fn1\" rel=\"footnote\">1</a></sup>  </p><p>Pixel phones also get better every few months with Feature Drops that provide the latest product updates, tips and tricks from Google. And Pixel 7 and Pixel 7 Pro users will receive at least five years of security updates<sup id=\"fnref2\"><a href=\"http://feeds.feedburner.com/GoogleOnlineSecurityBlog#fn2\" rel=\"footnote\">2</a></sup>, so your Pixel gets even more secure over time. </p><p><strong>Your protection, built into Pixel</strong></p><p>Your digital life and most sensitive information lives on your phone: financial information, passwords, personal data, photos \u2013 you name it. With Google Tensor G2 and our custom Titan M2 security chip, Pixel 7 and Pixel 7 Pro have multiple layers of hardware security to help keep you and your personal information safe. We take a comprehensive, end-to-end approach to security with verifiable protections at each layer - the network, application, operating system and multiple layers on the silicon itself. If you use Pixel for your business, this approach helps protect your company data, too.  </p><p><div class=\"separator\" style=\"clear: both;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEggAnSsDEwcnzxZ_CBRosEw8rzu5l27OQXjqQ3yS0bQ96h0Gt-4OKxF9e81zd0NSHDoPwRxOHj3L0CFamDm_3ROfLsQQw-zvHEWfO2UyOyAWep-sQJqkVkc2ThW-gSdpn4cqbyiXWR0PciKdTL8sBFUM0jVBq-Neo9FK32TyiFfaE9MjyKjAqiNLPdcBQ/s1600/google_de22_thumbnails_tensor_light_1156x578.png\" style=\"display: block; padding: 1em 0; text-align: center;\"><img alt=\"\" border=\"0\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEggAnSsDEwcnzxZ_CBRosEw8rzu5l27OQXjqQ3yS0bQ96h0Gt-4OKxF9e81zd0NSHDoPwRxOHj3L0CFamDm_3ROfLsQQw-zvHEWfO2UyOyAWep-sQJqkVkc2ThW-gSdpn4cqbyiXWR0PciKdTL8sBFUM0jVBq-Neo9FK32TyiFfaE9MjyKjAqiNLPdcBQ/s1600/google_de22_thumbnails_tensor_light_1156x578.png\" /></a></div> </p><p>Google Tensor G2 is Pixel\u2019s newest powerful processor custom built with Google AI, and makes Pixel 7 faster, more efficient and secure<sup id=\"fnref3\"><a href=\"http://feeds.feedburner.com/GoogleOnlineSecurityBlog#fn3\" rel=\"footnote\">3</a></sup>. Every aspect of Tensor G2 was designed to improve Pixel's performance and efficiency for great battery life, amazing photos and videos.  </p><p>Tensor\u2019s built-in security core works with our Titan M2 security chip to keep your personal information, PINs and passwords safe. Titan family chips are also used to protect Google Cloud data centers and Chromebooks, so the same hardware that protects Google servers also secures your sensitive information stored on Pixel.  </p><p>And, in a first for Google, Titan M2 hardware has now been certified under Common Criteria PP0084: the international gold standard for hardware security components also used for identity, SIM cards, and bankcard security chips.<sup id=\"fnref4\"><a href=\"http://feeds.feedburner.com/GoogleOnlineSecurityBlog#fn4\" rel=\"footnote\">4</a></sup> This means that the Titan M2 hardware meets the same rigorous protection guidelines trusted by banks, carriers, and governments.  </p><p>To achieve the certification we went through rigorous third party lab testing by SGS Brightsight, a leading international security lab, and received certification against CC PP0084 with AVA_VAN.5 for the Titan M2 hardware and cryptography library from the Netherlands scheme for Certification in the Area of IT Security (NSCIB).  Of all those numbers and acronyms the part we\u2019re most proud of is that Titan hardware passed the highest level of vulnerability assessment (AVA_VAN.5) - the truest measure of resilience to advanced, methodical attacks. </p><p>This process took us more than three years to complete. The certification not only requires chip hardware to resist invasive penetration testing, but also mandates audits of the chip design and manufacturing process itself.  The benefit for consumers? The now certified Titan M2 chip makes your phone even more resilient to sophisticated attacks.<sup id=\"fnref5\"><a href=\"http://feeds.feedburner.com/GoogleOnlineSecurityBlog#fn5\" rel=\"footnote\">5</a></sup></p><p><strong>Private by design</strong></p><p>Evolving our security and privacy standards to our fast-paced world requires new approaches as well. Earlier this year at I/O, we <a href=\"https://blog.google/technology/safety-security/how-we-make-every-day-safer-with-google/\">introduced Protected Computing</a>, a toolkit of technologies that transforms how, when, and where personal data is processed to protect your privacy and security. Our approach focuses on: </p><ol> <li>Minimizing your data footprint, by shrinking the amount of personally identifiable data altogether  <li>De-identifying data, with a range of anonymization techniques so it\u2019s not linked to you  <li>Restricting data access using technologies like end-to-end encryption and secure enclaves.  </li></ol><p>Many elements of Protected Computing can be found on the new Pixel 7: </p><p>On Android, Private Compute Core keeps your information and AI-driven personalizations private with on-device processing. Data from features like Now Playing, Live Caption and Smart Reply in Messages are all processed on device and are never sent to Google to maintain your privacy.  And even your device backups to the cloud are <a href=\"https://security.googleblog.com/2018/10/google-and-android-have-your-back-by.html\">end-to-end encrypted</a> using Titan in the cloud.<sup id=\"fnref6\"><a href=\"http://feeds.feedburner.com/GoogleOnlineSecurityBlog#fn6\" rel=\"footnote\">6</a></sup>   </p><p>With Google Tensor G2, Pixel\u2019s advanced privacy protection also now covers audio data from events like cough and snore detection on Pixel 7.<sup id=\"fnref7\"><a href=\"http://feeds.feedburner.com/GoogleOnlineSecurityBlog#fn7\" rel=\"footnote\">7</a></sup> Audio data from cough and snore detection is never stored by or sent to Google to maintain your privacy.  </p><p>On Pixel 7, Tensor G2 helps safeguard your system with the <a href=\"https://source.android.com/docs/core/virtualization\">Android Virtualization Framework</a>, unlocking improved security protections like enabling system update integrity checking to occur on-the-fly, reducing boot time after an update.  </p><p><strong>Extra protection when you\u2019re online</strong></p><p>Helping to keep you safe when you use your phone to browse the web and use apps is also critical. This is where a Virtual Private Network (VPN) comes in. A VPN helps protect your online activity from anyone who might try to access it by encrypting your network traffic to turn it into an unreadable format, and masking your original IP address. Typically, if you want a VPN on your phone, you need to get one from a third party. </p><p>To ensure more people have access to enhanced security, later this year, Pixel 7 and Pixel 7 Pro owners will be able to use VPN by Google One, at no extra cost.<sup id=\"fnref8\"><a href=\"http://feeds.feedburner.com/GoogleOnlineSecurityBlog#fn8\" rel=\"footnote\">8</a></sup> <a href=\"https://one.google.com/about/vpn/howitworks\">VPN by Google One</a> is verifiably private, and will allow you to tap into Google\u2019s world-class security for peace of mind when you connect online. With VPN by Google One, Pixel helps protect your online activity at a network level. Think of it like an extra layer of protection for your online security.  </p><p>VPN by Google One creates a high-performance secure connection to the web so your browsing and app data is sent and received via an encrypted pathway. A few simple taps will activate the VPN to help keep your network traffic private from internet providers and hackers, giving you peace of mind when using cellular data, home Wi-Fi, and especially when connected to public networks, like a caf\u00e9 or airport Wi-Fi. No need to worry about online intruders, hackers, or unsecure networks.  </p><p> <div class=\"separator\" style=\"clear: both;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEixLYAdyddPs0T4MgNq-Zgxlat6JywluvS4ucFjzwW_Mx8L6dFJUZNxL9Bql9VUcqiVp4zKCjbvyM9ziy2haRc3dqERPlTgptnQRcjrc5mHadFXpl1EE7LmwehMFIobdGb1GTvKyCAexBZKFKUu9wQyTsL1tvieNiyJANodD7mrwqfZOD9lOSbqAf3WKA/s1600/image_P7P_VPN.jpg\" style=\"display: block; padding: 1em 0; text-align: center;\"><img alt=\"\" border=\"0\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEixLYAdyddPs0T4MgNq-Zgxlat6JywluvS4ucFjzwW_Mx8L6dFJUZNxL9Bql9VUcqiVp4zKCjbvyM9ziy2haRc3dqERPlTgptnQRcjrc5mHadFXpl1EE7LmwehMFIobdGb1GTvKyCAexBZKFKUu9wQyTsL1tvieNiyJANodD7mrwqfZOD9lOSbqAf3WKA/s1600/image_P7P_VPN.jpg\" /></a></div>      </p><p>Unlike traditional VPN services, VPN by Google One uses Protected Computing to technically make it impossible for anyone at a network level, even VPN by Google One, to link your online traffic with your account or identity. VPN by Google One will be available at no extra cost as long as your phone continues to receive security updates. <a href=\"https://support.google.com/googleone/answer/7582172?hl=en&amp;co=GENIE.Platform%3DAndroid\" target=\"_blank\">See here</a> to learn more about VPN by Google One. </p><p><strong>More protection and privacy with Android 13</strong><br /></p><p>Pixel 7 and Pixel 7 Pro have built-in anti-phishing protections from Android that scan for potential threats from phone calls, text messages and emails, and more anti-phishing protections enabled out-of-the-box than smartphones from leading competitors.<sup id=\"fnref9\"><a href=\"http://feeds.feedburner.com/GoogleOnlineSecurityBlog#fn9\" rel=\"footnote\">9</a></sup> In fact, Messages alone protects consumers against <a href=\"https://security.googleblog.com/2022/05/io-2022-android-13-security-and-privacy.html\">1.5 billion spam messages per month</a>. </p><p>Android also resets permissions for apps you haven\u2019t used for an extended time. In a typical month, Android automatically resets more than 3 billion permissions affecting more than 1 billion installed apps. Similarly, if you use clipboard on Android 13, your history is automatically deleted after a period of time. This blocks apps running in the foreground from seeing old information that you previously copied. </p><p><strong>You\u2019re in control</strong></p><p><br />Core to your safety is knowing that you\u2019re in control. You always have control over your settings and devices across all of our products. With Android 13, coming soon through a Feature Drop, Pixel 7 and Pixel 7 Pro will give you additional ways to stay in control of your privacy and what you share with first and third-party apps. With Quick Settings, you can act on security issues as they arise, or review which apps are running in the background and easily stop them. You\u2019ll have a single destination for reviewing your security and privacy settings, risk levels and information, making it easier to manage your safety status.  </p><p> <div class=\"separator\" style=\"clear: both;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhszhPW14qxBvA6-0E1zSIx5L8GXiJqPswYsEHbBnt0mIm8UlVC8SKjhAnPFtxTUThZ3rXF5QSi6F1adzLi5LtD2EzuyO3lkbDRdAXZ-xw4kA9ZedcHc5SJSWQGqUzA0VtUGeANLhaJrGOBw8_yBCTJg6cd6lFbfSqwdnoeopl-b_fxNEMrqPTTRiztZQ/s944/Security%20and%20privacy%20settings%20%281%29.gif\" style=\"display: block; padding: 1em 0; text-align: center;\"><img alt=\"\" border=\"0\" height=\"400\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhszhPW14qxBvA6-0E1zSIx5L8GXiJqPswYsEHbBnt0mIm8UlVC8SKjhAnPFtxTUThZ3rXF5QSi6F1adzLi5LtD2EzuyO3lkbDRdAXZ-xw4kA9ZedcHc5SJSWQGqUzA0VtUGeANLhaJrGOBw8_yBCTJg6cd6lFbfSqwdnoeopl-b_fxNEMrqPTTRiztZQ/s400/Security%20and%20privacy%20settings%20%281%29.gif\" /></a></div>   </p><p>With this new experience, you can review actionable steps to improve your safety status, like revoking a permission or app. This page will also have new action cards to notify you of any safety risks and provide timely recommendations on how to enhance your privacy. And with a single tap, you can grant or remove permissions to data that you don\u2019t want to share with compatible apps. This will be coming soon first to Pixel devices later this year, and other Android phones soon after. </p><p><strong>Verifiably secure </strong></p><p>As computing extends to more devices and use cases, Google is committed to innovating in security and being transparent about the processes that we take to get there. We are leading the industry in verifiable security by not only having products that are tested against real-world threats (like advanced spam, phishing and malware attacks), but also in publishing the results of penetration tests, security audits, and industry certifications across our <a href=\"https://g.co/pixel/certifications\">Pixel</a> and <a href=\"https://support.google.com/product-documentation/answer/10231940\">Nest</a> products. </p><p>Another way to verify our security is through our Android and Google Devices Security Reward Program where we reward security researchers who find vulnerabilities across products, including Pixel, Nest and Fitbit. Last year on Android, we <a href=\"https://security.googleblog.com/2022/02/vulnerability-reward-program-2021-year.html\">awarded nearly $3 million dollars</a>, creating a valuable feedback loop between us and the security research community and, most importantly, helping us keep our users safe.           </p><p>To learn more about Pixel 7 and Pixel 7 Pro, check out the <a href=\"https://store.google.com/category/phones?hl=en-US\">Google Store</a>. </p> <!-- Footnotes themselves at the bottom. --> <h2>Notes</h2><div class=\"footnotes\"><hr /><ol><li id=\"fn1\"><p>     Based on third-party global research firm. Evaluation considered features that may not be available in all countries. See <a href=\"https://omdia.tech.informa.com/commissioned-research/articles/mobile-device-security-2022-annual-buyers-scorecard-assessing-the-security-of-leading-mobile-devices\">here</a> for more information. &nbsp;<a href=\"http://feeds.feedburner.com/GoogleOnlineSecurityBlog#fnref1\" rev=\"footnote\">&#8617;</a><li id=\"fn2\"><p>     <sup> </sup>Android version updates and feature drops for at least 3 years from when the device first became available on the Google Store in the US. Android security updates for at least 5 years from when the device first became available on the Google Store in the US. See g.co/pixel/updates for details.&nbsp;<a href=\"http://feeds.feedburner.com/GoogleOnlineSecurityBlog#fnref2\" rev=\"footnote\">&#8617;</a><li id=\"fn3\"><p>     Compared to Pixel 6. Speed and efficiency claims based on internal testing on pre-production devices. &nbsp;<a href=\"http://feeds.feedburner.com/GoogleOnlineSecurityBlog#fnref3\" rev=\"footnote\">&#8617;</a><li id=\"fn4\"><p>     Common Criteria certification for hardware and cryptographic library (CC PP0084 EAL4+, AVA_VAN.5 and ALC_DVS.2). See g.co/pixel/certifications for details.&nbsp;<a href=\"http://feeds.feedburner.com/GoogleOnlineSecurityBlog#fnref4\" rev=\"footnote\">&#8617;</a><li id=\"fn5\"><p>     Compared to Pixel 5a and earlier Pixel phones. &nbsp;<a href=\"http://feeds.feedburner.com/GoogleOnlineSecurityBlog#fnref5\" rev=\"footnote\">&#8617;</a><li id=\"fn6\"><p>     Excludes MMS attachments and Google Photos.&nbsp;<a href=\"http://feeds.feedburner.com/GoogleOnlineSecurityBlog#fnref6\" rev=\"footnote\">&#8617;</a><li id=\"fn7\"><p>     <strong> </strong>Not intended to diagnose, cure, mitigate, prevent or treat any disease or condition. Consult your healthcare professional if you have questions about your health. See g.co/pixel/digitalwellbeing for more information. &nbsp;<a href=\"http://feeds.feedburner.com/GoogleOnlineSecurityBlog#fnref7\" rev=\"footnote\">&#8617;</a><li id=\"fn8\"><p>     Coming soon. Restrictions apply. Some data is not transmitted through VPN. Not available in all countries. All other Google One membership benefits sold separately. This VPN offer does not impact price or benefits of Google One  Premium plan. Use of VPN may increase data costs depending on your plan. See g.co/pixel/vpn for details.&nbsp;<a href=\"http://feeds.feedburner.com/GoogleOnlineSecurityBlog#fnref8\" rev=\"footnote\">&#8617;</a><li id=\"fn9\"><p>     Based on third-party research funded by Google LLC in June 2022. Evaluation based on no-cost smartphone features enabled by default. Some features may not be available in all countries. See <a href=\"https://www.leviathansecurity.com/media/5fajnujsa8tzkdf5sznnw0utdvqd9g-tgwn4-pp73e\">here</a> for more information.&nbsp;<a href=\"http://feeds.feedburner.com/GoogleOnlineSecurityBlog#fnref9\" rev=\"footnote\">&#8617;</a> </ol></div>",
            "links": [
                {
                    "href": "http://security.googleblog.com/feeds/8888529176620158656/comments/default",
                    "rel": "replies",
                    "title": "Post Comments",
                    "type": "application/atom+xml"
                },
                {
                    "href": "http://www.blogger.com/comment.g?blogID=1176949257541686127&postID=8888529176620158656&isPopup=true",
                    "rel": "replies",
                    "title": "0 Comments",
                    "type": "text/html"
                },
                {
                    "href": "http://www.blogger.com/feeds/1176949257541686127/posts/default/8888529176620158656",
                    "rel": "edit",
                    "type": "application/atom+xml"
                },
                {
                    "href": "http://www.blogger.com/feeds/1176949257541686127/posts/default/8888529176620158656",
                    "rel": "self",
                    "type": "application/atom+xml"
                },
                {
                    "href": "http://security.googleblog.com/2022/10/google-pixel-7-and-pixel-7-pro-next.html",
                    "rel": "alternate",
                    "title": "Google Pixel 7 and Pixel 7 Pro: The next evolution in mobile security",
                    "type": "text/html"
                }
            ],
            "authors": [
                {
                    "name": "Edward Fernandez",
                    "href": "http://www.blogger.com/profile/03784424747198152685",
                    "email": "noreply@blogger.com"
                }
            ],
            "author_detail": {
                "name": "Edward Fernandez",
                "href": "http://www.blogger.com/profile/03784424747198152685",
                "email": "noreply@blogger.com"
            },
            "href": "",
            "author": "Edward Fernandez (noreply@blogger.com)",
            "gd_image": {
                "height": "16",
                "rel": "http://schemas.google.com/g/2005#thumbnail",
                "src": "https://img1.blogblog.com/img/b16-rounded.gif",
                "width": "16"
            },
            "media_thumbnail": [
                {
                    "height": "72",
                    "url": "https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEggAnSsDEwcnzxZ_CBRosEw8rzu5l27OQXjqQ3yS0bQ96h0Gt-4OKxF9e81zd0NSHDoPwRxOHj3L0CFamDm_3ROfLsQQw-zvHEWfO2UyOyAWep-sQJqkVkc2ThW-gSdpn4cqbyiXWR0PciKdTL8sBFUM0jVBq-Neo9FK32TyiFfaE9MjyKjAqiNLPdcBQ/s72-c/google_de22_thumbnails_tensor_light_1156x578.png",
                    "width": "72"
                }
            ],
            "thr_total": "0"
        },
        {
            "id": "tag:blogger.com,1999:blog-1176949257541686127.post-3294366029953017136",
            "guidislink": true,
            "link": "http://security.googleblog.com/2022/09/use-after-freedom-miracleptr.html",
            "published": "2022-09-13T12:59:00.000-04:00",
            "published_parsed": [
                2022,
                9,
                13,
                16,
                59,
                0,
                1,
                256,
                0
            ],
            "updated": "2022-09-13T12:59:14.644-04:00",
            "updated_parsed": [
                2022,
                9,
                13,
                16,
                59,
                14,
                1,
                256,
                0
            ],
            "tags": [
                {
                    "term": "chrome",
                    "scheme": "http://www.blogger.com/atom/ns#",
                    "label": null
                },
                {
                    "term": "chrome security",
                    "scheme": "http://www.blogger.com/atom/ns#",
                    "label": null
                }
            ],
            "title": "Use-after-freedom: MiraclePtr",
            "title_detail": {
                "type": "text/plain",
                "language": null,
                "base": "http://feeds.feedburner.com/GoogleOnlineSecurityBlog",
                "value": "Use-after-freedom: MiraclePtr"
            },
            "content": [
                {
                    "type": "text/html",
                    "language": null,
                    "base": "http://feeds.feedburner.com/GoogleOnlineSecurityBlog",
                    "value": "<span class=\"byline-author\"> Posted by Adrian Taylor, Bartek Nowierski and Kentaro Hara on behalf of the MiraclePtr team</span> <p>Memory safety bugs are the most numerous category of Chrome security issues and we\u2019re continuing to <a href=\"https://security.googleblog.com/2021/09/an-update-on-memory-safety-in-chrome.html\">investigate many solutions</a> \u2013 both in C++ and in new programming languages. The most common type of memory safety bug is the \u201cuse-after-free\u201d. We <a href=\"https://security.googleblog.com/2022/05/retrofitting-temporal-memory-safety-on-c.html\">recently posted about</a> an exciting series of technologies designed to prevent these. Those technologies (collectively, *Scan, pronounced \u201cstar scan\u201d) are very powerful but likely require hardware support for sufficient performance. </p><p>Today we\u2019re going to talk about a different approach to solving the same type of bugs. </p><p>It\u2019s hard, if not impossible, to avoid use-after-frees in a non-trivial codebase. It\u2019s rarely a mistake by a single programmer. Instead, one programmer makes reasonable assumptions about how a bit of code will work, then a later change invalidates those assumptions. Suddenly, the data isn\u2019t valid as long as the original programmer expected, and an exploitable bug results. </p><p>These bugs have real consequences. For example, according to Google Threat Analysis Group, a <a href=\"https://crbug.com/1296150\">use-after-free in the ChromeHTML engine</a> was <a href=\"https://blog.google/threat-analysis-group/countering-threats-north-korea/\">exploited this year</a> by North Korea. </p><p>Half of the known exploitable bugs in Chrome are use-after-frees:  <div class=\"separator\" style=\"clear: both;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjol0tDHrKfloO3-RsAhVwMGPRBFmg8FmM2nMbHfA4kPTHu4PVaoqFAkdKXkE63ePSIC4U4rH8pMSa8FfLYY-0CdahMPzcP_GqoILj0bBtquIwVuf-oLRpnZqe6cNBgTHv6LPnM_l1YrkqPHote0DMbIkYy7BZjDiZITG2u05T9YoxV6OqhnonD1TlY9g/s512/bug%20types.png\" style=\"display: block; padding: 1em 0; text-align: center;\"><img alt=\"\" border=\"0\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjol0tDHrKfloO3-RsAhVwMGPRBFmg8FmM2nMbHfA4kPTHu4PVaoqFAkdKXkE63ePSIC4U4rH8pMSa8FfLYY-0CdahMPzcP_GqoILj0bBtquIwVuf-oLRpnZqe6cNBgTHv6LPnM_l1YrkqPHote0DMbIkYy7BZjDiZITG2u05T9YoxV6OqhnonD1TlY9g/s600/bug%20types.png\" width=\"600\" /></a></div> <p><strong>Diving Deeper: Not All Use-After-Free Bugs Are Equal</strong>  </p><p>Chrome has a <a href=\"https://www.chromium.org/developers/design-documents/multi-process-architecture/\">multi-process architecture</a>, partly to ensure that web content is isolated into a sandboxed \u201crenderer\u201d process where little harm can occur. An attacker therefore usually needs to find and exploit <em>two</em> vulnerabilities - one to achieve code execution in the renderer process, and another bug to break out of the sandbox. </p><p>The first stage is often the easier one. The attacker has lots of influence in the renderer process. It\u2019s easy to arrange memory in a specific way, and the renderer process acts upon many different kinds of web content, giving a large \u201cattack surface\u201d that could potentially be exploited. </p><p>The second stage, escaping the renderer sandbox, is trickier. Attackers have two options how to do this: </p><ol> <li>They can exploit a bug in the underlying operating system (OS) through the limited interfaces available inside Chrome\u2019s sandbox.  <li>Or, they can exploit a bug in a more powerful, privileged part of Chrome - like the \u201cbrowser\u201d process. This process coordinates all the other bits of Chrome, so fundamentally <em>has</em> to be all-powerful. </li></ol><p>We imagine the attackers squeezing through the narrow part of a funnel:  <div class=\"separator\" style=\"clear: both;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjrD_PVCwSIrVn0tVWBs7b0PueDknbg8BrwznIfKHmYqgNFlGuVupFVZaPMSO9uoj4QawGujzyOS42-Nsemdl9AXD3gOaUFeqnBkhVd0Aem99UK5C9bt6trfnF_4UplnWFdXUrXfM-P4QvnZq81lrsz8o7M6QLZaKzSSLm7_ni10BPT2xaLSyhITCHE9A/s1600/Screenshot%202022-09-13%207.28.31%20AM.png\" style=\"display: block; padding: 1em 0; text-align: center;\"><img alt=\"\" border=\"0\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjrD_PVCwSIrVn0tVWBs7b0PueDknbg8BrwznIfKHmYqgNFlGuVupFVZaPMSO9uoj4QawGujzyOS42-Nsemdl9AXD3gOaUFeqnBkhVd0Aem99UK5C9bt6trfnF_4UplnWFdXUrXfM-P4QvnZq81lrsz8o7M6QLZaKzSSLm7_ni10BPT2xaLSyhITCHE9A/s1600/Screenshot%202022-09-13%207.28.31%20AM.png\" /></a></div> If we can reduce the size of the narrow part of the funnel, we will make it as hard as possible for attackers to assemble a full exploit chain. We can reduce the size of the orange slice by removing access to more OS interfaces within the renderer process sandbox, and we\u2019re continuously working on that. The MiraclePtr project aims to reduce the size of the blue slice. </p><p>Here\u2019s a sample of 100 recent high severity Chrome security bugs that made it to the stable channel, divided by root cause and by the process they affect. </p><p> <div class=\"separator\" style=\"clear: both;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjNa-V0mokSe10I_waRxQNuH_GNg6kqPyAszlWZ2EqMIgiySJcLWQ_FQQYSCl5dnF-u7acqGaqNE1bKXKJGG9b2GKKzIDMrKQWPhJWdp-0Te2HZYOecDVpLJXamMCzdO8ErcezDkFly1D19YlPrPHDHDf01O8GisMqoCOnfsAK8jWl9W8_JeUDJglHLNw/s512/bugs%20chart%202.png\" style=\"display: block; padding: 1em 0; text-align: center;\"><img alt=\"\" border=\"0\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjNa-V0mokSe10I_waRxQNuH_GNg6kqPyAszlWZ2EqMIgiySJcLWQ_FQQYSCl5dnF-u7acqGaqNE1bKXKJGG9b2GKKzIDMrKQWPhJWdp-0Te2HZYOecDVpLJXamMCzdO8ErcezDkFly1D19YlPrPHDHDf01O8GisMqoCOnfsAK8jWl9W8_JeUDJglHLNw/s600/bugs%20chart%202.png\" width=\"600\" /></a></div></p><p>You might notice: </p><ul> <li>This doesn\u2019t quite add up to 100 - that\u2019s because a few bugs were in other processes beyond the renderer or browser.  <li>We claimed that the browser process is the more difficult part to exploit, yet there are more potentially-exploitable bugs! That may be so, but we believe they are typically harder to exploit because the attacker has less control over memory layout. </li></ul><p>As you can see, the biggest category of bugs in each process is: V8 in the renderer process (JavaScript engine logic bugs - <a href=\"https://docs.google.com/document/d/1FM4fQmIhEqPG8uGp5o9A-mnPB5BOeScZYpkHjo0KKA8/edit\">work in progress</a>) and use-after-free bugs in the browser process. If we can make that \u201cthin\u201d bit thinner still by removing some of those use-after-free bugs, we make the whole job of Chrome exploitation markedly harder. </p><p><strong>MiraclePtr: Preventing Exploitation of Use-After-Free Bugs</strong></p><p>This is where <a href=\"https://docs.google.com/document/d/1pnnOAIz_DMWDI4oIOFoMAqLnf_MZ2GsrJNb_dbQ3ZBg/edit\">MiraclePtr</a> comes in. It is a technology to prevent exploitation of use-after-free bugs. Unlike aforementioned *Scan technologies that offer a non-invasive approach to this problem, MiraclePtr relies on rewriting the codebase to use a new smart pointer type, <a href=\"https://chromium.googlesource.com/chromium/src/+/main/base/memory/raw_ptr.md\">raw_ptr&lt;T></a>. There are multiple ways to implement MiraclePtr. We came up with <a href=\"https://docs.google.com/document/d/1qsPh8Bcrma7S-5fobbCkBkXWaAijXOnorEqvIIGKzc0/edit\">~10 algorithms</a> and compared the pros and cons. After analyzing their performance overhead, memory overhead, security protection guarantees, developer ergonomics, etc., we concluded that BackupRefPtr was the most promising solution. </p><p><div class=\"separator\" style=\"clear: both;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhqjNDqH-vs-iOJi4MZ8xgPNPFQin31tNdn0Ixh2w9wEKgTWB0KDsRBFg47IRrLsZ1BMSFAY0a1rmCUf5ETwzhUicglI4S9Lq6ue9h0UiK9vXX5WF6ZPVdEFSvDMGQOsLJ6MI0ZlyRbMCkd58hLxNBOy5FobolQUuyj7o6gYA2lZFDLt9QO_VLTpLJ1cA/s512/raw1.png\" style=\"display: block; padding: 1em 0; text-align: center;\"><img alt=\"\" border=\"0\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhqjNDqH-vs-iOJi4MZ8xgPNPFQin31tNdn0Ixh2w9wEKgTWB0KDsRBFg47IRrLsZ1BMSFAY0a1rmCUf5ETwzhUicglI4S9Lq6ue9h0UiK9vXX5WF6ZPVdEFSvDMGQOsLJ6MI0ZlyRbMCkd58hLxNBOy5FobolQUuyj7o6gYA2lZFDLt9QO_VLTpLJ1cA/s200/raw1.png\" width=\"200\" /></a></div>      The BackupRefPtr algorithm is based on reference counting. It uses support of Chrome's own heap allocator, <a href=\"https://chromium.googlesource.com/chromium/src/+/main/base/allocator/partition_allocator/PartitionAlloc.md\">PartitionAlloc</a>, which carves out a little extra space for a hidden reference count for each allocation. raw_ptr&lt;T> increments or decrements the reference count when it\u2019s constructed, destroyed or modified. When the application calls free/delete and the reference count is greater than 0, PartitionAlloc quarantines that memory region instead of immediately releasing it. The memory region is then only made available for reuse once the reference count reaches 0. Quarantined memory is poisoned to further reduce the likelihood that use-after-free accesses will result in exploitable conditions, and in hope that future accesses lead to an easy-to-debug crash, turning these security issues into less-dangerous ones. </p>   <pre class=\"prettyprint\">class A { ... };<br />class B {<br />  B(A* a) : a_(a) {}<br />  void doSomething() { a_->doSomething(); }<br />  raw_ptr&lt;A> a_;  // MiraclePtr<br />};<br /><br />std::unique_ptr&lt;A> a = std::make_unique&lt;A>();<br />std::unique_ptr&lt;B> b = std::make_unique&lt;B>(a.get());<br />[\u2026]<br />a = nullptr;  // The free is delayed because the MiraclePtr is still pointing to the object.<br />b->doSomething();  // Use-after-free is neutralized.</pre>  <p>We successfully <a href=\"https://chromium-review.googlesource.com/c/chromium/src/+/3305132\">rewrote more than 15,000 raw pointers</a> in the Chrome codebase into raw_ptr&lt;T>, then enabled BackupRefPtr for the browser process on Windows and Android (both 64 bit and 32 bit) in Chrome 102 Stable. We anticipate that MiraclePtr meaningfully reduces the browser process attack surface of Chrome by protecting ~50% of use-after-free issues against exploitation. We are now working on enabling BackupRefPtr in the network, utility and GPU processes, and for other platforms. In the end state, our goal is to enable BackupRefPtr on <em>all</em> platforms because that ensures that a given pointer is protected for <em>all</em> users of Chrome. </p><p><strong>Balancing Security and Performance</strong></p><p>There is no free lunch, however. This security protection comes at a cost, which we have carefully weighed in our decision making.  </p><p>Unsurprisingly, the main cost is memory. Luckily, related investments into PartitionAlloc over the past year led to 10-25% total memory savings, depending on usage patterns and platforms. So we were able to spend some of those savings on security: MiraclePtr increased the memory usage of the browser process 4.5-6.5% on Windows and 3.5-5% on Android<sup>1</sup>, still well below their previous levels. While we were worried about quarantined memory, in practice this is a tiny fraction (0.01%) of the browser process usage. By far the bigger culprit is the additional memory needed to store the reference count. One might think that adding 4 bytes to each allocation wouldn\u2019t be a big deal. However, there are many small allocations in Chrome, so even the 4B overhead is not negligible. PartitionAlloc also uses pre-defined bucket sizes, so this extra 4B pushes certain allocations (particularly power-of-2 sized) into a larger bucket, e.g. 4096B->5120B. </p><p>We also considered the performance cost. Adding an atomic increment/decrement on common operations such as pointer assignment has unavoidable overhead. Having excluded a number of performance-critical pointers, we drove this overhead down until we could gain back the same margin through other performance optimizations. On Windows, no statistically significant performance regressions were observed on most of our top-level performance metrics like Largest Contentful Paint, First Input Delay, etc. The only adverse change there<sup>1</sup> is an increase of the main thread contention (~7%). On Android<sup>1</sup>, in addition to a similar increase in the main thread contention (~6%), there were small regressions in First Input Delay (~1%), Input Delay (~3%) and First Contentful Paint (~0.5%). We don't anticipate these regressions to have a noticeable impact on user experience, and are confident that they are strongly outweighed by the additional safety for our users.  </p><p>We should emphasize that MiraclePtr currently protects only class/struct pointer fields, to minimize the overhead. As future work, we are exploring options to expand the pointer coverage to on-stack pointers so that we can protect against more use-after-free bugs. </p><p>Note that the primary goal of MiraclePtr is to prevent exploitation of use-after-free bugs. Although it wasn\u2019t designed for diagnosability, it already helped us find and fix a number of bugs that were previously undetected. We have ongoing efforts to make MiraclePtr crash reports even more informative and actionable. </p><p><strong>Continue to Provide Us Feedback</strong></p><p>Last but not least, we\u2019d like to encourage security researchers to continue to report issues through the <a href=\"https://g.co/ChromeBugRewards\">Chrome Vulnerability Reward Program</a>, even if those issues are mitigated by MiraclePtr. We still need to make MiraclePtr available to all users, collect more data on its impact through reported issues, and further refine our processes and tooling. Until that is done, we will not consider MiraclePtr when determining the severity of a bug or the reward amount. </p><p><sup>1</sup> Measured in Chrome 99. </p>"
                }
            ],
            "summary": "<span class=\"byline-author\"> Posted by Adrian Taylor, Bartek Nowierski and Kentaro Hara on behalf of the MiraclePtr team</span> <p>Memory safety bugs are the most numerous category of Chrome security issues and we\u2019re continuing to <a href=\"https://security.googleblog.com/2021/09/an-update-on-memory-safety-in-chrome.html\">investigate many solutions</a> \u2013 both in C++ and in new programming languages. The most common type of memory safety bug is the \u201cuse-after-free\u201d. We <a href=\"https://security.googleblog.com/2022/05/retrofitting-temporal-memory-safety-on-c.html\">recently posted about</a> an exciting series of technologies designed to prevent these. Those technologies (collectively, *Scan, pronounced \u201cstar scan\u201d) are very powerful but likely require hardware support for sufficient performance. </p><p>Today we\u2019re going to talk about a different approach to solving the same type of bugs. </p><p>It\u2019s hard, if not impossible, to avoid use-after-frees in a non-trivial codebase. It\u2019s rarely a mistake by a single programmer. Instead, one programmer makes reasonable assumptions about how a bit of code will work, then a later change invalidates those assumptions. Suddenly, the data isn\u2019t valid as long as the original programmer expected, and an exploitable bug results. </p><p>These bugs have real consequences. For example, according to Google Threat Analysis Group, a <a href=\"https://crbug.com/1296150\">use-after-free in the ChromeHTML engine</a> was <a href=\"https://blog.google/threat-analysis-group/countering-threats-north-korea/\">exploited this year</a> by North Korea. </p><p>Half of the known exploitable bugs in Chrome are use-after-frees:  <div class=\"separator\" style=\"clear: both;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjol0tDHrKfloO3-RsAhVwMGPRBFmg8FmM2nMbHfA4kPTHu4PVaoqFAkdKXkE63ePSIC4U4rH8pMSa8FfLYY-0CdahMPzcP_GqoILj0bBtquIwVuf-oLRpnZqe6cNBgTHv6LPnM_l1YrkqPHote0DMbIkYy7BZjDiZITG2u05T9YoxV6OqhnonD1TlY9g/s512/bug%20types.png\" style=\"display: block; padding: 1em 0; text-align: center;\"><img alt=\"\" border=\"0\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjol0tDHrKfloO3-RsAhVwMGPRBFmg8FmM2nMbHfA4kPTHu4PVaoqFAkdKXkE63ePSIC4U4rH8pMSa8FfLYY-0CdahMPzcP_GqoILj0bBtquIwVuf-oLRpnZqe6cNBgTHv6LPnM_l1YrkqPHote0DMbIkYy7BZjDiZITG2u05T9YoxV6OqhnonD1TlY9g/s600/bug%20types.png\" width=\"600\" /></a></div> <p><strong>Diving Deeper: Not All Use-After-Free Bugs Are Equal</strong>  </p><p>Chrome has a <a href=\"https://www.chromium.org/developers/design-documents/multi-process-architecture/\">multi-process architecture</a>, partly to ensure that web content is isolated into a sandboxed \u201crenderer\u201d process where little harm can occur. An attacker therefore usually needs to find and exploit <em>two</em> vulnerabilities - one to achieve code execution in the renderer process, and another bug to break out of the sandbox. </p><p>The first stage is often the easier one. The attacker has lots of influence in the renderer process. It\u2019s easy to arrange memory in a specific way, and the renderer process acts upon many different kinds of web content, giving a large \u201cattack surface\u201d that could potentially be exploited. </p><p>The second stage, escaping the renderer sandbox, is trickier. Attackers have two options how to do this: </p><ol> <li>They can exploit a bug in the underlying operating system (OS) through the limited interfaces available inside Chrome\u2019s sandbox.  <li>Or, they can exploit a bug in a more powerful, privileged part of Chrome - like the \u201cbrowser\u201d process. This process coordinates all the other bits of Chrome, so fundamentally <em>has</em> to be all-powerful. </li></ol><p>We imagine the attackers squeezing through the narrow part of a funnel:  <div class=\"separator\" style=\"clear: both;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjrD_PVCwSIrVn0tVWBs7b0PueDknbg8BrwznIfKHmYqgNFlGuVupFVZaPMSO9uoj4QawGujzyOS42-Nsemdl9AXD3gOaUFeqnBkhVd0Aem99UK5C9bt6trfnF_4UplnWFdXUrXfM-P4QvnZq81lrsz8o7M6QLZaKzSSLm7_ni10BPT2xaLSyhITCHE9A/s1600/Screenshot%202022-09-13%207.28.31%20AM.png\" style=\"display: block; padding: 1em 0; text-align: center;\"><img alt=\"\" border=\"0\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjrD_PVCwSIrVn0tVWBs7b0PueDknbg8BrwznIfKHmYqgNFlGuVupFVZaPMSO9uoj4QawGujzyOS42-Nsemdl9AXD3gOaUFeqnBkhVd0Aem99UK5C9bt6trfnF_4UplnWFdXUrXfM-P4QvnZq81lrsz8o7M6QLZaKzSSLm7_ni10BPT2xaLSyhITCHE9A/s1600/Screenshot%202022-09-13%207.28.31%20AM.png\" /></a></div> If we can reduce the size of the narrow part of the funnel, we will make it as hard as possible for attackers to assemble a full exploit chain. We can reduce the size of the orange slice by removing access to more OS interfaces within the renderer process sandbox, and we\u2019re continuously working on that. The MiraclePtr project aims to reduce the size of the blue slice. </p><p>Here\u2019s a sample of 100 recent high severity Chrome security bugs that made it to the stable channel, divided by root cause and by the process they affect. </p><p> <div class=\"separator\" style=\"clear: both;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjNa-V0mokSe10I_waRxQNuH_GNg6kqPyAszlWZ2EqMIgiySJcLWQ_FQQYSCl5dnF-u7acqGaqNE1bKXKJGG9b2GKKzIDMrKQWPhJWdp-0Te2HZYOecDVpLJXamMCzdO8ErcezDkFly1D19YlPrPHDHDf01O8GisMqoCOnfsAK8jWl9W8_JeUDJglHLNw/s512/bugs%20chart%202.png\" style=\"display: block; padding: 1em 0; text-align: center;\"><img alt=\"\" border=\"0\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjNa-V0mokSe10I_waRxQNuH_GNg6kqPyAszlWZ2EqMIgiySJcLWQ_FQQYSCl5dnF-u7acqGaqNE1bKXKJGG9b2GKKzIDMrKQWPhJWdp-0Te2HZYOecDVpLJXamMCzdO8ErcezDkFly1D19YlPrPHDHDf01O8GisMqoCOnfsAK8jWl9W8_JeUDJglHLNw/s600/bugs%20chart%202.png\" width=\"600\" /></a></div></p><p>You might notice: </p><ul> <li>This doesn\u2019t quite add up to 100 - that\u2019s because a few bugs were in other processes beyond the renderer or browser.  <li>We claimed that the browser process is the more difficult part to exploit, yet there are more potentially-exploitable bugs! That may be so, but we believe they are typically harder to exploit because the attacker has less control over memory layout. </li></ul><p>As you can see, the biggest category of bugs in each process is: V8 in the renderer process (JavaScript engine logic bugs - <a href=\"https://docs.google.com/document/d/1FM4fQmIhEqPG8uGp5o9A-mnPB5BOeScZYpkHjo0KKA8/edit\">work in progress</a>) and use-after-free bugs in the browser process. If we can make that \u201cthin\u201d bit thinner still by removing some of those use-after-free bugs, we make the whole job of Chrome exploitation markedly harder. </p><p><strong>MiraclePtr: Preventing Exploitation of Use-After-Free Bugs</strong></p><p>This is where <a href=\"https://docs.google.com/document/d/1pnnOAIz_DMWDI4oIOFoMAqLnf_MZ2GsrJNb_dbQ3ZBg/edit\">MiraclePtr</a> comes in. It is a technology to prevent exploitation of use-after-free bugs. Unlike aforementioned *Scan technologies that offer a non-invasive approach to this problem, MiraclePtr relies on rewriting the codebase to use a new smart pointer type, <a href=\"https://chromium.googlesource.com/chromium/src/+/main/base/memory/raw_ptr.md\">raw_ptr&lt;T></a>. There are multiple ways to implement MiraclePtr. We came up with <a href=\"https://docs.google.com/document/d/1qsPh8Bcrma7S-5fobbCkBkXWaAijXOnorEqvIIGKzc0/edit\">~10 algorithms</a> and compared the pros and cons. After analyzing their performance overhead, memory overhead, security protection guarantees, developer ergonomics, etc., we concluded that BackupRefPtr was the most promising solution. </p><p><div class=\"separator\" style=\"clear: both;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhqjNDqH-vs-iOJi4MZ8xgPNPFQin31tNdn0Ixh2w9wEKgTWB0KDsRBFg47IRrLsZ1BMSFAY0a1rmCUf5ETwzhUicglI4S9Lq6ue9h0UiK9vXX5WF6ZPVdEFSvDMGQOsLJ6MI0ZlyRbMCkd58hLxNBOy5FobolQUuyj7o6gYA2lZFDLt9QO_VLTpLJ1cA/s512/raw1.png\" style=\"display: block; padding: 1em 0; text-align: center;\"><img alt=\"\" border=\"0\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhqjNDqH-vs-iOJi4MZ8xgPNPFQin31tNdn0Ixh2w9wEKgTWB0KDsRBFg47IRrLsZ1BMSFAY0a1rmCUf5ETwzhUicglI4S9Lq6ue9h0UiK9vXX5WF6ZPVdEFSvDMGQOsLJ6MI0ZlyRbMCkd58hLxNBOy5FobolQUuyj7o6gYA2lZFDLt9QO_VLTpLJ1cA/s200/raw1.png\" width=\"200\" /></a></div>      The BackupRefPtr algorithm is based on reference counting. It uses support of Chrome's own heap allocator, <a href=\"https://chromium.googlesource.com/chromium/src/+/main/base/allocator/partition_allocator/PartitionAlloc.md\">PartitionAlloc</a>, which carves out a little extra space for a hidden reference count for each allocation. raw_ptr&lt;T> increments or decrements the reference count when it\u2019s constructed, destroyed or modified. When the application calls free/delete and the reference count is greater than 0, PartitionAlloc quarantines that memory region instead of immediately releasing it. The memory region is then only made available for reuse once the reference count reaches 0. Quarantined memory is poisoned to further reduce the likelihood that use-after-free accesses will result in exploitable conditions, and in hope that future accesses lead to an easy-to-debug crash, turning these security issues into less-dangerous ones. </p>   <pre class=\"prettyprint\">class A { ... };<br />class B {<br />  B(A* a) : a_(a) {}<br />  void doSomething() { a_->doSomething(); }<br />  raw_ptr&lt;A> a_;  // MiraclePtr<br />};<br /><br />std::unique_ptr&lt;A> a = std::make_unique&lt;A>();<br />std::unique_ptr&lt;B> b = std::make_unique&lt;B>(a.get());<br />[\u2026]<br />a = nullptr;  // The free is delayed because the MiraclePtr is still pointing to the object.<br />b->doSomething();  // Use-after-free is neutralized.</pre>  <p>We successfully <a href=\"https://chromium-review.googlesource.com/c/chromium/src/+/3305132\">rewrote more than 15,000 raw pointers</a> in the Chrome codebase into raw_ptr&lt;T>, then enabled BackupRefPtr for the browser process on Windows and Android (both 64 bit and 32 bit) in Chrome 102 Stable. We anticipate that MiraclePtr meaningfully reduces the browser process attack surface of Chrome by protecting ~50% of use-after-free issues against exploitation. We are now working on enabling BackupRefPtr in the network, utility and GPU processes, and for other platforms. In the end state, our goal is to enable BackupRefPtr on <em>all</em> platforms because that ensures that a given pointer is protected for <em>all</em> users of Chrome. </p><p><strong>Balancing Security and Performance</strong></p><p>There is no free lunch, however. This security protection comes at a cost, which we have carefully weighed in our decision making.  </p><p>Unsurprisingly, the main cost is memory. Luckily, related investments into PartitionAlloc over the past year led to 10-25% total memory savings, depending on usage patterns and platforms. So we were able to spend some of those savings on security: MiraclePtr increased the memory usage of the browser process 4.5-6.5% on Windows and 3.5-5% on Android<sup>1</sup>, still well below their previous levels. While we were worried about quarantined memory, in practice this is a tiny fraction (0.01%) of the browser process usage. By far the bigger culprit is the additional memory needed to store the reference count. One might think that adding 4 bytes to each allocation wouldn\u2019t be a big deal. However, there are many small allocations in Chrome, so even the 4B overhead is not negligible. PartitionAlloc also uses pre-defined bucket sizes, so this extra 4B pushes certain allocations (particularly power-of-2 sized) into a larger bucket, e.g. 4096B->5120B. </p><p>We also considered the performance cost. Adding an atomic increment/decrement on common operations such as pointer assignment has unavoidable overhead. Having excluded a number of performance-critical pointers, we drove this overhead down until we could gain back the same margin through other performance optimizations. On Windows, no statistically significant performance regressions were observed on most of our top-level performance metrics like Largest Contentful Paint, First Input Delay, etc. The only adverse change there<sup>1</sup> is an increase of the main thread contention (~7%). On Android<sup>1</sup>, in addition to a similar increase in the main thread contention (~6%), there were small regressions in First Input Delay (~1%), Input Delay (~3%) and First Contentful Paint (~0.5%). We don't anticipate these regressions to have a noticeable impact on user experience, and are confident that they are strongly outweighed by the additional safety for our users.  </p><p>We should emphasize that MiraclePtr currently protects only class/struct pointer fields, to minimize the overhead. As future work, we are exploring options to expand the pointer coverage to on-stack pointers so that we can protect against more use-after-free bugs. </p><p>Note that the primary goal of MiraclePtr is to prevent exploitation of use-after-free bugs. Although it wasn\u2019t designed for diagnosability, it already helped us find and fix a number of bugs that were previously undetected. We have ongoing efforts to make MiraclePtr crash reports even more informative and actionable. </p><p><strong>Continue to Provide Us Feedback</strong></p><p>Last but not least, we\u2019d like to encourage security researchers to continue to report issues through the <a href=\"https://g.co/ChromeBugRewards\">Chrome Vulnerability Reward Program</a>, even if those issues are mitigated by MiraclePtr. We still need to make MiraclePtr available to all users, collect more data on its impact through reported issues, and further refine our processes and tooling. Until that is done, we will not consider MiraclePtr when determining the severity of a bug or the reward amount. </p><p><sup>1</sup> Measured in Chrome 99. </p>",
            "links": [
                {
                    "href": "http://security.googleblog.com/feeds/3294366029953017136/comments/default",
                    "rel": "replies",
                    "title": "Post Comments",
                    "type": "application/atom+xml"
                },
                {
                    "href": "http://www.blogger.com/comment.g?blogID=1176949257541686127&postID=3294366029953017136&isPopup=true",
                    "rel": "replies",
                    "title": "0 Comments",
                    "type": "text/html"
                },
                {
                    "href": "http://www.blogger.com/feeds/1176949257541686127/posts/default/3294366029953017136",
                    "rel": "edit",
                    "type": "application/atom+xml"
                },
                {
                    "href": "http://www.blogger.com/feeds/1176949257541686127/posts/default/3294366029953017136",
                    "rel": "self",
                    "type": "application/atom+xml"
                },
                {
                    "href": "http://security.googleblog.com/2022/09/use-after-freedom-miracleptr.html",
                    "rel": "alternate",
                    "title": "Use-after-freedom: MiraclePtr",
                    "type": "text/html"
                }
            ],
            "authors": [
                {
                    "name": "Edward Fernandez",
                    "href": "http://www.blogger.com/profile/03784424747198152685",
                    "email": "noreply@blogger.com"
                }
            ],
            "author_detail": {
                "name": "Edward Fernandez",
                "href": "http://www.blogger.com/profile/03784424747198152685",
                "email": "noreply@blogger.com"
            },
            "href": "",
            "author": "Edward Fernandez (noreply@blogger.com)",
            "gd_image": {
                "height": "16",
                "rel": "http://schemas.google.com/g/2005#thumbnail",
                "src": "https://img1.blogblog.com/img/b16-rounded.gif",
                "width": "16"
            },
            "media_thumbnail": [
                {
                    "height": "72",
                    "url": "https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjol0tDHrKfloO3-RsAhVwMGPRBFmg8FmM2nMbHfA4kPTHu4PVaoqFAkdKXkE63ePSIC4U4rH8pMSa8FfLYY-0CdahMPzcP_GqoILj0bBtquIwVuf-oLRpnZqe6cNBgTHv6LPnM_l1YrkqPHote0DMbIkYy7BZjDiZITG2u05T9YoxV6OqhnonD1TlY9g/s72-c/bug%20types.png",
                    "width": "72"
                }
            ],
            "thr_total": "0"
        },
        {
            "id": "tag:blogger.com,1999:blog-1176949257541686127.post-2389034929342282972",
            "guidislink": true,
            "link": "http://security.googleblog.com/2022/09/fuzzing-beyond-memory-corruption.html",
            "published": "2022-09-08T12:00:00.000-04:00",
            "published_parsed": [
                2022,
                9,
                8,
                16,
                0,
                0,
                3,
                251,
                0
            ],
            "updated": "2022-09-08T12:00:15.540-04:00",
            "updated_parsed": [
                2022,
                9,
                8,
                16,
                0,
                15,
                3,
                251,
                0
            ],
            "title": "Fuzzing beyond memory corruption: Finding broader classes of vulnerabilities automatically",
            "title_detail": {
                "type": "text/plain",
                "language": null,
                "base": "http://feeds.feedburner.com/GoogleOnlineSecurityBlog",
                "value": "Fuzzing beyond memory corruption: Finding broader classes of vulnerabilities automatically"
            },
            "content": [
                {
                    "type": "text/html",
                    "language": null,
                    "base": "http://feeds.feedburner.com/GoogleOnlineSecurityBlog",
                    "value": "<span class=\"byline-author\">Posted by Jonathan Metzman, Dongge Liu and Oliver Chang, Google Open Source Security Team</span> <p>Recently, <a href=\"https://google.github.io/oss-fuzz/\">OSS-Fuzz</a>\u2014our community fuzzing service that regularly checks <a href=\"https://github.com/google/oss-fuzz/tree/5675ec6958b74ebba5612b72dfe919c59e92d1df/projects\">700 critical open source projects</a> for bugs\u2014detected a <a href=\"https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=49053\">serious vulnerability</a> (CVE-2022-3008): a bug in the <code><a href=\"https://github.com/syoyo/tinygltf\">TinyGLTF</a></code> project that could have allowed attackers to execute malicious code in projects using <code>TinyGLTF</code> as a dependency.   <p>The bug was soon <a href=\"https://github.com/syoyo/tinygltf/commit/52ff00a38447f06a17eab1caa2cf0730a119c751\">patched</a>, but the wider significance remains: OSS-Fuzz caught a trivially exploitable command injection vulnerability. This discovery shows that <a href=\"https://github.com/google/fuzzing/blob/master/docs/why-fuzz.md#introduction\">fuzzing</a>, a type of testing once primarily known for detecting memory corruption vulnerabilities in C/C++ code, has considerable untapped potential to find broader classes of vulnerabilities. Though the TinyGLTF library is written in C++, this vulnerability is easily applicable to all programming languages and confirms that fuzzing is a beneficial and necessary testing method for all software projects. </p><h2>Fuzzing as a public service</h2>  <p>OSS-Fuzz was launched in 2016 in response to the <a href=\"https://heartbleed.com/\">Heartbleed</a> vulnerability, discovered in one of the most popular open source projects for encrypting web traffic. The vulnerability had the potential to affect almost every internet user, yet was caused by a relatively simple memory buffer overflow bug that could have been detected by fuzzing\u2014that is, by running the code on randomized inputs to intentionally cause unexpected behaviors or crashes that signal bugs. At the time, though, fuzzing was not widely used and was cumbersome for developers, requiring extensive manual effort.  </p><p>Google created OSS-Fuzz to fill this gap: it's a free service that runs fuzzers for open source projects and privately alerts developers to the bugs detected. Since its launch, OSS-Fuzz has become a critical service for the open source community, helping get <a href=\"https://bugs.chromium.org/p/oss-fuzz/issues/list?q=type%3Dbug-security%20status%3Averified%2Cfixed%20label%3Aclusterfuzz&amp;can=1\">more than 8,000 security vulnerabilities</a> and more than <a href=\"https://bugs.chromium.org/p/oss-fuzz/issues/list?q=type%3Dbug%20status%3Averified%2Cfixed%20label%3Aclusterfuzz&amp;can=1\">26,000 other bugs</a> in open source projects fixed. With time, OSS-Fuzz has grown beyond C/C++ to detect problems in memory-safe languages such as Go, Rust, and Python. </p><p>Google Cloud\u2019s <a href=\"https://cloud.google.com/blog/products/identity-security/introducing-assured-open-source-software-service\">Assured Open Source Software Service</a>, which provides organizations a secure and curated set of open source dependencies, relies on OSS-Fuzz as a foundational layer of security scanning. OSS-Fuzz is also the basis for free fuzzing tools for the community, such as <a href=\"https://google.github.io/clusterfuzzlite/\">ClusterFuzzLite</a>, which gives developers a streamlined way to fuzz both open source and proprietary code before committing changes to their projects. All of these efforts are part of Google\u2019s <a href=\"https://blog.google/technology/safety-security/why-were-committing-10-billion-to-advance-cybersecurity/\">$10B commitment to improving cybersecurity</a> and continued work to <a href=\"https://blog.google/technology/safety-security/shared-success-in-building-a-safer-open-source-community/\">make open source software more secure</a> for everyone.  </p><h2>New classes of vulnerabilities </h2>  <p>Last December, OSS-Fuzz <a href=\"https://security.googleblog.com/2021/12/improving-oss-fuzz-and-jazzer-to-catch.html\">announced an effort to improve our bug detectors</a> (known as <em>sanitizers</em>) to find more classes of vulnerabilities, by <a href=\"https://security.googleblog.com/2021/12/improving-oss-fuzz-and-jazzer-to-catch.html\">first showing that fuzzing can find Log4Shell</a>. The <code>TinyGLTF</code> bug was found using one of those new sanitizers, <code><a href=\"https://github.com/google/oss-fuzz/tree/5675ec6958b74ebba5612b72dfe919c59e92d1df/infra/experimental/SystemSan\">SystemSan</a></code>, which was developed specifically to find bugs that can be exploited to execute arbitrary commands in any programming language. This <a href=\"https://github.com/syoyo/tinygltf/issues/368\">vulnerability</a> shows that it was possible to inject backticks into the input glTF file format and allow commands to be executed during parsing.      <pre class=\"prettyprint\"># Craft an input that exploits the vulnerability to insert a string to poc<br />$ echo '{\"images\":[{\"uri\":\"a`echo iamhere > poc`\"}], \"asset\":{\"version\":\"\"}}' > payload.gltf<br /># Execute the vulnerable program with the input<br />$ ./loader_exampler payload.gltf<br /># The string was inserted to poc, proving the vulnerability was successfully exploited<br />$ cat poc<br />iamhere</pre>  <p><em>A proof of exploit in <code>TinyGLTF</code>, extended from the input found by OSS-Fuzz with <code>SystemSan</code>. The culprit was the use of the <a href=\"https://github.com/syoyo/tinygltf/blob/0fa56e239c77cc864dc248842e8887d985cf8e3f/tiny_gltf.h#L2640\">\u201cwordexp\u201d</a> function to expand file paths. </em> <p><code>SystemSan</code> uses <code><a href=\"https://man7.org/linux/man-pages/man2/ptrace.2.html#:~:text=The%20ptrace()%20system%20call,debugging%20and%20system%20call%20tracing.\">ptrace</a></code>, and is built in a language-independent and highly extensible way to allow new bug detectors to be added easily. For example, we\u2019ve built <a href=\"https://github.com/google/oss-fuzz/tree/5675ec6958b74ebba5612b72dfe919c59e92d1df/infra/experimental/SystemSan/PoEs\">proofs of concept</a> to detect issues in JavaScript and Python libraries, and an external contributor recently added support for detecting <a href=\"https://github.com/google/oss-fuzz/pull/8009\">arbitrary file access</a> (e.g. through <a href=\"https://owasp.org/www-community/attacks/Path_Traversal\">path traversal</a>).  <p>OSS-Fuzz has also continued to work with <a href=\"https://www.code-intelligence.com/\">Code Intelligence</a> to improve Java fuzzing by integrating over 50 additional Java projects into OSS-Fuzz and developing <a href=\"https://github.com/CodeIntelligenceTesting/jazzer/tree/main/sanitizers/src/main/java/com/code_intelligence/jazzer/sanitizers\">sanitizers for detecting Java-specific issues</a> such as deserialization and LDAP injection vulnerabilities. A number of these types of vulnerabilities have been found already and are pending disclosure.  </p><h2>Rewards for getting involved</h2>  <p>Want to get involved with making fuzzing more widely used and get rewarded? There are two ways:  </p><ol> <li>Integrate a new sanitizer into OSS-Fuzz (or fuzzing engines like <a href=\"https://github.com/CodeIntelligenceTesting/jazzer/tree/main/sanitizers/src/main/java/com/code_intelligence/jazzer/sanitizers\">Jazzer</a>) to detect more classes of bugs. We will pay <strong>$11,337</strong> for integrations that find at least 2 new vulnerabilities in OSS-Fuzz projects.  <li>Integrate a new project into OSS-Fuzz. We currently support projects written in C/C++, Rust, Go, Swift, Python, and JVM-based languages; Javascript is coming soon. This is part of our existing OSS-Fuzz integration rewards.  </li></ol><p>To apply for these rewards, see the <a href=\"https://google.github.io/oss-fuzz/getting-started/integration-rewards/\">OSS-Fuzz integration reward program</a>.  </p><p>Fuzzing still has a lot of unexplored potential in discovering more classes of vulnerabilities. Through our combined efforts we hope to take this effective testing method to the next level and enable more of the open source community to enjoy the benefits of fuzzing.  </p>"
                }
            ],
            "summary": "<span class=\"byline-author\">Posted by Jonathan Metzman, Dongge Liu and Oliver Chang, Google Open Source Security Team</span> <p>Recently, <a href=\"https://google.github.io/oss-fuzz/\">OSS-Fuzz</a>\u2014our community fuzzing service that regularly checks <a href=\"https://github.com/google/oss-fuzz/tree/5675ec6958b74ebba5612b72dfe919c59e92d1df/projects\">700 critical open source projects</a> for bugs\u2014detected a <a href=\"https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=49053\">serious vulnerability</a> (CVE-2022-3008): a bug in the <code><a href=\"https://github.com/syoyo/tinygltf\">TinyGLTF</a></code> project that could have allowed attackers to execute malicious code in projects using <code>TinyGLTF</code> as a dependency.   <p>The bug was soon <a href=\"https://github.com/syoyo/tinygltf/commit/52ff00a38447f06a17eab1caa2cf0730a119c751\">patched</a>, but the wider significance remains: OSS-Fuzz caught a trivially exploitable command injection vulnerability. This discovery shows that <a href=\"https://github.com/google/fuzzing/blob/master/docs/why-fuzz.md#introduction\">fuzzing</a>, a type of testing once primarily known for detecting memory corruption vulnerabilities in C/C++ code, has considerable untapped potential to find broader classes of vulnerabilities. Though the TinyGLTF library is written in C++, this vulnerability is easily applicable to all programming languages and confirms that fuzzing is a beneficial and necessary testing method for all software projects. </p><h2>Fuzzing as a public service</h2>  <p>OSS-Fuzz was launched in 2016 in response to the <a href=\"https://heartbleed.com/\">Heartbleed</a> vulnerability, discovered in one of the most popular open source projects for encrypting web traffic. The vulnerability had the potential to affect almost every internet user, yet was caused by a relatively simple memory buffer overflow bug that could have been detected by fuzzing\u2014that is, by running the code on randomized inputs to intentionally cause unexpected behaviors or crashes that signal bugs. At the time, though, fuzzing was not widely used and was cumbersome for developers, requiring extensive manual effort.  </p><p>Google created OSS-Fuzz to fill this gap: it's a free service that runs fuzzers for open source projects and privately alerts developers to the bugs detected. Since its launch, OSS-Fuzz has become a critical service for the open source community, helping get <a href=\"https://bugs.chromium.org/p/oss-fuzz/issues/list?q=type%3Dbug-security%20status%3Averified%2Cfixed%20label%3Aclusterfuzz&amp;can=1\">more than 8,000 security vulnerabilities</a> and more than <a href=\"https://bugs.chromium.org/p/oss-fuzz/issues/list?q=type%3Dbug%20status%3Averified%2Cfixed%20label%3Aclusterfuzz&amp;can=1\">26,000 other bugs</a> in open source projects fixed. With time, OSS-Fuzz has grown beyond C/C++ to detect problems in memory-safe languages such as Go, Rust, and Python. </p><p>Google Cloud\u2019s <a href=\"https://cloud.google.com/blog/products/identity-security/introducing-assured-open-source-software-service\">Assured Open Source Software Service</a>, which provides organizations a secure and curated set of open source dependencies, relies on OSS-Fuzz as a foundational layer of security scanning. OSS-Fuzz is also the basis for free fuzzing tools for the community, such as <a href=\"https://google.github.io/clusterfuzzlite/\">ClusterFuzzLite</a>, which gives developers a streamlined way to fuzz both open source and proprietary code before committing changes to their projects. All of these efforts are part of Google\u2019s <a href=\"https://blog.google/technology/safety-security/why-were-committing-10-billion-to-advance-cybersecurity/\">$10B commitment to improving cybersecurity</a> and continued work to <a href=\"https://blog.google/technology/safety-security/shared-success-in-building-a-safer-open-source-community/\">make open source software more secure</a> for everyone.  </p><h2>New classes of vulnerabilities </h2>  <p>Last December, OSS-Fuzz <a href=\"https://security.googleblog.com/2021/12/improving-oss-fuzz-and-jazzer-to-catch.html\">announced an effort to improve our bug detectors</a> (known as <em>sanitizers</em>) to find more classes of vulnerabilities, by <a href=\"https://security.googleblog.com/2021/12/improving-oss-fuzz-and-jazzer-to-catch.html\">first showing that fuzzing can find Log4Shell</a>. The <code>TinyGLTF</code> bug was found using one of those new sanitizers, <code><a href=\"https://github.com/google/oss-fuzz/tree/5675ec6958b74ebba5612b72dfe919c59e92d1df/infra/experimental/SystemSan\">SystemSan</a></code>, which was developed specifically to find bugs that can be exploited to execute arbitrary commands in any programming language. This <a href=\"https://github.com/syoyo/tinygltf/issues/368\">vulnerability</a> shows that it was possible to inject backticks into the input glTF file format and allow commands to be executed during parsing.      <pre class=\"prettyprint\"># Craft an input that exploits the vulnerability to insert a string to poc<br />$ echo '{\"images\":[{\"uri\":\"a`echo iamhere > poc`\"}], \"asset\":{\"version\":\"\"}}' > payload.gltf<br /># Execute the vulnerable program with the input<br />$ ./loader_exampler payload.gltf<br /># The string was inserted to poc, proving the vulnerability was successfully exploited<br />$ cat poc<br />iamhere</pre>  <p><em>A proof of exploit in <code>TinyGLTF</code>, extended from the input found by OSS-Fuzz with <code>SystemSan</code>. The culprit was the use of the <a href=\"https://github.com/syoyo/tinygltf/blob/0fa56e239c77cc864dc248842e8887d985cf8e3f/tiny_gltf.h#L2640\">\u201cwordexp\u201d</a> function to expand file paths. </em> <p><code>SystemSan</code> uses <code><a href=\"https://man7.org/linux/man-pages/man2/ptrace.2.html#:~:text=The%20ptrace()%20system%20call,debugging%20and%20system%20call%20tracing.\">ptrace</a></code>, and is built in a language-independent and highly extensible way to allow new bug detectors to be added easily. For example, we\u2019ve built <a href=\"https://github.com/google/oss-fuzz/tree/5675ec6958b74ebba5612b72dfe919c59e92d1df/infra/experimental/SystemSan/PoEs\">proofs of concept</a> to detect issues in JavaScript and Python libraries, and an external contributor recently added support for detecting <a href=\"https://github.com/google/oss-fuzz/pull/8009\">arbitrary file access</a> (e.g. through <a href=\"https://owasp.org/www-community/attacks/Path_Traversal\">path traversal</a>).  <p>OSS-Fuzz has also continued to work with <a href=\"https://www.code-intelligence.com/\">Code Intelligence</a> to improve Java fuzzing by integrating over 50 additional Java projects into OSS-Fuzz and developing <a href=\"https://github.com/CodeIntelligenceTesting/jazzer/tree/main/sanitizers/src/main/java/com/code_intelligence/jazzer/sanitizers\">sanitizers for detecting Java-specific issues</a> such as deserialization and LDAP injection vulnerabilities. A number of these types of vulnerabilities have been found already and are pending disclosure.  </p><h2>Rewards for getting involved</h2>  <p>Want to get involved with making fuzzing more widely used and get rewarded? There are two ways:  </p><ol> <li>Integrate a new sanitizer into OSS-Fuzz (or fuzzing engines like <a href=\"https://github.com/CodeIntelligenceTesting/jazzer/tree/main/sanitizers/src/main/java/com/code_intelligence/jazzer/sanitizers\">Jazzer</a>) to detect more classes of bugs. We will pay <strong>$11,337</strong> for integrations that find at least 2 new vulnerabilities in OSS-Fuzz projects.  <li>Integrate a new project into OSS-Fuzz. We currently support projects written in C/C++, Rust, Go, Swift, Python, and JVM-based languages; Javascript is coming soon. This is part of our existing OSS-Fuzz integration rewards.  </li></ol><p>To apply for these rewards, see the <a href=\"https://google.github.io/oss-fuzz/getting-started/integration-rewards/\">OSS-Fuzz integration reward program</a>.  </p><p>Fuzzing still has a lot of unexplored potential in discovering more classes of vulnerabilities. Through our combined efforts we hope to take this effective testing method to the next level and enable more of the open source community to enjoy the benefits of fuzzing.  </p>",
            "links": [
                {
                    "href": "http://security.googleblog.com/feeds/2389034929342282972/comments/default",
                    "rel": "replies",
                    "title": "Post Comments",
                    "type": "application/atom+xml"
                },
                {
                    "href": "http://www.blogger.com/comment.g?blogID=1176949257541686127&postID=2389034929342282972&isPopup=true",
                    "rel": "replies",
                    "title": "0 Comments",
                    "type": "text/html"
                },
                {
                    "href": "http://www.blogger.com/feeds/1176949257541686127/posts/default/2389034929342282972",
                    "rel": "edit",
                    "type": "application/atom+xml"
                },
                {
                    "href": "http://www.blogger.com/feeds/1176949257541686127/posts/default/2389034929342282972",
                    "rel": "self",
                    "type": "application/atom+xml"
                },
                {
                    "href": "http://security.googleblog.com/2022/09/fuzzing-beyond-memory-corruption.html",
                    "rel": "alternate",
                    "title": "Fuzzing beyond memory corruption: Finding broader classes of vulnerabilities automatically",
                    "type": "text/html"
                }
            ],
            "authors": [
                {
                    "name": "Google",
                    "href": "http://www.blogger.com/profile/11822708545141062574",
                    "email": "noreply@blogger.com"
                }
            ],
            "author_detail": {
                "name": "Google",
                "href": "http://www.blogger.com/profile/11822708545141062574",
                "email": "noreply@blogger.com"
            },
            "href": "http://www.blogger.com/profile/11822708545141062574",
            "author": "Google (noreply@blogger.com)",
            "gd_image": {
                "height": "16",
                "rel": "http://schemas.google.com/g/2005#thumbnail",
                "src": "https://img1.blogblog.com/img/b16-rounded.gif",
                "width": "16"
            },
            "thr_total": "0"
        },
        {
            "id": "tag:blogger.com,1999:blog-1176949257541686127.post-7191398098933223089",
            "guidislink": true,
            "link": "http://security.googleblog.com/2023/08/Announcing-Googles-Open-Source-Software-Vulnerability-Rewards-Program .html",
            "published": "2022-08-30T07:01:00.005-04:00",
            "published_parsed": [
                2022,
                8,
                30,
                11,
                1,
                0,
                1,
                242,
                0
            ],
            "updated": "2022-08-30T12:49:29.367-04:00",
            "updated_parsed": [
                2022,
                8,
                30,
                16,
                49,
                29,
                1,
                242,
                0
            ],
            "title": "Announcing Google\u2019s Open Source Software Vulnerability Rewards Program",
            "title_detail": {
                "type": "text/plain",
                "language": null,
                "base": "http://feeds.feedburner.com/GoogleOnlineSecurityBlog",
                "value": "Announcing Google\u2019s Open Source Software Vulnerability Rewards Program"
            },
            "content": [
                {
                    "type": "text/html",
                    "language": null,
                    "base": "http://feeds.feedburner.com/GoogleOnlineSecurityBlog",
                    "value": "<span class=\"byline-author\">Posted by Francis Perron, Open Source Security Technical Program Manager, and Krzysztof Kotowicz, Information Security Engineer&nbsp;</span><div><span id=\"docs-internal-guid-d7aea1e1-7fff-2a0e-42f1-b5f7a46a298d\"><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"><span style=\"font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\"><br /></span></p><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"><span style=\"font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\"><br /></span></p><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"><span style=\"font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">Today, we are launching Google\u2019s </span><a href=\"https://bughunters.google.com/about/rules/6521337925468160/google-open-source-software-vulnerability-reward-program-rules\"><span style=\"color: #1155cc; font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">Open Source Software Vulnerability Rewards Program (OSS VRP)</span></a><span style=\"font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\"> to reward discoveries of vulnerabilities in Google\u2019s open source projects. As the maintainer of major projects such as </span><a href=\"https://github.com/golang\"><span style=\"color: #1155cc; font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">Golang</span></a><span style=\"font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">, </span><a href=\"https://github.com/angular\"><span style=\"color: #1155cc; font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">Angular</span></a><span style=\"font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">, and </span><a href=\"https://fuchsia.dev\"><span style=\"color: #1155cc; font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">Fuchsia</span></a><span style=\"font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">, Google is among the largest </span><a href=\"https://opensource.googleblog.com/2020/08/open-source-by-numbers-at-google.html\"><span style=\"color: #1155cc; font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">contributors and users of open source</span></a><span style=\"font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\"> in the world. With the addition of Google\u2019s OSS VRP to our family of </span><a href=\"https://bughunters.google.com/\"><span style=\"color: #1155cc; font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">Vulnerability Reward Programs (VRPs)</span></a><span style=\"font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">, researchers can now be rewarded for finding bugs that could potentially impact the entire open source ecosystem.</span></p><br /><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"><span style=\"font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">Google has been committed to supporting security researchers and bug hunters for over a decade. The original VRP program, established to compensate and thank those who help make Google\u2019s code more secure, was one of the first in the world and is now approaching its </span><a href=\"https://security.googleblog.com/2021/07/a-new-chapter-for-googles-vulnerability.html\"><span style=\"color: #1155cc; font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">12th anniversary</span></a><span style=\"font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">. Over time, our VRP lineup has </span><a href=\"https://bughunters.google.com/about/rules\"><span style=\"color: #1155cc; font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">expanded</span></a><span style=\"font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\"> to include programs focused on Chrome, Android, and other areas. Collectively, these programs have rewarded more than 13,000 submissions, totaling over $38M paid.&nbsp;</span></p><br /><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"><span style=\"font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">The addition of this new program addresses the ever more prevalent reality of rising supply chain compromises. Last year saw a </span><a href=\"https://www.sonatype.com/hubfs/Q3%202021-State%20of%20the%20Software%20Supply%20Chain-Report/SSSC-Report-2021_0913_PM_2.pdf?hsLang=en-us\"><span style=\"color: #1155cc; font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">650% year-over-year increase</span></a><span style=\"font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\"> in attacks targeting the open source supply chain, including headliner incidents like Codecov and the Log4j vulnerability that showed the destructive potential of a single open source vulnerability. Google's OSS VRP is part of our </span><a href=\"https://blog.google/technology/safety-security/why-were-committing-10-billion-to-advance-cybersecurity/\"><span style=\"color: #1155cc; font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">$10B commitment to improving cybersecurity</span></a><span style=\"font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">, including securing the supply chain against these types of attacks for both Google\u2019s users and open source consumers worldwide.</span></p><h1 dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 6pt; margin-top: 20pt;\"><span style=\"font-family: Arial; font-size: 20pt; font-weight: 400; vertical-align: baseline; white-space: pre-wrap;\">How it works</span></h1><h2 dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 6pt; margin-top: 18pt;\"><span style=\"font-family: Arial; font-size: 16pt; font-weight: 400; vertical-align: baseline; white-space: pre-wrap;\">Projects</span></h2><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"><span style=\"font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">Google's OSS VRP encourages researchers to report vulnerabilities with the greatest real, and potential, impact on open source software under the Google portfolio. The program focuses on:</span></p><br /><ul style=\"margin-bottom: 0px; margin-top: 0px; padding-inline-start: 48px;\"><li dir=\"ltr\" style=\"font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre;\"><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"><span style=\"font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">All up-to-date versions of open source software (including repository settings) stored in the public repositories of Google-owned GitHub organizations (eg. </span><a href=\"https://github.com/google\"><span style=\"color: #1155cc; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">Google</span></a><span style=\"font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">, </span><a href=\"https://github.com/googleapis/\"><span style=\"color: #1155cc; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">GoogleAPIs</span></a><span style=\"font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">, </span><a href=\"https://github.com/GoogleCloudPlatform\"><span style=\"color: #1155cc; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">GoogleCloudPlatform</span></a><span style=\"font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">, \u2026).</span></p></li></ul><br /><ul style=\"margin-bottom: 0px; margin-top: 0px; padding-inline-start: 48px;\"><li dir=\"ltr\" style=\"font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre;\"><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"><span style=\"font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">Those projects\u2019 third-party dependencies (with prior notification to the affected dependency required before submission to Google\u2019s OSS VRP).</span></p></li></ul><br /><p dir=\"ltr\" style=\"line-height: 1.2; margin-bottom: 10pt; margin-top: 0pt;\"><span style=\"font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">The top awards will go to vulnerabilities found in the most sensitive projects: </span><a href=\"https://github.com/bazelbuild\"><span face=\"Roboto, sans-serif\" style=\"color: #1155cc; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">Bazel</span></a><span style=\"font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">, </span><a href=\"https://github.com/angular\"><span face=\"Roboto, sans-serif\" style=\"color: #1155cc; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">Angular</span></a><span style=\"font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">, </span><a href=\"https://github.com/golang\"><span face=\"Roboto, sans-serif\" style=\"color: #1155cc; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">Golang</span></a><span style=\"font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">, </span><a href=\"https://github.com/protocolbuffers\"><span face=\"Roboto, sans-serif\" style=\"color: #1155cc; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">Protocol buffers</span></a><span style=\"font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">, and </span><a href=\"https://fuchsia.dev\"><span face=\"Roboto, sans-serif\" style=\"color: #1155cc; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">Fuchsia</span></a><span face=\"Roboto, sans-serif\" style=\"color: #424242; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">. </span><span style=\"font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">After the initial rollout we plan to expand this list. Be sure to check back to see what\u2019s been added.</span></p><h2 dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 6pt; margin-top: 18pt;\"><span style=\"font-family: Arial; font-size: 16pt; font-weight: 400; vertical-align: baseline; white-space: pre-wrap;\">Vulnerabilities&nbsp;</span></h2><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"><span style=\"font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">To focus efforts on discoveries that have the greatest impact on the supply chain, we welcome submissions of:</span></p><br /><ul style=\"margin-bottom: 0px; margin-top: 0px; padding-inline-start: 48px;\"><li dir=\"ltr\" style=\"font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre;\"><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"><span style=\"font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">Vulnerabilities that lead to supply chain compromise</span></p></li><li dir=\"ltr\" style=\"font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre;\"><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"><span style=\"font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">Design issues that cause product vulnerabilities</span></p></li><li dir=\"ltr\" style=\"font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre;\"><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"><span style=\"font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">Other security issues such as sensitive or leaked credentials, weak passwords, or insecure installations</span></p></li></ul><br /><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"><span style=\"font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">Depending on the severity of the vulnerability and the project\u2019s importance, rewards will range </span><span style=\"background-color: white; font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">from $100 to $31,337. The l</span><span style=\"font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">arger amounts will also go to unusual or particularly interesting vulnerabilities, so creativity is encouraged.</span></p><h1 dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 6pt; margin-top: 20pt;\"><span style=\"font-family: Arial; font-size: 20pt; font-weight: 400; vertical-align: baseline; white-space: pre-wrap;\">Getting involved</span></h1><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"><span style=\"font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">Before you start, please see the </span><a href=\"https://bughunters.google.com/about/rules/6521337925468160/google-open-source-software-vulnerability-reward-program-rules\"><span style=\"color: #1155cc; font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">program rules</span></a><span style=\"font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\"> for more information about out-of-scope projects and vulnerabilities, then get hacking and let us know what you find. If your submission is particular</span><span style=\"background-color: white; font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">ly unusual, we\u2019ll reach out and work with you directly for triaging and response. In addition to a reward, you can receive public recognition for your cont</span><span style=\"font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">ribution. You can also opt to donate your reward to charity at double the original amount.</span></p><br /><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"><span style=\"font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">Not sure whether a bug you\u2019ve found is right for Google\u2019s OSS VRP? Don\u2019t worry, if needed, we\u2019ll route your submission to a different VRP that will give you the highest possible payout. We also encourage you to check out our </span><a href=\"https://bughunters.google.com/about/rules/4928084514701312/patch-rewards-program-rules\"><span style=\"color: #1155cc; font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">Patch Rewards program</span></a><span style=\"font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">, which rewards security improvements to Google\u2019s open source projects (for example, up to $20K for </span><a href=\"https://google.github.io/oss-fuzz/getting-started/integration-rewards/\"><span style=\"color: #1155cc; font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">fuzzing integrations in OSS-Fuzz</span></a><span style=\"font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">).</span></p><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"><span style=\"font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">&nbsp;</span></p><h1 dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 6pt; margin-top: 20pt;\"><span style=\"font-family: Arial; font-size: 20pt; font-weight: 400; vertical-align: baseline; white-space: pre-wrap;\">Appreciation for the open source community</span></h1><br /><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"><span style=\"font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">Google is proud to both support and be a part of the open source software community. Through our existing bug bounty programs, we\u2019ve rewarded bug hunters from over 84 countries and look forward to increasing that number through this new VRP. The community has continuously surprised us with its creativity and determination, and we cannot wait to see what new bugs and discoveries you have in store. Together, we can help improve the security of the open source ecosystem.&nbsp;</span></p><br /><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"><span style=\"font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">Give it a try, and happy bug hunting!&nbsp;</span></p><div><span style=\"font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\"><br /></span></div></span></div>"
                }
            ],
            "summary": "<span class=\"byline-author\">Posted by Francis Perron, Open Source Security Technical Program Manager, and Krzysztof Kotowicz, Information Security Engineer&nbsp;</span><div><span id=\"docs-internal-guid-d7aea1e1-7fff-2a0e-42f1-b5f7a46a298d\"><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"><span style=\"font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\"><br /></span></p><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"><span style=\"font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\"><br /></span></p><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"><span style=\"font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">Today, we are launching Google\u2019s </span><a href=\"https://bughunters.google.com/about/rules/6521337925468160/google-open-source-software-vulnerability-reward-program-rules\"><span style=\"color: #1155cc; font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">Open Source Software Vulnerability Rewards Program (OSS VRP)</span></a><span style=\"font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\"> to reward discoveries of vulnerabilities in Google\u2019s open source projects. As the maintainer of major projects such as </span><a href=\"https://github.com/golang\"><span style=\"color: #1155cc; font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">Golang</span></a><span style=\"font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">, </span><a href=\"https://github.com/angular\"><span style=\"color: #1155cc; font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">Angular</span></a><span style=\"font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">, and </span><a href=\"https://fuchsia.dev\"><span style=\"color: #1155cc; font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">Fuchsia</span></a><span style=\"font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">, Google is among the largest </span><a href=\"https://opensource.googleblog.com/2020/08/open-source-by-numbers-at-google.html\"><span style=\"color: #1155cc; font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">contributors and users of open source</span></a><span style=\"font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\"> in the world. With the addition of Google\u2019s OSS VRP to our family of </span><a href=\"https://bughunters.google.com/\"><span style=\"color: #1155cc; font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">Vulnerability Reward Programs (VRPs)</span></a><span style=\"font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">, researchers can now be rewarded for finding bugs that could potentially impact the entire open source ecosystem.</span></p><br /><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"><span style=\"font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">Google has been committed to supporting security researchers and bug hunters for over a decade. The original VRP program, established to compensate and thank those who help make Google\u2019s code more secure, was one of the first in the world and is now approaching its </span><a href=\"https://security.googleblog.com/2021/07/a-new-chapter-for-googles-vulnerability.html\"><span style=\"color: #1155cc; font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">12th anniversary</span></a><span style=\"font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">. Over time, our VRP lineup has </span><a href=\"https://bughunters.google.com/about/rules\"><span style=\"color: #1155cc; font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">expanded</span></a><span style=\"font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\"> to include programs focused on Chrome, Android, and other areas. Collectively, these programs have rewarded more than 13,000 submissions, totaling over $38M paid.&nbsp;</span></p><br /><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"><span style=\"font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">The addition of this new program addresses the ever more prevalent reality of rising supply chain compromises. Last year saw a </span><a href=\"https://www.sonatype.com/hubfs/Q3%202021-State%20of%20the%20Software%20Supply%20Chain-Report/SSSC-Report-2021_0913_PM_2.pdf?hsLang=en-us\"><span style=\"color: #1155cc; font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">650% year-over-year increase</span></a><span style=\"font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\"> in attacks targeting the open source supply chain, including headliner incidents like Codecov and the Log4j vulnerability that showed the destructive potential of a single open source vulnerability. Google's OSS VRP is part of our </span><a href=\"https://blog.google/technology/safety-security/why-were-committing-10-billion-to-advance-cybersecurity/\"><span style=\"color: #1155cc; font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">$10B commitment to improving cybersecurity</span></a><span style=\"font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">, including securing the supply chain against these types of attacks for both Google\u2019s users and open source consumers worldwide.</span></p><h1 dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 6pt; margin-top: 20pt;\"><span style=\"font-family: Arial; font-size: 20pt; font-weight: 400; vertical-align: baseline; white-space: pre-wrap;\">How it works</span></h1><h2 dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 6pt; margin-top: 18pt;\"><span style=\"font-family: Arial; font-size: 16pt; font-weight: 400; vertical-align: baseline; white-space: pre-wrap;\">Projects</span></h2><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"><span style=\"font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">Google's OSS VRP encourages researchers to report vulnerabilities with the greatest real, and potential, impact on open source software under the Google portfolio. The program focuses on:</span></p><br /><ul style=\"margin-bottom: 0px; margin-top: 0px; padding-inline-start: 48px;\"><li dir=\"ltr\" style=\"font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre;\"><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"><span style=\"font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">All up-to-date versions of open source software (including repository settings) stored in the public repositories of Google-owned GitHub organizations (eg. </span><a href=\"https://github.com/google\"><span style=\"color: #1155cc; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">Google</span></a><span style=\"font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">, </span><a href=\"https://github.com/googleapis/\"><span style=\"color: #1155cc; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">GoogleAPIs</span></a><span style=\"font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">, </span><a href=\"https://github.com/GoogleCloudPlatform\"><span style=\"color: #1155cc; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">GoogleCloudPlatform</span></a><span style=\"font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">, \u2026).</span></p></li></ul><br /><ul style=\"margin-bottom: 0px; margin-top: 0px; padding-inline-start: 48px;\"><li dir=\"ltr\" style=\"font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre;\"><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"><span style=\"font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">Those projects\u2019 third-party dependencies (with prior notification to the affected dependency required before submission to Google\u2019s OSS VRP).</span></p></li></ul><br /><p dir=\"ltr\" style=\"line-height: 1.2; margin-bottom: 10pt; margin-top: 0pt;\"><span style=\"font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">The top awards will go to vulnerabilities found in the most sensitive projects: </span><a href=\"https://github.com/bazelbuild\"><span face=\"Roboto, sans-serif\" style=\"color: #1155cc; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">Bazel</span></a><span style=\"font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">, </span><a href=\"https://github.com/angular\"><span face=\"Roboto, sans-serif\" style=\"color: #1155cc; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">Angular</span></a><span style=\"font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">, </span><a href=\"https://github.com/golang\"><span face=\"Roboto, sans-serif\" style=\"color: #1155cc; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">Golang</span></a><span style=\"font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">, </span><a href=\"https://github.com/protocolbuffers\"><span face=\"Roboto, sans-serif\" style=\"color: #1155cc; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">Protocol buffers</span></a><span style=\"font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">, and </span><a href=\"https://fuchsia.dev\"><span face=\"Roboto, sans-serif\" style=\"color: #1155cc; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">Fuchsia</span></a><span face=\"Roboto, sans-serif\" style=\"color: #424242; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">. </span><span style=\"font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">After the initial rollout we plan to expand this list. Be sure to check back to see what\u2019s been added.</span></p><h2 dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 6pt; margin-top: 18pt;\"><span style=\"font-family: Arial; font-size: 16pt; font-weight: 400; vertical-align: baseline; white-space: pre-wrap;\">Vulnerabilities&nbsp;</span></h2><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"><span style=\"font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">To focus efforts on discoveries that have the greatest impact on the supply chain, we welcome submissions of:</span></p><br /><ul style=\"margin-bottom: 0px; margin-top: 0px; padding-inline-start: 48px;\"><li dir=\"ltr\" style=\"font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre;\"><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"><span style=\"font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">Vulnerabilities that lead to supply chain compromise</span></p></li><li dir=\"ltr\" style=\"font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre;\"><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"><span style=\"font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">Design issues that cause product vulnerabilities</span></p></li><li dir=\"ltr\" style=\"font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre;\"><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"><span style=\"font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">Other security issues such as sensitive or leaked credentials, weak passwords, or insecure installations</span></p></li></ul><br /><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"><span style=\"font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">Depending on the severity of the vulnerability and the project\u2019s importance, rewards will range </span><span style=\"background-color: white; font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">from $100 to $31,337. The l</span><span style=\"font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">arger amounts will also go to unusual or particularly interesting vulnerabilities, so creativity is encouraged.</span></p><h1 dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 6pt; margin-top: 20pt;\"><span style=\"font-family: Arial; font-size: 20pt; font-weight: 400; vertical-align: baseline; white-space: pre-wrap;\">Getting involved</span></h1><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"><span style=\"font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">Before you start, please see the </span><a href=\"https://bughunters.google.com/about/rules/6521337925468160/google-open-source-software-vulnerability-reward-program-rules\"><span style=\"color: #1155cc; font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">program rules</span></a><span style=\"font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\"> for more information about out-of-scope projects and vulnerabilities, then get hacking and let us know what you find. If your submission is particular</span><span style=\"background-color: white; font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">ly unusual, we\u2019ll reach out and work with you directly for triaging and response. In addition to a reward, you can receive public recognition for your cont</span><span style=\"font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">ribution. You can also opt to donate your reward to charity at double the original amount.</span></p><br /><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"><span style=\"font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">Not sure whether a bug you\u2019ve found is right for Google\u2019s OSS VRP? Don\u2019t worry, if needed, we\u2019ll route your submission to a different VRP that will give you the highest possible payout. We also encourage you to check out our </span><a href=\"https://bughunters.google.com/about/rules/4928084514701312/patch-rewards-program-rules\"><span style=\"color: #1155cc; font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">Patch Rewards program</span></a><span style=\"font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">, which rewards security improvements to Google\u2019s open source projects (for example, up to $20K for </span><a href=\"https://google.github.io/oss-fuzz/getting-started/integration-rewards/\"><span style=\"color: #1155cc; font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">fuzzing integrations in OSS-Fuzz</span></a><span style=\"font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">).</span></p><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"><span style=\"font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">&nbsp;</span></p><h1 dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 6pt; margin-top: 20pt;\"><span style=\"font-family: Arial; font-size: 20pt; font-weight: 400; vertical-align: baseline; white-space: pre-wrap;\">Appreciation for the open source community</span></h1><br /><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"><span style=\"font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">Google is proud to both support and be a part of the open source software community. Through our existing bug bounty programs, we\u2019ve rewarded bug hunters from over 84 countries and look forward to increasing that number through this new VRP. The community has continuously surprised us with its creativity and determination, and we cannot wait to see what new bugs and discoveries you have in store. Together, we can help improve the security of the open source ecosystem.&nbsp;</span></p><br /><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"><span style=\"font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">Give it a try, and happy bug hunting!&nbsp;</span></p><div><span style=\"font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\"><br /></span></div></span></div>",
            "links": [
                {
                    "href": "http://security.googleblog.com/feeds/7191398098933223089/comments/default",
                    "rel": "replies",
                    "title": "Post Comments",
                    "type": "application/atom+xml"
                },
                {
                    "href": "http://www.blogger.com/comment.g?blogID=1176949257541686127&postID=7191398098933223089&isPopup=true",
                    "rel": "replies",
                    "title": "0 Comments",
                    "type": "text/html"
                },
                {
                    "href": "http://www.blogger.com/feeds/1176949257541686127/posts/default/7191398098933223089",
                    "rel": "edit",
                    "type": "application/atom+xml"
                },
                {
                    "href": "http://www.blogger.com/feeds/1176949257541686127/posts/default/7191398098933223089",
                    "rel": "self",
                    "type": "application/atom+xml"
                },
                {
                    "href": "http://security.googleblog.com/2023/08/Announcing-Googles-Open-Source-Software-Vulnerability-Rewards-Program .html",
                    "rel": "alternate",
                    "title": "Announcing Google\u2019s Open Source Software Vulnerability Rewards Program ",
                    "type": "text/html"
                }
            ],
            "authors": [
                {
                    "name": "Kimberly Samra",
                    "href": "http://www.blogger.com/profile/17209446531010386292",
                    "email": "noreply@blogger.com"
                }
            ],
            "author_detail": {
                "name": "Kimberly Samra",
                "href": "http://www.blogger.com/profile/17209446531010386292",
                "email": "noreply@blogger.com"
            },
            "href": "http://www.blogger.com/profile/17209446531010386292",
            "author": "Kimberly Samra (noreply@blogger.com)",
            "gd_image": {
                "height": "16",
                "rel": "http://schemas.google.com/g/2005#thumbnail",
                "src": "https://img1.blogblog.com/img/b16-rounded.gif",
                "width": "16"
            },
            "thr_total": "0"
        },
        {
            "id": "tag:blogger.com,1999:blog-1176949257541686127.post-6054475588313755959",
            "guidislink": true,
            "link": "http://security.googleblog.com/2022/08/announcing-open-sourcing-of-paranoids.html",
            "published": "2022-08-24T13:14:00.010-04:00",
            "published_parsed": [
                2022,
                8,
                24,
                17,
                14,
                0,
                2,
                236,
                0
            ],
            "updated": "2022-09-18T01:16:40.787-04:00",
            "updated_parsed": [
                2022,
                9,
                18,
                5,
                16,
                40,
                6,
                261,
                0
            ],
            "title": "Announcing the Open Sourcing of Paranoid's Library",
            "title_detail": {
                "type": "text/plain",
                "language": null,
                "base": "http://feeds.feedburner.com/GoogleOnlineSecurityBlog",
                "value": "Announcing the Open Sourcing of Paranoid's Library"
            },
            "content": [
                {
                    "type": "text/html",
                    "language": null,
                    "base": "http://feeds.feedburner.com/GoogleOnlineSecurityBlog",
                    "value": "<span id=\"docs-internal-guid-59f8978a-7fff-3a36-60bb-fcc73e2abdc9\"><h2 dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 10pt; margin-top: 18pt; text-align: justify;\"><span style=\"text-align: left;\"><span style=\"color: #666666;\"><span style=\"font-size: 14px; font-weight: 400;\">Posted by Pedro Barbosa, Security Engineer, and&nbsp;</span></span></span><span style=\"color: #666666;\"><span style=\"font-size: 14px; font-weight: 400;\">Daniel Bleichenbacher, Software Engineer</span></span></h2><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 10pt; margin-top: 0pt; text-align: justify;\"><span style=\"font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">Paranoid is a project to detect well-known weaknesses in large amounts of crypto artifacts, like public keys and digital signatures. On August 3rd 2022 </span><span style=\"font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">we open sourced the library </span><span style=\"font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">containing the checks that we implemented so far (</span><a href=\"https://github.com/google/paranoid_crypto\"><span style=\"color: #1155cc; font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">https://github.com/google/paranoid_crypto</span></a><span style=\"font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">). The library is developed and maintained by members of the Google Security Team, but it is not an officially supported Google product.</span></p><h3 dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 10pt; margin-top: 13pt; text-align: justify;\"><span style=\"font-family: Arial; font-size: 14pt; vertical-align: baseline; white-space: pre-wrap;\">Why the Project?</span></h3><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 10pt; margin-top: 0pt; text-align: justify;\"><span style=\"font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">Crypto artifacts may be generated by systems with implementations unknown to us; we refer to them as \u201cblack boxes.\u201d An artifact may be generated by a black-box if, for example, it was not generated by one of our own tools (such as </span><a href=\"https://github.com/google/tink\"><span style=\"color: #1155cc; font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">Tink</span></a><span style=\"font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">), or by a library that we can inspect and test using </span><a href=\"https://github.com/google/wycheproof\"><span style=\"color: #1155cc; font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">Wycheproof</span></a><span style=\"font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">. Unfortunately, sometimes we end up relying on black-box generated artifacts (e.g. generated by proprietary </span><a href=\"https://en.wikipedia.org/wiki/Hardware_security_module\"><span style=\"color: #1155cc; font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">HSMs</span></a><span style=\"font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">).</span></p><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 10pt; margin-top: 0pt; text-align: justify;\"><span style=\"font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">After the disclosure of the </span><a href=\"https://en.wikipedia.org/wiki/ROCA_vulnerability\"><span style=\"color: #1155cc; font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">ROCA vulnerability</span></a><span style=\"font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">, we wondered what other weaknesses may exist in crypto artifacts generated by black boxes, and what we could do to detect and mitigate them. We then started working on this project in 2019 and created a library to perform checks against large amounts of crypto artifacts.</span></p><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 10pt; margin-top: 0pt; text-align: justify;\"><span style=\"font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">The library contains implementations and optimizations of existing work found in the literature. The literature shows that the generation of artifacts is flawed in some cases - below are examples of publications the library is based on.</span></p><ul style=\"margin-bottom: 0px; margin-top: 0px; padding-inline-start: 48px;\"><li dir=\"ltr\" style=\"font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre;\"><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 10pt; margin-top: 0pt;\"><a href=\"https://eprint.iacr.org/2012/064\"><span style=\"color: #1155cc; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">Arjen K. Lenstra, James P. Hughes, Maxime Augier, Joppe W. Bos, Thorsten Kleinjung, and Christophe Wachter. (2012). </span><span style=\"color: #1155cc; font-size: 11pt; font-weight: 700; vertical-align: baseline; white-space: pre-wrap;\">Ron was wrong, Whit is right</span><span style=\"color: #1155cc; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">. Cryptology ePrint Archive, Paper 2012/064</span></a><span style=\"font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">;</span></p></li><li dir=\"ltr\" style=\"font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre;\"><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 10pt; margin-top: 0pt;\"><a href=\"https://www.usenix.org/conference/usenixsecurity12/technical-sessions/presentation/heninger\"><span style=\"color: #1155cc; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">Nadia Heninger, Zakir Durumeric, Eric Wustrow, and J. Alex Halderman. (2012). </span><span style=\"color: #1155cc; font-size: 11pt; font-weight: 700; vertical-align: baseline; white-space: pre-wrap;\">Mining Your Ps and Qs: Detection of Widespread Weak Keys in Network Devices</span><span style=\"color: #1155cc; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">. USENIX Associations</span></a><span style=\"font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">;</span></p></li><li dir=\"ltr\" style=\"font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre;\"><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 10pt; margin-top: 0pt;\"><a href=\"https://eprint.iacr.org/2013/599\"><span style=\"color: #1155cc; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">Daniel J. Bernstein, Yun-An Chang, Chen-Mou Cheng, Li-Ping Chou, Nadia Heninger, Tanja Lange, and Nicko van Someren. (2013). </span><span style=\"color: #1155cc; font-size: 11pt; font-weight: 700; vertical-align: baseline; white-space: pre-wrap;\">Factoring RSA keys from certified smart cards: Coppersmith in the wild</span><span style=\"color: #1155cc; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">. Cryptology ePrint Archive, Paper 2013/599</span></a><span style=\"font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">;</span></p></li><li dir=\"ltr\" style=\"font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre;\"><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 10pt; margin-top: 0pt;\"><a href=\"https://eprint.iacr.org/2019/023\"><span style=\"color: #1155cc; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">Joachim Breitner and Nadia Heninger. (2019). </span><span style=\"color: #1155cc; font-size: 11pt; font-weight: 700; vertical-align: baseline; white-space: pre-wrap;\">Biased Nonce Sense: Lattice Attacks against Weak ECDSA Signatures in Cryptocurrencies</span><span style=\"color: #1155cc; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">. Cryptology ePrint Archive, Paper 2019/023</span></a><span style=\"font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">.</span></p></li></ul><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 10pt; margin-top: 13pt; text-align: justify;\"><span style=\"font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">As a recent example, CVE-2022-26320 </span><a href=\"https://fermatattack.secvuln.info/\"><span style=\"color: #1155cc; font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">found by Hanno B\u00f6ck</span></a><span style=\"font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">, confirmed the importance of checking for known weaknesses. Paranoid has already found similar weak keys independently (via the CheckFermat test). We also believe the project has potential to detect new vulnerabilities since we typically attempt to generalize detections as much as we can.</span></p><h3 dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 10pt; margin-top: 13pt; text-align: justify;\"><span style=\"font-family: Arial; font-size: 14pt; vertical-align: baseline; white-space: pre-wrap;\">Call for Contributions</span></h3><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 10pt; margin-top: 13pt; text-align: justify;\"><span style=\"font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">The goal of open sourcing the library is to increase transparency, allow other ecosystems to use it (such as Certificate Authorities - CAs that need to run similar checks </span><a href=\"https://github.com/cabforum/servercert/blob/main/docs/BR.md#6113-subscriber-key-pair-generation\"><span style=\"color: #1155cc; font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">to meet compliance</span></a><span style=\"font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">), and receive contributions from external researchers. By doing so, </span><span style=\"font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">we\u2019re making a call for contributions</span><span style=\"font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">, in hopes that after researchers find and report crypto vulnerabilities, the checks are added into the library. This way, Google and the rest of the world can respond quickly to new threats.</span></p><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 10pt; margin-top: 13pt; text-align: justify;\"><span style=\"font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">Note, the project is intended to be light in its use of computational resources. The checks must be fast enough to run against large numbers of artifacts and must make sense in real world production context. Projects with less restrictions, such as </span><a href=\"https://github.com/RsaCtfTool/RsaCtfTool\"><span style=\"color: #1155cc; font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">RsaCtfTool</span></a><span style=\"font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">, may be more appropriate for different use cases.</span></p><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 10pt; margin-top: 13pt; text-align: justify;\"><span style=\"font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">In addition to contributions of new checks, improvements to those that already exist are also welcome. By analyzing the released source one can see some problems that are still open. For example, for ECDSA signatures in which the secrets are generated using </span><a href=\"https://github.com/google/paranoid_crypto/blob/main/docs/ecdsa_signature_tests.md#checklcgnoncejavautilrandom\"><span style=\"color: #1155cc; font-family: Arial; font-size: 11pt; font-style: italic; vertical-align: baseline; white-space: pre-wrap;\">java.util.random</span></a><span style=\"font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">, we have a precomputed model that is able to detect this vulnerability given two signatures over </span><span style=\"font-family: Arial; font-size: 11pt; font-style: italic; vertical-align: baseline; white-space: pre-wrap;\">secp256r1</span><span style=\"font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\"> in most cases. However, for larger curves such as </span><span style=\"font-family: Arial; font-size: 11pt; font-style: italic; vertical-align: baseline; white-space: pre-wrap;\">secp384r1</span><span style=\"font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">, we have not been able to precompute a model with significant success.</span></p><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 10pt; margin-top: 13pt; text-align: justify;\"><span style=\"font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">In addition to ECDSA signatures, we also implemented checks for RSA and EC public keys, and general (pseudo) random bit streams. For the latter, we were able to build some improvements on the NIST SP 800-22 test suite and to include </span><a href=\"https://github.com/google/paranoid_crypto/blob/main/docs/randomness_tests.md\"><span style=\"color: #1155cc; font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">additional tests</span></a><span style=\"font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\"> using lattice reduction techniques.</span></p><h3 dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 10pt; margin-top: 13pt; text-align: justify;\"><span style=\"font-family: Arial; font-size: 14pt; vertical-align: baseline; white-space: pre-wrap;\">Preliminary results</span></h3><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 10pt; margin-top: 13pt; text-align: justify;\"><span style=\"font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">Similar to other published works, we have been analyzing the crypto artifacts from </span><a href=\"https://certificate.transparency.dev/\"><span style=\"color: #1155cc; font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">Certificate Transparency</span></a><span style=\"font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\"> (CT), which logs issued website certificates since 2013 with the goal of making them transparent and verifiable. Its database contains more than 7 billion certificates.</span></p><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 10pt; margin-top: 13pt; text-align: justify;\"><span style=\"font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">For the checks of EC public keys and ECDSA signatures, so far, we have not found any weak artifacts in CT. For the RSA public key checks with severities high or critical, we have the following results:</span></p><div class=\"separator\" style=\"clear: both; text-align: center;\"><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/a/AVvXsEgWqAWbi-RH6micd0K4F7JWkXIh8AC1QEuDhvU0H4KnVucLpml61rVR0OyUCJd4cL1hNf17jZcjwwYVNpzAzZD1PeDoEYtotfltGBOOTFt_ND03cqmDkolKHbYQARIMCZ843zAdH3TGQR0M46gW8gEqbCSjd3N7Hixsw-APCZUeJHueHzYRFQAtg2gsHg\" style=\"margin-left: 1em; margin-right: 1em;\"><img alt=\"\" height=\"358\" src=\"https://blogger.googleusercontent.com/img/a/AVvXsEgWqAWbi-RH6micd0K4F7JWkXIh8AC1QEuDhvU0H4KnVucLpml61rVR0OyUCJd4cL1hNf17jZcjwwYVNpzAzZD1PeDoEYtotfltGBOOTFt_ND03cqmDkolKHbYQARIMCZ843zAdH3TGQR0M46gW8gEqbCSjd3N7Hixsw-APCZUeJHueHzYRFQAtg2gsHg=w659-h358\" width=\"659\" /></a></div><br /><br /></div><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 10pt; margin-top: 13pt; text-align: justify;\"><span style=\"font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">Some of these certificates were already expired or revoked. For the ones that were still active (most of the CheckGCD ones), we immediately reported them to the CAs to be revoked. Reporting weak certificates is important to keep the internet secure, as stated by the policies of the CAs. The Let's Encrypt policy, for example, is defined </span><a href=\"https://letsencrypt.org/documents/isrg-cps-v4.0/#4.9.3-procedure-for-revocation-request\"><span style=\"color: #1155cc; font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">here</span></a><span style=\"font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">. In another example, </span><a href=\"https://www.digicert.com/faq/certificate-revocation.htm\"><span style=\"color: #1155cc; font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">Digicert states</span></a><span style=\"font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">:</span></p><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 10pt; margin-left: 36pt; margin-top: 13pt; text-align: justify;\"><span style=\"font-family: Arial; font-size: 11pt; font-style: italic; vertical-align: baseline; white-space: pre-wrap;\">Certificate revocation and certificate problem reporting are an important part of online trust. Certificate revocation is used to prevent the use of certificates with compromised private keys, reduce the threat of malicious websites, and address system-wide attacks and vulnerabilities. As a member of the online community, you play an important role in helping maintain online trust by requesting certificate revocations when needed.</span></p><h3 dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 10pt; margin-top: 13pt; text-align: justify;\"><span style=\"font-family: Arial; font-size: 14pt; vertical-align: baseline; white-space: pre-wrap;\">What is next?</span></h3><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 10pt; margin-top: 13pt; text-align: justify;\"><span style=\"font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">We plan to continue analyzing Certificate Transparency, and now with the help of external contributions, we will continue the implementation of new checks and optimization of those existing.</span></p><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 10pt; margin-top: 13pt; text-align: justify;\"><span style=\"font-family: Arial; font-size: 11pt; text-align: left; vertical-align: baseline; white-space: pre-wrap;\">We are also closely watching the </span><a href=\"https://csrc.nist.gov/Projects/post-quantum-cryptography\" style=\"text-align: left;\"><span style=\"color: #1155cc; font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">NIST Post-Quantum Cryptography Standardization Process</span></a><span style=\"font-family: Arial; font-size: 11pt; text-align: left; vertical-align: baseline; white-space: pre-wrap;\"> for new algorithms that make sense to implement checks. New crypto implementations carry the possibility of new bugs, and it is important that Paranoid is able to detect them.</span></p><h3 dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 10pt; margin-top: 13pt; text-align: justify;\"><br /></h3></span>"
                }
            ],
            "summary": "<span id=\"docs-internal-guid-59f8978a-7fff-3a36-60bb-fcc73e2abdc9\"><h2 dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 10pt; margin-top: 18pt; text-align: justify;\"><span style=\"text-align: left;\"><span style=\"color: #666666;\"><span style=\"font-size: 14px; font-weight: 400;\">Posted by Pedro Barbosa, Security Engineer, and&nbsp;</span></span></span><span style=\"color: #666666;\"><span style=\"font-size: 14px; font-weight: 400;\">Daniel Bleichenbacher, Software Engineer</span></span></h2><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 10pt; margin-top: 0pt; text-align: justify;\"><span style=\"font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">Paranoid is a project to detect well-known weaknesses in large amounts of crypto artifacts, like public keys and digital signatures. On August 3rd 2022 </span><span style=\"font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">we open sourced the library </span><span style=\"font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">containing the checks that we implemented so far (</span><a href=\"https://github.com/google/paranoid_crypto\"><span style=\"color: #1155cc; font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">https://github.com/google/paranoid_crypto</span></a><span style=\"font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">). The library is developed and maintained by members of the Google Security Team, but it is not an officially supported Google product.</span></p><h3 dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 10pt; margin-top: 13pt; text-align: justify;\"><span style=\"font-family: Arial; font-size: 14pt; vertical-align: baseline; white-space: pre-wrap;\">Why the Project?</span></h3><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 10pt; margin-top: 0pt; text-align: justify;\"><span style=\"font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">Crypto artifacts may be generated by systems with implementations unknown to us; we refer to them as \u201cblack boxes.\u201d An artifact may be generated by a black-box if, for example, it was not generated by one of our own tools (such as </span><a href=\"https://github.com/google/tink\"><span style=\"color: #1155cc; font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">Tink</span></a><span style=\"font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">), or by a library that we can inspect and test using </span><a href=\"https://github.com/google/wycheproof\"><span style=\"color: #1155cc; font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">Wycheproof</span></a><span style=\"font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">. Unfortunately, sometimes we end up relying on black-box generated artifacts (e.g. generated by proprietary </span><a href=\"https://en.wikipedia.org/wiki/Hardware_security_module\"><span style=\"color: #1155cc; font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">HSMs</span></a><span style=\"font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">).</span></p><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 10pt; margin-top: 0pt; text-align: justify;\"><span style=\"font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">After the disclosure of the </span><a href=\"https://en.wikipedia.org/wiki/ROCA_vulnerability\"><span style=\"color: #1155cc; font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">ROCA vulnerability</span></a><span style=\"font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">, we wondered what other weaknesses may exist in crypto artifacts generated by black boxes, and what we could do to detect and mitigate them. We then started working on this project in 2019 and created a library to perform checks against large amounts of crypto artifacts.</span></p><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 10pt; margin-top: 0pt; text-align: justify;\"><span style=\"font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">The library contains implementations and optimizations of existing work found in the literature. The literature shows that the generation of artifacts is flawed in some cases - below are examples of publications the library is based on.</span></p><ul style=\"margin-bottom: 0px; margin-top: 0px; padding-inline-start: 48px;\"><li dir=\"ltr\" style=\"font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre;\"><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 10pt; margin-top: 0pt;\"><a href=\"https://eprint.iacr.org/2012/064\"><span style=\"color: #1155cc; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">Arjen K. Lenstra, James P. Hughes, Maxime Augier, Joppe W. Bos, Thorsten Kleinjung, and Christophe Wachter. (2012). </span><span style=\"color: #1155cc; font-size: 11pt; font-weight: 700; vertical-align: baseline; white-space: pre-wrap;\">Ron was wrong, Whit is right</span><span style=\"color: #1155cc; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">. Cryptology ePrint Archive, Paper 2012/064</span></a><span style=\"font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">;</span></p></li><li dir=\"ltr\" style=\"font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre;\"><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 10pt; margin-top: 0pt;\"><a href=\"https://www.usenix.org/conference/usenixsecurity12/technical-sessions/presentation/heninger\"><span style=\"color: #1155cc; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">Nadia Heninger, Zakir Durumeric, Eric Wustrow, and J. Alex Halderman. (2012). </span><span style=\"color: #1155cc; font-size: 11pt; font-weight: 700; vertical-align: baseline; white-space: pre-wrap;\">Mining Your Ps and Qs: Detection of Widespread Weak Keys in Network Devices</span><span style=\"color: #1155cc; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">. USENIX Associations</span></a><span style=\"font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">;</span></p></li><li dir=\"ltr\" style=\"font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre;\"><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 10pt; margin-top: 0pt;\"><a href=\"https://eprint.iacr.org/2013/599\"><span style=\"color: #1155cc; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">Daniel J. Bernstein, Yun-An Chang, Chen-Mou Cheng, Li-Ping Chou, Nadia Heninger, Tanja Lange, and Nicko van Someren. (2013). </span><span style=\"color: #1155cc; font-size: 11pt; font-weight: 700; vertical-align: baseline; white-space: pre-wrap;\">Factoring RSA keys from certified smart cards: Coppersmith in the wild</span><span style=\"color: #1155cc; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">. Cryptology ePrint Archive, Paper 2013/599</span></a><span style=\"font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">;</span></p></li><li dir=\"ltr\" style=\"font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre;\"><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 10pt; margin-top: 0pt;\"><a href=\"https://eprint.iacr.org/2019/023\"><span style=\"color: #1155cc; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">Joachim Breitner and Nadia Heninger. (2019). </span><span style=\"color: #1155cc; font-size: 11pt; font-weight: 700; vertical-align: baseline; white-space: pre-wrap;\">Biased Nonce Sense: Lattice Attacks against Weak ECDSA Signatures in Cryptocurrencies</span><span style=\"color: #1155cc; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">. Cryptology ePrint Archive, Paper 2019/023</span></a><span style=\"font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">.</span></p></li></ul><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 10pt; margin-top: 13pt; text-align: justify;\"><span style=\"font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">As a recent example, CVE-2022-26320 </span><a href=\"https://fermatattack.secvuln.info/\"><span style=\"color: #1155cc; font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">found by Hanno B\u00f6ck</span></a><span style=\"font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">, confirmed the importance of checking for known weaknesses. Paranoid has already found similar weak keys independently (via the CheckFermat test). We also believe the project has potential to detect new vulnerabilities since we typically attempt to generalize detections as much as we can.</span></p><h3 dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 10pt; margin-top: 13pt; text-align: justify;\"><span style=\"font-family: Arial; font-size: 14pt; vertical-align: baseline; white-space: pre-wrap;\">Call for Contributions</span></h3><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 10pt; margin-top: 13pt; text-align: justify;\"><span style=\"font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">The goal of open sourcing the library is to increase transparency, allow other ecosystems to use it (such as Certificate Authorities - CAs that need to run similar checks </span><a href=\"https://github.com/cabforum/servercert/blob/main/docs/BR.md#6113-subscriber-key-pair-generation\"><span style=\"color: #1155cc; font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">to meet compliance</span></a><span style=\"font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">), and receive contributions from external researchers. By doing so, </span><span style=\"font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">we\u2019re making a call for contributions</span><span style=\"font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">, in hopes that after researchers find and report crypto vulnerabilities, the checks are added into the library. This way, Google and the rest of the world can respond quickly to new threats.</span></p><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 10pt; margin-top: 13pt; text-align: justify;\"><span style=\"font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">Note, the project is intended to be light in its use of computational resources. The checks must be fast enough to run against large numbers of artifacts and must make sense in real world production context. Projects with less restrictions, such as </span><a href=\"https://github.com/RsaCtfTool/RsaCtfTool\"><span style=\"color: #1155cc; font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">RsaCtfTool</span></a><span style=\"font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">, may be more appropriate for different use cases.</span></p><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 10pt; margin-top: 13pt; text-align: justify;\"><span style=\"font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">In addition to contributions of new checks, improvements to those that already exist are also welcome. By analyzing the released source one can see some problems that are still open. For example, for ECDSA signatures in which the secrets are generated using </span><a href=\"https://github.com/google/paranoid_crypto/blob/main/docs/ecdsa_signature_tests.md#checklcgnoncejavautilrandom\"><span style=\"color: #1155cc; font-family: Arial; font-size: 11pt; font-style: italic; vertical-align: baseline; white-space: pre-wrap;\">java.util.random</span></a><span style=\"font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">, we have a precomputed model that is able to detect this vulnerability given two signatures over </span><span style=\"font-family: Arial; font-size: 11pt; font-style: italic; vertical-align: baseline; white-space: pre-wrap;\">secp256r1</span><span style=\"font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\"> in most cases. However, for larger curves such as </span><span style=\"font-family: Arial; font-size: 11pt; font-style: italic; vertical-align: baseline; white-space: pre-wrap;\">secp384r1</span><span style=\"font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">, we have not been able to precompute a model with significant success.</span></p><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 10pt; margin-top: 13pt; text-align: justify;\"><span style=\"font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">In addition to ECDSA signatures, we also implemented checks for RSA and EC public keys, and general (pseudo) random bit streams. For the latter, we were able to build some improvements on the NIST SP 800-22 test suite and to include </span><a href=\"https://github.com/google/paranoid_crypto/blob/main/docs/randomness_tests.md\"><span style=\"color: #1155cc; font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">additional tests</span></a><span style=\"font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\"> using lattice reduction techniques.</span></p><h3 dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 10pt; margin-top: 13pt; text-align: justify;\"><span style=\"font-family: Arial; font-size: 14pt; vertical-align: baseline; white-space: pre-wrap;\">Preliminary results</span></h3><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 10pt; margin-top: 13pt; text-align: justify;\"><span style=\"font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">Similar to other published works, we have been analyzing the crypto artifacts from </span><a href=\"https://certificate.transparency.dev/\"><span style=\"color: #1155cc; font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">Certificate Transparency</span></a><span style=\"font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\"> (CT), which logs issued website certificates since 2013 with the goal of making them transparent and verifiable. Its database contains more than 7 billion certificates.</span></p><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 10pt; margin-top: 13pt; text-align: justify;\"><span style=\"font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">For the checks of EC public keys and ECDSA signatures, so far, we have not found any weak artifacts in CT. For the RSA public key checks with severities high or critical, we have the following results:</span></p><div class=\"separator\" style=\"clear: both; text-align: center;\"><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/a/AVvXsEgWqAWbi-RH6micd0K4F7JWkXIh8AC1QEuDhvU0H4KnVucLpml61rVR0OyUCJd4cL1hNf17jZcjwwYVNpzAzZD1PeDoEYtotfltGBOOTFt_ND03cqmDkolKHbYQARIMCZ843zAdH3TGQR0M46gW8gEqbCSjd3N7Hixsw-APCZUeJHueHzYRFQAtg2gsHg\" style=\"margin-left: 1em; margin-right: 1em;\"><img alt=\"\" height=\"358\" src=\"https://blogger.googleusercontent.com/img/a/AVvXsEgWqAWbi-RH6micd0K4F7JWkXIh8AC1QEuDhvU0H4KnVucLpml61rVR0OyUCJd4cL1hNf17jZcjwwYVNpzAzZD1PeDoEYtotfltGBOOTFt_ND03cqmDkolKHbYQARIMCZ843zAdH3TGQR0M46gW8gEqbCSjd3N7Hixsw-APCZUeJHueHzYRFQAtg2gsHg=w659-h358\" width=\"659\" /></a></div><br /><br /></div><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 10pt; margin-top: 13pt; text-align: justify;\"><span style=\"font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">Some of these certificates were already expired or revoked. For the ones that were still active (most of the CheckGCD ones), we immediately reported them to the CAs to be revoked. Reporting weak certificates is important to keep the internet secure, as stated by the policies of the CAs. The Let's Encrypt policy, for example, is defined </span><a href=\"https://letsencrypt.org/documents/isrg-cps-v4.0/#4.9.3-procedure-for-revocation-request\"><span style=\"color: #1155cc; font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">here</span></a><span style=\"font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">. In another example, </span><a href=\"https://www.digicert.com/faq/certificate-revocation.htm\"><span style=\"color: #1155cc; font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">Digicert states</span></a><span style=\"font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">:</span></p><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 10pt; margin-left: 36pt; margin-top: 13pt; text-align: justify;\"><span style=\"font-family: Arial; font-size: 11pt; font-style: italic; vertical-align: baseline; white-space: pre-wrap;\">Certificate revocation and certificate problem reporting are an important part of online trust. Certificate revocation is used to prevent the use of certificates with compromised private keys, reduce the threat of malicious websites, and address system-wide attacks and vulnerabilities. As a member of the online community, you play an important role in helping maintain online trust by requesting certificate revocations when needed.</span></p><h3 dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 10pt; margin-top: 13pt; text-align: justify;\"><span style=\"font-family: Arial; font-size: 14pt; vertical-align: baseline; white-space: pre-wrap;\">What is next?</span></h3><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 10pt; margin-top: 13pt; text-align: justify;\"><span style=\"font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">We plan to continue analyzing Certificate Transparency, and now with the help of external contributions, we will continue the implementation of new checks and optimization of those existing.</span></p><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 10pt; margin-top: 13pt; text-align: justify;\"><span style=\"font-family: Arial; font-size: 11pt; text-align: left; vertical-align: baseline; white-space: pre-wrap;\">We are also closely watching the </span><a href=\"https://csrc.nist.gov/Projects/post-quantum-cryptography\" style=\"text-align: left;\"><span style=\"color: #1155cc; font-family: Arial; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\">NIST Post-Quantum Cryptography Standardization Process</span></a><span style=\"font-family: Arial; font-size: 11pt; text-align: left; vertical-align: baseline; white-space: pre-wrap;\"> for new algorithms that make sense to implement checks. New crypto implementations carry the possibility of new bugs, and it is important that Paranoid is able to detect them.</span></p><h3 dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 10pt; margin-top: 13pt; text-align: justify;\"><br /></h3></span>",
            "links": [
                {
                    "href": "http://security.googleblog.com/feeds/6054475588313755959/comments/default",
                    "rel": "replies",
                    "title": "Post Comments",
                    "type": "application/atom+xml"
                },
                {
                    "href": "http://www.blogger.com/comment.g?blogID=1176949257541686127&postID=6054475588313755959&isPopup=true",
                    "rel": "replies",
                    "title": "0 Comments",
                    "type": "text/html"
                },
                {
                    "href": "http://www.blogger.com/feeds/1176949257541686127/posts/default/6054475588313755959",
                    "rel": "edit",
                    "type": "application/atom+xml"
                },
                {
                    "href": "http://www.blogger.com/feeds/1176949257541686127/posts/default/6054475588313755959",
                    "rel": "self",
                    "type": "application/atom+xml"
                },
                {
                    "href": "http://security.googleblog.com/2022/08/announcing-open-sourcing-of-paranoids.html",
                    "rel": "alternate",
                    "title": "Announcing the Open Sourcing of Paranoid's Library",
                    "type": "text/html"
                }
            ],
            "authors": [
                {
                    "name": "Kimberly Samra",
                    "href": "http://www.blogger.com/profile/17209446531010386292",
                    "email": "noreply@blogger.com"
                }
            ],
            "author_detail": {
                "name": "Kimberly Samra",
                "href": "http://www.blogger.com/profile/17209446531010386292",
                "email": "noreply@blogger.com"
            },
            "href": "",
            "author": "Kimberly Samra (noreply@blogger.com)",
            "gd_image": {
                "height": "16",
                "rel": "http://schemas.google.com/g/2005#thumbnail",
                "src": "https://img1.blogblog.com/img/b16-rounded.gif",
                "width": "16"
            },
            "media_thumbnail": [
                {
                    "height": "72",
                    "url": "https://blogger.googleusercontent.com/img/a/AVvXsEgWqAWbi-RH6micd0K4F7JWkXIh8AC1QEuDhvU0H4KnVucLpml61rVR0OyUCJd4cL1hNf17jZcjwwYVNpzAzZD1PeDoEYtotfltGBOOTFt_ND03cqmDkolKHbYQARIMCZ843zAdH3TGQR0M46gW8gEqbCSjd3N7Hixsw-APCZUeJHueHzYRFQAtg2gsHg=s72-w659-h358-c",
                    "width": "72"
                }
            ],
            "thr_total": "0"
        },
        {
            "id": "tag:blogger.com,1999:blog-1176949257541686127.post-2746219251958853689",
            "guidislink": true,
            "link": "http://security.googleblog.com/2025/03/vulnerability-reward-program-2024-in.html",
            "published": "2025-03-07T14:09:00.006-05:00",
            "published_parsed": [
                2025,
                3,
                7,
                19,
                9,
                0,
                4,
                66,
                0
            ],
            "updated": "2025-03-07T14:09:43.630-05:00",
            "updated_parsed": [
                2025,
                3,
                7,
                19,
                9,
                43,
                4,
                66,
                0
            ],
            "title": "Vulnerability Reward Program: 2024 in Review",
            "title_detail": {
                "type": "text/plain",
                "language": null,
                "base": "http://feeds.feedburner.com/GoogleOnlineSecurityBlog",
                "value": "Vulnerability Reward Program: 2024 in Review"
            },
            "content": [
                {
                    "type": "text/html",
                    "language": null,
                    "base": "http://feeds.feedburner.com/GoogleOnlineSecurityBlog",
                    "value": "<span class=\"byline-author\">Posted by Dirk G\u00f6hmann</span><div><br /></div><div><br /></div><div><br /></div><div><span id=\"docs-internal-guid-8f36334a-7fff-e14f-3329-1ee23b8cf24f\"><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"><span style=\"font-family: Arial, sans-serif; font-size: 11pt; vertical-align: baseline;\">In 2024, our Vulnerability Reward Program confirmed the ongoing value of engaging with the security research community to make Google and its products safer. This was evident as we awarded just shy of $12 million to over 600 researchers based in countries around the globe across all of our programs.</span></p><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"><span style=\"font-family: Arial, sans-serif; font-size: 11pt; vertical-align: baseline;\"><br /></span></p><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"><span style=\"font-family: Arial, sans-serif; font-size: 11pt; vertical-align: baseline;\"><br /></span></p><br /><br /><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"><span style=\"font-family: Arial, sans-serif; font-size: 11pt; font-weight: 700; vertical-align: baseline;\">Vulnerability Reward Program 2024 in Numbers</span></p><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"><span style=\"font-family: Arial, sans-serif; font-size: 11pt; font-weight: 700; vertical-align: baseline;\"><br /></span></p><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgykfc4B2pIcSR8GbN-6N_nP-pVCR2VhnG6USVmkwjkbT70jNidQXhZrDnLp9O4KK2OEFkDVt_ytqzafMIN3oxh4-JHhm43uJsPv60KGuxkkQ9CXlHuNqyT1ecbOhwI-AjnRkK6F0rBKOlZqHN9w6Y-AX26XaBA0hpD68-eXMHGzDrG_-RBDnUiz5tvlxn2/s592/Screenshot%202025-03-07%20at%2011.07.56%E2%80%AFAM.png\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" height=\"301\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgykfc4B2pIcSR8GbN-6N_nP-pVCR2VhnG6USVmkwjkbT70jNidQXhZrDnLp9O4KK2OEFkDVt_ytqzafMIN3oxh4-JHhm43uJsPv60KGuxkkQ9CXlHuNqyT1ecbOhwI-AjnRkK6F0rBKOlZqHN9w6Y-AX26XaBA0hpD68-eXMHGzDrG_-RBDnUiz5tvlxn2/w614-h301/Screenshot%202025-03-07%20at%2011.07.56%E2%80%AFAM.png\" width=\"614\" /></a></div><br /><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEg3oDoS_tOfcvCpevEZkZyp1zz2sTmcMpi1OaqGmz8rYdoDfq3WM8OTn3GssbaicNqrEgLDBjKSW8KDVpT8NmwtQkkfkRGCLocapLY3077MP0f4C2G6gYrps14S-_yhowS2yYPCTBpzUMPmZA9N_ymIYL9bV1xax9n3NlAVNuRxthOLrtQdjSqI0I9e2Xa2/s588/Screenshot%202025-03-07%20at%2011.08.05%E2%80%AFAM.png\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" height=\"310\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEg3oDoS_tOfcvCpevEZkZyp1zz2sTmcMpi1OaqGmz8rYdoDfq3WM8OTn3GssbaicNqrEgLDBjKSW8KDVpT8NmwtQkkfkRGCLocapLY3077MP0f4C2G6gYrps14S-_yhowS2yYPCTBpzUMPmZA9N_ymIYL9bV1xax9n3NlAVNuRxthOLrtQdjSqI0I9e2Xa2/w613-h310/Screenshot%202025-03-07%20at%2011.08.05%E2%80%AFAM.png\" width=\"613\" /></a></div><br /><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"><br /></p><br /><br /><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"><span style=\"font-family: Arial, sans-serif; font-size: 11pt; vertical-align: baseline;\">You can learn about who\u2019s reporting to the Vulnerability Reward Program via our </span><a href=\"https://bughunters.google.com/leaderboard\"><span style=\"color: #1155cc; font-family: Arial, sans-serif; font-size: 11pt; vertical-align: baseline;\">Leaderboard</span></a><span style=\"font-family: Arial, sans-serif; font-size: 11pt; vertical-align: baseline;\"> \u2013 and find out more about </span><a href=\"https://www.linkedin.com/pulse/proud-dads-tale-two-bug-hunting-daughters-responsible-dustin-kirkland-hxwec\"><span style=\"color: #1155cc; font-family: Arial, sans-serif; font-size: 11pt; vertical-align: baseline;\">our youngest security researchers</span></a><span style=\"font-family: Arial, sans-serif; font-size: 11pt; vertical-align: baseline;\"> who\u2019ve recently joined the ranks of Google bug hunters.</span></p><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"><span style=\"font-family: Arial, sans-serif; font-size: 11pt; vertical-align: baseline;\"><br /></span></p><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"><span style=\"font-family: Arial, sans-serif; font-size: 11pt; vertical-align: baseline;\"><br /></span></p><br /><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"><span style=\"font-family: Arial, sans-serif; font-size: 11pt; font-weight: 700; vertical-align: baseline;\">VRP Highlights in 2024</span></p><br /><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"><span style=\"font-family: Arial, sans-serif; font-size: 11pt; vertical-align: baseline;\">In 2024 we made a series of changes and improvements coming to our vulnerability reward programs and related initiatives:</span></p><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"><span style=\"font-family: Arial, sans-serif; font-size: 11pt; vertical-align: baseline;\"><br /></span></p><br /><ul style=\"margin-bottom: 0; margin-top: 0; padding-inline-start: 48px;\"><li dir=\"ltr\" style=\"font-family: Arial, sans-serif; font-size: 11pt; vertical-align: baseline; white-space: pre;\"><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"><span style=\"font-size: 11pt; vertical-align: baseline;\">The Google VRP revamped its </span><a href=\"https://bughunters.google.com/blog/5400513950908416/increasing-google-alphabet-vrp-rewards-up-to-151-515\"><span style=\"color: #1155cc; font-size: 11pt; vertical-align: baseline;\">reward structure</span></a><span style=\"font-size: 11pt; vertical-align: baseline;\">, bumping rewards up to a maximum of $151,515, the Mobile VRP is now offering </span><a href=\"https://bughunters.google.com/blog/5792192022577152/one-year-of-mobile-vrp-reward-increases-and-lessons-learned\"><span style=\"color: #1155cc; font-size: 11pt; vertical-align: baseline;\">up to $300,000</span></a><span style=\"font-size: 11pt; vertical-align: baseline;\"> for critical vulnerabilities in top-tier apps, Cloud VRP has a top-tier </span><a href=\"https://bughunters.google.com/about/rules/google-friends/4849867320328192/cloud-vulnerability-reward-program-rules#reward-amounts\"><span style=\"color: #1155cc; font-size: 11pt; vertical-align: baseline;\">award of up $151,51</span></a><span style=\"color: #1155cc; font-size: 11pt; vertical-align: baseline;\">5</span><span style=\"font-size: 11pt; vertical-align: baseline;\">, and Chrome awards now peak at $250,000 (see the below section on Chrome for details).</span></p></li><li dir=\"ltr\" style=\"font-family: Arial, sans-serif; font-size: 11pt; vertical-align: baseline; white-space: pre;\"><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"><span style=\"font-size: 11pt; vertical-align: baseline;\">We rolled out </span><a href=\"https://bughunters.google.com/blog/6752136441233408/capturing-the-flags-of-the-internet-find-0-days-in-oss-and-write-scanners-to-detect-them\"><span style=\"color: #1155cc; font-size: 11pt; vertical-align: baseline;\">InternetCTF</span></a><span style=\"font-size: 11pt; vertical-align: baseline;\"> \u2013 to get rewarded, discover novel code execution vulnerabilities in open source and provide Tsunami plugin patches for them.</span></p></li><li dir=\"ltr\" style=\"font-family: Arial, sans-serif; font-size: 11pt; vertical-align: baseline; white-space: pre;\"><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"><span style=\"font-size: 11pt; vertical-align: baseline;\">The </span><a href=\"https://bughunters.google.com/about/rules/google-friends/5238081279623168/abuse-vulnerability-reward-program-rules\"><span style=\"color: #1155cc; font-size: 11pt; vertical-align: baseline;\">Abuse VRP</span></a><span style=\"font-size: 11pt; vertical-align: baseline;\"> saw a 40% YoY increase in payouts \u2013 we received over 250 valid bugs targeting abuse and misuse issues in Google products, resulting in over $290,000 in rewards.</span></p></li><li dir=\"ltr\" style=\"font-family: Arial, sans-serif; font-size: 11pt; vertical-align: baseline; white-space: pre;\"><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"><span style=\"font-size: 11pt; vertical-align: baseline;\">To improve the payment process for rewards going to bug hunters, we </span><a href=\"https://bughunters.google.com/blog/6483936851394560/announcing-bugcrowd-as-a-new-bughunters-google-com-payment-option\"><span style=\"color: #1155cc; font-size: 11pt; vertical-align: baseline;\">introduced Bugcrowd</span></a><span style=\"font-size: 11pt; vertical-align: baseline;\"> as an additional payment option on </span><a href=\"http://bughunters.google.com\"><span style=\"color: #1155cc; font-size: 11pt; vertical-align: baseline;\">bughunters.google.com</span></a><span style=\"font-size: 11pt; vertical-align: baseline;\"> alongside the existing standard Google payment option.&nbsp;</span></p></li><li dir=\"ltr\" style=\"font-family: Arial, sans-serif; font-size: 11pt; vertical-align: baseline; white-space: pre;\"><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"><span style=\"font-size: 11pt; vertical-align: baseline;\">We hosted two editions of bugSWAT for training, skill sharing, and, of course, some live hacking \u2013 in August, we had 16 bug hunters in attendance in Las Vegas, and in October, as part of our annual security conference </span><a href=\"https://www.youtube.com/watch?v=ZoymeQXNUK8\"><span style=\"color: #1155cc; font-size: 11pt; vertical-align: baseline;\">ESCAL8 in Malaga, Spain</span></a><span style=\"font-size: 11pt; vertical-align: baseline;\">, we welcomed 40 of our top researchers. Between these two events, our bug hunters were rewarded $370,000 (and plenty of swag).</span></p></li><li dir=\"ltr\" style=\"font-family: Arial, sans-serif; font-size: 11pt; vertical-align: baseline; white-space: pre;\"><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"><span style=\"font-size: 11pt; vertical-align: baseline;\">We doubled down on our commitment to support the next generation of security engineers by hosting four </span><a href=\"https://buildyourfuture.withgoogle.com/events/init.g-cybersecurityworkshopforstudents\"><span style=\"color: #1155cc; font-size: 11pt; vertical-align: baseline;\">init.g workshops</span></a><span style=\"font-size: 11pt; vertical-align: baseline;\"> (</span><a href=\"https://www.unlv.edu/announcement/howard-r-hughes-college-engineering/google-sponsors-initgvegas-student-event-unlv\"><span style=\"color: #1155cc; font-size: 11pt; vertical-align: baseline;\">Las Vegas</span></a><span style=\"font-size: 11pt; vertical-align: baseline;\">, </span><a href=\"https://x.com/GoogleVRP/status/1828861253600625145\"><span style=\"color: #1155cc; font-size: 11pt; vertical-align: baseline;\">S\u00e3o Paulo</span></a><span style=\"font-size: 11pt; vertical-align: baseline;\">, </span><a href=\"https://x.com/GoogleVRP/status/1840743882981609886\"><span style=\"color: #1155cc; font-size: 11pt; vertical-align: baseline;\">Paris</span></a><span style=\"font-size: 11pt; vertical-align: baseline;\">, and </span><a href=\"https://x.com/GoogleVRP/status/1847682261711298886\"><span style=\"color: #1155cc; font-size: 11pt; vertical-align: baseline;\">Malaga</span></a><span style=\"font-size: 11pt; vertical-align: baseline;\">). Follow the </span><a href=\"https://x.com/GoogleVRP\"><span style=\"color: #1155cc; font-size: 11pt; vertical-align: baseline;\">Google VRP channel</span></a><span style=\"font-size: 11pt; vertical-align: baseline;\"> on X to stay tuned on future events.</span></p></li></ul><div><span style=\"font-family: Arial, sans-serif;\"><span style=\"font-size: 14.6667px;\"><br /></span></span></div><div><span style=\"font-family: Arial, sans-serif;\"><span style=\"font-size: 14.6667px;\"><br /></span></span></div><br /><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"><span style=\"font-family: Arial, sans-serif; font-size: 11pt; vertical-align: baseline;\">More detailed updates on selected programs are shared in the following sections.</span></p><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"><span style=\"font-family: Arial, sans-serif; font-size: 11pt; vertical-align: baseline;\"><br /></span></p><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"><span style=\"font-family: Arial, sans-serif; font-size: 11pt; vertical-align: baseline;\"><br /></span></p><br /><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"><span style=\"font-family: Arial, sans-serif; font-size: 11pt; font-weight: 700; vertical-align: baseline;\">Android and Google Devices</span></p><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 12pt; margin-top: 12pt;\"><span style=\"font-family: Arial, sans-serif; font-size: 11pt; vertical-align: baseline;\">In 2024, the Android and Google Devices Security Reward Program and the Google Mobile Vulnerability Reward Program, both part of the broader Google Bug Hunters program, continued their mission to fortify the Android ecosystem, achieving new heights in both impact and severity. We awarded over $3.3 million in rewards to researchers who demonstrated exceptional skill in uncovering critical vulnerabilities within Android and Google mobile applications.&nbsp;</span></p><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 12pt; margin-top: 12pt;\"><span style=\"font-family: Arial, sans-serif; font-size: 11pt; vertical-align: baseline;\"><br /></span></p><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 12pt; margin-top: 12pt;\"><span style=\"font-family: Arial, sans-serif; font-size: 11pt; vertical-align: baseline;\"><br /></span></p><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 12pt; margin-top: 12pt;\"><span style=\"font-family: Arial, sans-serif; font-size: 11pt; vertical-align: baseline;\">The above numbers mark a significant change compared to previous years. Although we saw an 8% decrease in the total number of submissions, there was a 2% increase in the number of critical and high vulnerabilities. In other words, fewer researchers are submitting fewer, but more impactful bugs, and are citing the improved security posture of the Android operating system as the central challenge. This showcases the program's sustained success in hardening Android.</span></p><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 12pt; margin-top: 12pt;\"><span style=\"font-family: Arial, sans-serif; font-size: 11pt; vertical-align: baseline;\"><br /></span></p><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 12pt; margin-top: 12pt;\"><span style=\"font-family: Arial, sans-serif; font-size: 11pt; vertical-align: baseline;\"><br /></span></p><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 12pt; margin-top: 12pt;\"><span style=\"font-family: Arial, sans-serif; font-size: 11pt; vertical-align: baseline;\">This year, we had a heightened focus on Android Automotive OS and WearOS, bringing actual automotive devices to multiple live hacking events and conferences. At ESCAL8, we hosted a live-hacking challenge focused on Pixel devices, resulting in over $75,000 in rewards in one weekend, and the discovery of several memory safety vulnerabilities. To facilitate learning, we launched a new </span><a href=\"https://bughunters.google.com/learn/improving-your-reports/getting-started/6218686980816896/researching-android-app-security#android-app-hacking-course-on-hextree\"><span style=\"color: #1155cc; font-family: Arial, sans-serif; font-size: 11pt; vertical-align: baseline;\">Android hacking course</span></a><span style=\"font-family: Arial, sans-serif; font-size: 11pt; vertical-align: baseline;\"> in collaboration with external security researchers, focused on mobile app security, designed for newcomers and veterans alike. Stay tuned for more.</span></p><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 12pt; margin-top: 12pt;\"><span style=\"font-family: Arial, sans-serif; font-size: 11pt; vertical-align: baseline;\"><br /></span></p><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 12pt; margin-top: 12pt;\"><span style=\"font-family: Arial, sans-serif; font-size: 11pt; vertical-align: baseline;\"><br /></span></p><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 12pt; margin-top: 12pt;\"><span style=\"font-family: Arial, sans-serif; font-size: 11pt; vertical-align: baseline;\">We extend our deepest gratitude to the dedicated researchers who make the Android ecosystem safer. We're proud to work with you! Special thanks to Zinuo Han </span><a href=\"https://x.com/ele7enxxh\"><span style=\"color: #1155cc; font-family: Arial, sans-serif; font-size: 11pt; vertical-align: baseline;\">(@ele7enxxh</span></a><span style=\"font-family: Arial, sans-serif; font-size: 11pt; vertical-align: baseline;\">) for their expertise in Bluetooth security, blunt (</span><a href=\"https://x.com/blunt_qian\"><span style=\"color: #1155cc; font-family: Arial, sans-serif; font-size: 11pt; vertical-align: baseline;\">@blunt_qian</span></a><span style=\"font-family: Arial, sans-serif; font-size: 11pt; vertical-align: baseline;\">) for holding the record for the most valid reports submitted to the Google Play Security Reward Program, and WANG,YONG (</span><a href=\"https://x.com/ThomasKing2014\"><span style=\"color: #1155cc; font-family: Arial, sans-serif; font-size: 11pt; vertical-align: baseline;\">@ThomasKing2014</span></a><span style=\"font-family: Arial, sans-serif; font-size: 11pt; vertical-align: baseline;\">) for groundbreaking research on rooting Android devices with kernel MTE enabled. We also appreciate all researchers who participated in last year's bugSWAT event in M\u00e1laga. Your contributions are invaluable!&nbsp;</span></p><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 12pt; margin-top: 12pt;\"><span style=\"font-family: Arial, sans-serif; font-size: 11pt; vertical-align: baseline;\"><br /></span></p><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 12pt; margin-top: 12pt;\"><span style=\"font-family: Arial, sans-serif; font-size: 11pt; vertical-align: baseline;\"><br /></span></p><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"><span style=\"font-family: Arial, sans-serif; font-size: 11pt; font-weight: 700; vertical-align: baseline;\">Chrome</span></p><br /><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"><span style=\"font-family: Arial, sans-serif; font-size: 11pt; vertical-align: baseline;\">Chrome did some remodeling in 2024 as we </span><a href=\"https://bughunters.google.com/blog/5302044291629056/chrome-vrp-reward-updates-to-incentivize-deeper-research\"><span style=\"color: #1155cc; font-family: Arial, sans-serif; font-size: 11pt; vertical-align: baseline;\">updated our reward amounts and structure to incentivize deeper research</span></a><span style=\"font-family: Arial, sans-serif; font-size: 11pt; vertical-align: baseline;\">. For example, we increased our maximum reward for a single issue to $250,000 for demonstrating RCE in the browser or other non-sandboxed process, and more if done directly without requiring a renderer compromise.&nbsp;</span></p><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"><span style=\"font-family: Arial, sans-serif; font-size: 11pt; vertical-align: baseline;\"><br /></span></p><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"><span style=\"font-family: Arial, sans-serif; font-size: 11pt; vertical-align: baseline;\"><br /></span></p><br /><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"><span style=\"font-family: Arial, sans-serif; font-size: 11pt; vertical-align: baseline;\">In 2024, UAF mitigation MiraclePtr was fully launched across all platforms, and a year after the initial launch, MiraclePtr-protected bugs are no longer being considered exploitable security bugs. In tandem, we increased the </span><a href=\"https://g.co/chrome/vrp#miracleptr-bypass-reward\"><span style=\"color: #1155cc; font-family: Arial, sans-serif; font-size: 11pt; vertical-align: baseline;\">MiraclePtr Bypass Reward </span></a><span style=\"font-family: Arial, sans-serif; font-size: 11pt; vertical-align: baseline;\">to $250,128. Between April and November, we also launched the first and second iterations of the </span><a href=\"https://g.co/chrome/vrp#v8-sandbox-bypass-rewards\"><span style=\"color: #1155cc; font-family: Arial, sans-serif; font-size: 11pt; vertical-align: baseline;\">V8 Sandbox Bypass Rewards</span></a><span style=\"font-family: Arial, sans-serif; font-size: 11pt; vertical-align: baseline;\"> as part of the progression towards the V8 sandbox, eventually becoming a security boundary in Chrome.&nbsp;</span></p><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"><span style=\"font-family: Arial, sans-serif; font-size: 11pt; vertical-align: baseline;\"><br /></span></p><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"><span style=\"font-family: Arial, sans-serif; font-size: 11pt; vertical-align: baseline;\"><br /></span></p><br /><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"><span style=\"font-family: Arial, sans-serif; font-size: 11pt; vertical-align: baseline;\">We received 337 reports of unique, valid security bugs in Chrome during 2024, and awarded 137 Chrome VRP researchers $3.4 million in total. The highest single reward of 2024 was $100,115 and was awarded to Mickey for their report of a </span><a href=\"https://issues.chromium.org/issues/340122160\"><span style=\"color: #1155cc; font-family: Arial, sans-serif; font-size: 11pt; vertical-align: baseline;\">MiraclePtr Bypass</span></a><span style=\"font-family: Arial, sans-serif; font-size: 11pt; vertical-align: baseline;\"> after MiraclePtr was initially enabled across most platforms in Chrome M115 in 2023. We rounded out the year by announcing the </span><a href=\"https://issues.chromium.org/issues/386306231\"><span style=\"color: #1155cc; font-family: Arial, sans-serif; font-size: 11pt; vertical-align: baseline;\">top 20 Chrome VRP researchers for 2024</span></a><span style=\"font-family: Arial, sans-serif; font-size: 11pt; vertical-align: baseline;\">, all of whom were gifted new Chrome VRP swag, featuring our new Chrome VRP mascot, </span><a href=\"https://bsky.app/profile/amyre.bsky.social/post/3lhmecymobk2k\"><span style=\"color: #1155cc; font-family: Arial, sans-serif; font-size: 11pt; vertical-align: baseline;\">Bug</span></a><span style=\"font-family: Arial, sans-serif; font-size: 11pt; vertical-align: baseline;\">.</span></p><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"><span style=\"font-family: Arial, sans-serif; font-size: 11pt; vertical-align: baseline;\"><br /></span></p><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"><span style=\"font-family: Arial, sans-serif; font-size: 11pt; vertical-align: baseline;\"><br /></span></p><br /><br /><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"><span style=\"font-family: Arial, sans-serif; font-size: 11pt; font-weight: 700; vertical-align: baseline;\">Cloud VRP</span></p><br /><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"><span style=\"font-family: Arial, sans-serif; font-size: 11pt; vertical-align: baseline;\">The </span><a href=\"https://cloud.google.com/blog/products/identity-security/google-cloud-launches-new-vulnerability-rewards-program\"><span style=\"color: #1155cc; font-family: Arial, sans-serif; font-size: 11pt; vertical-align: baseline;\">Cloud VRP</span></a><span style=\"font-family: Arial, sans-serif; font-size: 11pt; vertical-align: baseline;\"> launched in October as a Cloud-focused vulnerability reward program dedicated to Google Cloud products and services. As part of the launch, we also updated our product tiering and improved our reward structure to better align our reports with their impact on Google Cloud. This resulted in over 150 Google Cloud products coming under the top two reward tiers, enabling better rewards for our Cloud researchers and a more secure cloud.</span></p><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"><span style=\"font-family: Arial, sans-serif; font-size: 11pt; vertical-align: baseline;\"><br /></span></p><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"><span style=\"font-family: Arial, sans-serif; font-size: 11pt; vertical-align: baseline;\"><br /></span></p><br /><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"><span style=\"font-family: Arial, sans-serif; font-size: 11pt; vertical-align: baseline;\">Since its launch, Google Cloud VRP triaged over 400 reports and filed over 200 unique security vulnerabilities for Google Cloud products and services leading to over $500,000 in researcher rewards.&nbsp;</span></p><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"><span style=\"font-family: Arial, sans-serif; font-size: 11pt; vertical-align: baseline;\"><br /></span></p><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"><span style=\"font-family: Arial, sans-serif; font-size: 11pt; vertical-align: baseline;\"><br /></span></p><br /><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"><span style=\"font-family: Arial, sans-serif; font-size: 11pt; vertical-align: baseline;\">Our highlight last year was launching at the bugSWAT event in M\u00e1laga where we got to meet many of our amazing researchers who make our program so successful! The overwhelming positive feedback from the researcher community continues to propel us to mature Google Cloud VRP further this year. Stay tuned for some exciting announcements!</span></p><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"><span style=\"font-family: Arial, sans-serif; font-size: 11pt; vertical-align: baseline;\"><br /></span></p><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"><span style=\"font-family: Arial, sans-serif; font-size: 11pt; vertical-align: baseline;\"><br /></span></p><br /><br /><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"><span style=\"font-family: Arial, sans-serif; font-size: 11pt; font-weight: 700; vertical-align: baseline;\">Generative AI</span><span style=\"font-family: Arial, sans-serif; font-size: 11pt; font-weight: 700; vertical-align: baseline;\"><br /><br /></span></p><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"><span style=\"font-family: Arial, sans-serif; font-size: 11pt; vertical-align: baseline;\">We\u2019re celebrating an exciting </span><a href=\"https://bughunters.google.com/blog/5474186394206208/celebrating-one-year-of-ai-bug-bounties-at-alphabet\"><span style=\"color: #1155cc; font-family: Arial, sans-serif; font-size: 11pt; vertical-align: baseline;\">first year of AI bug bounties. </span></a><span style=\"font-family: Arial, sans-serif; font-size: 11pt; vertical-align: baseline;\">&nbsp;We received over 150 bug reports \u2013 over $55,000 in rewards so far \u2013 with one-in-six leading to key improvements.&nbsp;</span></p><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"><span style=\"font-family: Arial, sans-serif; font-size: 11pt; vertical-align: baseline;\"><br /></span></p><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"><span style=\"font-family: Arial, sans-serif; font-size: 11pt; vertical-align: baseline;\"><br /></span></p><br /><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"><span style=\"font-family: Arial, sans-serif; font-size: 11pt; vertical-align: baseline;\">We also ran a bugSWAT live-hacking event targeting LLM products and received 35 reports, totaling more than $87,000 \u2013 including issues like \u201c</span><a href=\"https://embracethered.com/blog/posts/2023/google-bard-data-exfiltration/\"><span style=\"color: #1155cc; font-family: Arial, sans-serif; font-size: 11pt; vertical-align: baseline;\">Hacking Google Bard - From Prompt Injection to Data Exfiltration</span></a><span style=\"font-family: Arial, sans-serif; font-size: 11pt; vertical-align: baseline;\">\u201d and \u201c</span><a href=\"https://www.landh.tech/blog/20240304-google-hack-50000/\"><span style=\"color: #1155cc; font-family: Arial, sans-serif; font-size: 11pt; vertical-align: baseline;\">We Hacked Google A.I. for $50,000</span></a><span style=\"font-family: Arial, sans-serif; font-size: 11pt; vertical-align: baseline;\">\u201d.</span></p><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"><span style=\"font-family: Arial, sans-serif; font-size: 11pt; vertical-align: baseline;\"><br /></span></p><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"><span style=\"font-family: Arial, sans-serif; font-size: 11pt; vertical-align: baseline;\"><br /></span></p><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 12pt; margin-top: 12pt;\"><span style=\"font-family: Arial, sans-serif; font-size: 11pt; vertical-align: baseline;\">Keep an eye on Gen AI in 2025 as we focus on expanding scope and sharing additional ways for our researcher community to contribute.&nbsp;</span></p><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"><span style=\"font-family: Arial, sans-serif; font-size: 11pt; vertical-align: baseline;\"><br /><br /></span></p><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"><span style=\"font-family: Arial, sans-serif; font-size: 11pt; font-weight: 700; vertical-align: baseline;\">Looking Forward to 2025</span><span style=\"font-family: Arial, sans-serif; font-size: 11pt; font-weight: 700; vertical-align: baseline;\"><br /><br /></span></p><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"><span style=\"font-family: Arial, sans-serif; font-size: 11pt; vertical-align: baseline;\">In 2025, we will be celebrating 15 years of VRP at Google, during which we have remained fully committed to fostering collaboration, innovation, and transparency with the security community, and will continue to do so in the future. Our goal remains to stay ahead of emerging threats, adapt to evolving technologies, and continue to strengthen the security posture of Google\u2019s products and services.&nbsp;</span></p><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"><span style=\"font-family: Arial, sans-serif; font-size: 11pt; vertical-align: baseline;\"><br /></span></p><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"><span style=\"font-family: Arial, sans-serif; font-size: 11pt; vertical-align: baseline;\"><br /></span></p><br /><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"><span style=\"font-family: Arial, sans-serif; font-size: 11pt; vertical-align: baseline;\">We want to send a huge thank you to our bug hunter community for helping us make Google products and platforms more safe and secure for our users around the world \u2013 and invite researchers not yet engaged with the Vulnerability Reward Program to join us in our mission to keep Google safe!&nbsp;</span></p><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"><span style=\"font-family: Arial, sans-serif; font-size: 11pt; vertical-align: baseline;\"><br /></span></p><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"><span style=\"font-family: Arial, sans-serif; font-size: 11pt; vertical-align: baseline;\"><br /></span></p><br /><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"><span style=\"font-family: Arial, sans-serif; font-size: 11pt; font-style: italic; vertical-align: baseline;\">Thank you to Dirk G\u00f6hmann, Amy Ressler, Eduardo Vela, Jan Keller, Krzysztof Kotowicz, Martin Straka, Michael Cote, Mike Antares, Sri Tulasiram, and Tony Mendez.</span></p><br /><br /><br /><br /><span style=\"font-family: Arial, sans-serif; font-size: 11pt; vertical-align: baseline;\">Tip: Want to be informed of new developments and events around our Vulnerability Reward Program? Follow the </span><a href=\"https://x.com/GoogleVRP\"><span style=\"color: #1155cc; font-family: Arial, sans-serif; font-size: 11pt; vertical-align: baseline;\">Google VRP channel</span></a><span style=\"font-family: Arial, sans-serif; font-size: 11pt; vertical-align: baseline;\"> on X to stay in the loop and be sure to check out the </span><a href=\"https://bughunters.google.com/blog\"><span style=\"color: #1155cc; font-family: Arial, sans-serif; font-size: 11pt; vertical-align: baseline;\">Security Engineering blog,</span></a><span style=\"font-family: Arial, sans-serif; font-size: 11pt; vertical-align: baseline;\"> which covers topics ranging from VRP updates to security practices and vulnerability descriptions (30 posts in 2024)!</span><span style=\"font-family: Arial, sans-serif; font-size: 11pt; vertical-align: baseline;\"><br /></span></span><br /></div>"
                }
            ],
            "summary": "<span class=\"byline-author\">Posted by Dirk G\u00f6hmann</span><div><br /></div><div><br /></div><div><br /></div><div><span id=\"docs-internal-guid-8f36334a-7fff-e14f-3329-1ee23b8cf24f\"><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"><span style=\"font-family: Arial, sans-serif; font-size: 11pt; vertical-align: baseline;\">In 2024, our Vulnerability Reward Program confirmed the ongoing value of engaging with the security research community to make Google and its products safer. This was evident as we awarded just shy of $12 million to over 600 researchers based in countries around the globe across all of our programs.</span></p><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"><span style=\"font-family: Arial, sans-serif; font-size: 11pt; vertical-align: baseline;\"><br /></span></p><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"><span style=\"font-family: Arial, sans-serif; font-size: 11pt; vertical-align: baseline;\"><br /></span></p><br /><br /><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"><span style=\"font-family: Arial, sans-serif; font-size: 11pt; font-weight: 700; vertical-align: baseline;\">Vulnerability Reward Program 2024 in Numbers</span></p><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"><span style=\"font-family: Arial, sans-serif; font-size: 11pt; font-weight: 700; vertical-align: baseline;\"><br /></span></p><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgykfc4B2pIcSR8GbN-6N_nP-pVCR2VhnG6USVmkwjkbT70jNidQXhZrDnLp9O4KK2OEFkDVt_ytqzafMIN3oxh4-JHhm43uJsPv60KGuxkkQ9CXlHuNqyT1ecbOhwI-AjnRkK6F0rBKOlZqHN9w6Y-AX26XaBA0hpD68-eXMHGzDrG_-RBDnUiz5tvlxn2/s592/Screenshot%202025-03-07%20at%2011.07.56%E2%80%AFAM.png\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" height=\"301\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgykfc4B2pIcSR8GbN-6N_nP-pVCR2VhnG6USVmkwjkbT70jNidQXhZrDnLp9O4KK2OEFkDVt_ytqzafMIN3oxh4-JHhm43uJsPv60KGuxkkQ9CXlHuNqyT1ecbOhwI-AjnRkK6F0rBKOlZqHN9w6Y-AX26XaBA0hpD68-eXMHGzDrG_-RBDnUiz5tvlxn2/w614-h301/Screenshot%202025-03-07%20at%2011.07.56%E2%80%AFAM.png\" width=\"614\" /></a></div><br /><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEg3oDoS_tOfcvCpevEZkZyp1zz2sTmcMpi1OaqGmz8rYdoDfq3WM8OTn3GssbaicNqrEgLDBjKSW8KDVpT8NmwtQkkfkRGCLocapLY3077MP0f4C2G6gYrps14S-_yhowS2yYPCTBpzUMPmZA9N_ymIYL9bV1xax9n3NlAVNuRxthOLrtQdjSqI0I9e2Xa2/s588/Screenshot%202025-03-07%20at%2011.08.05%E2%80%AFAM.png\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" height=\"310\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEg3oDoS_tOfcvCpevEZkZyp1zz2sTmcMpi1OaqGmz8rYdoDfq3WM8OTn3GssbaicNqrEgLDBjKSW8KDVpT8NmwtQkkfkRGCLocapLY3077MP0f4C2G6gYrps14S-_yhowS2yYPCTBpzUMPmZA9N_ymIYL9bV1xax9n3NlAVNuRxthOLrtQdjSqI0I9e2Xa2/w613-h310/Screenshot%202025-03-07%20at%2011.08.05%E2%80%AFAM.png\" width=\"613\" /></a></div><br /><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"><br /></p><br /><br /><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"><span style=\"font-family: Arial, sans-serif; font-size: 11pt; vertical-align: baseline;\">You can learn about who\u2019s reporting to the Vulnerability Reward Program via our </span><a href=\"https://bughunters.google.com/leaderboard\"><span style=\"color: #1155cc; font-family: Arial, sans-serif; font-size: 11pt; vertical-align: baseline;\">Leaderboard</span></a><span style=\"font-family: Arial, sans-serif; font-size: 11pt; vertical-align: baseline;\"> \u2013 and find out more about </span><a href=\"https://www.linkedin.com/pulse/proud-dads-tale-two-bug-hunting-daughters-responsible-dustin-kirkland-hxwec\"><span style=\"color: #1155cc; font-family: Arial, sans-serif; font-size: 11pt; vertical-align: baseline;\">our youngest security researchers</span></a><span style=\"font-family: Arial, sans-serif; font-size: 11pt; vertical-align: baseline;\"> who\u2019ve recently joined the ranks of Google bug hunters.</span></p><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"><span style=\"font-family: Arial, sans-serif; font-size: 11pt; vertical-align: baseline;\"><br /></span></p><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"><span style=\"font-family: Arial, sans-serif; font-size: 11pt; vertical-align: baseline;\"><br /></span></p><br /><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"><span style=\"font-family: Arial, sans-serif; font-size: 11pt; font-weight: 700; vertical-align: baseline;\">VRP Highlights in 2024</span></p><br /><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"><span style=\"font-family: Arial, sans-serif; font-size: 11pt; vertical-align: baseline;\">In 2024 we made a series of changes and improvements coming to our vulnerability reward programs and related initiatives:</span></p><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"><span style=\"font-family: Arial, sans-serif; font-size: 11pt; vertical-align: baseline;\"><br /></span></p><br /><ul style=\"margin-bottom: 0; margin-top: 0; padding-inline-start: 48px;\"><li dir=\"ltr\" style=\"font-family: Arial, sans-serif; font-size: 11pt; vertical-align: baseline; white-space: pre;\"><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"><span style=\"font-size: 11pt; vertical-align: baseline;\">The Google VRP revamped its </span><a href=\"https://bughunters.google.com/blog/5400513950908416/increasing-google-alphabet-vrp-rewards-up-to-151-515\"><span style=\"color: #1155cc; font-size: 11pt; vertical-align: baseline;\">reward structure</span></a><span style=\"font-size: 11pt; vertical-align: baseline;\">, bumping rewards up to a maximum of $151,515, the Mobile VRP is now offering </span><a href=\"https://bughunters.google.com/blog/5792192022577152/one-year-of-mobile-vrp-reward-increases-and-lessons-learned\"><span style=\"color: #1155cc; font-size: 11pt; vertical-align: baseline;\">up to $300,000</span></a><span style=\"font-size: 11pt; vertical-align: baseline;\"> for critical vulnerabilities in top-tier apps, Cloud VRP has a top-tier </span><a href=\"https://bughunters.google.com/about/rules/google-friends/4849867320328192/cloud-vulnerability-reward-program-rules#reward-amounts\"><span style=\"color: #1155cc; font-size: 11pt; vertical-align: baseline;\">award of up $151,51</span></a><span style=\"color: #1155cc; font-size: 11pt; vertical-align: baseline;\">5</span><span style=\"font-size: 11pt; vertical-align: baseline;\">, and Chrome awards now peak at $250,000 (see the below section on Chrome for details).</span></p></li><li dir=\"ltr\" style=\"font-family: Arial, sans-serif; font-size: 11pt; vertical-align: baseline; white-space: pre;\"><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"><span style=\"font-size: 11pt; vertical-align: baseline;\">We rolled out </span><a href=\"https://bughunters.google.com/blog/6752136441233408/capturing-the-flags-of-the-internet-find-0-days-in-oss-and-write-scanners-to-detect-them\"><span style=\"color: #1155cc; font-size: 11pt; vertical-align: baseline;\">InternetCTF</span></a><span style=\"font-size: 11pt; vertical-align: baseline;\"> \u2013 to get rewarded, discover novel code execution vulnerabilities in open source and provide Tsunami plugin patches for them.</span></p></li><li dir=\"ltr\" style=\"font-family: Arial, sans-serif; font-size: 11pt; vertical-align: baseline; white-space: pre;\"><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"><span style=\"font-size: 11pt; vertical-align: baseline;\">The </span><a href=\"https://bughunters.google.com/about/rules/google-friends/5238081279623168/abuse-vulnerability-reward-program-rules\"><span style=\"color: #1155cc; font-size: 11pt; vertical-align: baseline;\">Abuse VRP</span></a><span style=\"font-size: 11pt; vertical-align: baseline;\"> saw a 40% YoY increase in payouts \u2013 we received over 250 valid bugs targeting abuse and misuse issues in Google products, resulting in over $290,000 in rewards.</span></p></li><li dir=\"ltr\" style=\"font-family: Arial, sans-serif; font-size: 11pt; vertical-align: baseline; white-space: pre;\"><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"><span style=\"font-size: 11pt; vertical-align: baseline;\">To improve the payment process for rewards going to bug hunters, we </span><a href=\"https://bughunters.google.com/blog/6483936851394560/announcing-bugcrowd-as-a-new-bughunters-google-com-payment-option\"><span style=\"color: #1155cc; font-size: 11pt; vertical-align: baseline;\">introduced Bugcrowd</span></a><span style=\"font-size: 11pt; vertical-align: baseline;\"> as an additional payment option on </span><a href=\"http://bughunters.google.com\"><span style=\"color: #1155cc; font-size: 11pt; vertical-align: baseline;\">bughunters.google.com</span></a><span style=\"font-size: 11pt; vertical-align: baseline;\"> alongside the existing standard Google payment option.&nbsp;</span></p></li><li dir=\"ltr\" style=\"font-family: Arial, sans-serif; font-size: 11pt; vertical-align: baseline; white-space: pre;\"><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"><span style=\"font-size: 11pt; vertical-align: baseline;\">We hosted two editions of bugSWAT for training, skill sharing, and, of course, some live hacking \u2013 in August, we had 16 bug hunters in attendance in Las Vegas, and in October, as part of our annual security conference </span><a href=\"https://www.youtube.com/watch?v=ZoymeQXNUK8\"><span style=\"color: #1155cc; font-size: 11pt; vertical-align: baseline;\">ESCAL8 in Malaga, Spain</span></a><span style=\"font-size: 11pt; vertical-align: baseline;\">, we welcomed 40 of our top researchers. Between these two events, our bug hunters were rewarded $370,000 (and plenty of swag).</span></p></li><li dir=\"ltr\" style=\"font-family: Arial, sans-serif; font-size: 11pt; vertical-align: baseline; white-space: pre;\"><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"><span style=\"font-size: 11pt; vertical-align: baseline;\">We doubled down on our commitment to support the next generation of security engineers by hosting four </span><a href=\"https://buildyourfuture.withgoogle.com/events/init.g-cybersecurityworkshopforstudents\"><span style=\"color: #1155cc; font-size: 11pt; vertical-align: baseline;\">init.g workshops</span></a><span style=\"font-size: 11pt; vertical-align: baseline;\"> (</span><a href=\"https://www.unlv.edu/announcement/howard-r-hughes-college-engineering/google-sponsors-initgvegas-student-event-unlv\"><span style=\"color: #1155cc; font-size: 11pt; vertical-align: baseline;\">Las Vegas</span></a><span style=\"font-size: 11pt; vertical-align: baseline;\">, </span><a href=\"https://x.com/GoogleVRP/status/1828861253600625145\"><span style=\"color: #1155cc; font-size: 11pt; vertical-align: baseline;\">S\u00e3o Paulo</span></a><span style=\"font-size: 11pt; vertical-align: baseline;\">, </span><a href=\"https://x.com/GoogleVRP/status/1840743882981609886\"><span style=\"color: #1155cc; font-size: 11pt; vertical-align: baseline;\">Paris</span></a><span style=\"font-size: 11pt; vertical-align: baseline;\">, and </span><a href=\"https://x.com/GoogleVRP/status/1847682261711298886\"><span style=\"color: #1155cc; font-size: 11pt; vertical-align: baseline;\">Malaga</span></a><span style=\"font-size: 11pt; vertical-align: baseline;\">). Follow the </span><a href=\"https://x.com/GoogleVRP\"><span style=\"color: #1155cc; font-size: 11pt; vertical-align: baseline;\">Google VRP channel</span></a><span style=\"font-size: 11pt; vertical-align: baseline;\"> on X to stay tuned on future events.</span></p></li></ul><div><span style=\"font-family: Arial, sans-serif;\"><span style=\"font-size: 14.6667px;\"><br /></span></span></div><div><span style=\"font-family: Arial, sans-serif;\"><span style=\"font-size: 14.6667px;\"><br /></span></span></div><br /><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"><span style=\"font-family: Arial, sans-serif; font-size: 11pt; vertical-align: baseline;\">More detailed updates on selected programs are shared in the following sections.</span></p><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"><span style=\"font-family: Arial, sans-serif; font-size: 11pt; vertical-align: baseline;\"><br /></span></p><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"><span style=\"font-family: Arial, sans-serif; font-size: 11pt; vertical-align: baseline;\"><br /></span></p><br /><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"><span style=\"font-family: Arial, sans-serif; font-size: 11pt; font-weight: 700; vertical-align: baseline;\">Android and Google Devices</span></p><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 12pt; margin-top: 12pt;\"><span style=\"font-family: Arial, sans-serif; font-size: 11pt; vertical-align: baseline;\">In 2024, the Android and Google Devices Security Reward Program and the Google Mobile Vulnerability Reward Program, both part of the broader Google Bug Hunters program, continued their mission to fortify the Android ecosystem, achieving new heights in both impact and severity. We awarded over $3.3 million in rewards to researchers who demonstrated exceptional skill in uncovering critical vulnerabilities within Android and Google mobile applications.&nbsp;</span></p><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 12pt; margin-top: 12pt;\"><span style=\"font-family: Arial, sans-serif; font-size: 11pt; vertical-align: baseline;\"><br /></span></p><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 12pt; margin-top: 12pt;\"><span style=\"font-family: Arial, sans-serif; font-size: 11pt; vertical-align: baseline;\"><br /></span></p><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 12pt; margin-top: 12pt;\"><span style=\"font-family: Arial, sans-serif; font-size: 11pt; vertical-align: baseline;\">The above numbers mark a significant change compared to previous years. Although we saw an 8% decrease in the total number of submissions, there was a 2% increase in the number of critical and high vulnerabilities. In other words, fewer researchers are submitting fewer, but more impactful bugs, and are citing the improved security posture of the Android operating system as the central challenge. This showcases the program's sustained success in hardening Android.</span></p><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 12pt; margin-top: 12pt;\"><span style=\"font-family: Arial, sans-serif; font-size: 11pt; vertical-align: baseline;\"><br /></span></p><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 12pt; margin-top: 12pt;\"><span style=\"font-family: Arial, sans-serif; font-size: 11pt; vertical-align: baseline;\"><br /></span></p><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 12pt; margin-top: 12pt;\"><span style=\"font-family: Arial, sans-serif; font-size: 11pt; vertical-align: baseline;\">This year, we had a heightened focus on Android Automotive OS and WearOS, bringing actual automotive devices to multiple live hacking events and conferences. At ESCAL8, we hosted a live-hacking challenge focused on Pixel devices, resulting in over $75,000 in rewards in one weekend, and the discovery of several memory safety vulnerabilities. To facilitate learning, we launched a new </span><a href=\"https://bughunters.google.com/learn/improving-your-reports/getting-started/6218686980816896/researching-android-app-security#android-app-hacking-course-on-hextree\"><span style=\"color: #1155cc; font-family: Arial, sans-serif; font-size: 11pt; vertical-align: baseline;\">Android hacking course</span></a><span style=\"font-family: Arial, sans-serif; font-size: 11pt; vertical-align: baseline;\"> in collaboration with external security researchers, focused on mobile app security, designed for newcomers and veterans alike. Stay tuned for more.</span></p><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 12pt; margin-top: 12pt;\"><span style=\"font-family: Arial, sans-serif; font-size: 11pt; vertical-align: baseline;\"><br /></span></p><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 12pt; margin-top: 12pt;\"><span style=\"font-family: Arial, sans-serif; font-size: 11pt; vertical-align: baseline;\"><br /></span></p><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 12pt; margin-top: 12pt;\"><span style=\"font-family: Arial, sans-serif; font-size: 11pt; vertical-align: baseline;\">We extend our deepest gratitude to the dedicated researchers who make the Android ecosystem safer. We're proud to work with you! Special thanks to Zinuo Han </span><a href=\"https://x.com/ele7enxxh\"><span style=\"color: #1155cc; font-family: Arial, sans-serif; font-size: 11pt; vertical-align: baseline;\">(@ele7enxxh</span></a><span style=\"font-family: Arial, sans-serif; font-size: 11pt; vertical-align: baseline;\">) for their expertise in Bluetooth security, blunt (</span><a href=\"https://x.com/blunt_qian\"><span style=\"color: #1155cc; font-family: Arial, sans-serif; font-size: 11pt; vertical-align: baseline;\">@blunt_qian</span></a><span style=\"font-family: Arial, sans-serif; font-size: 11pt; vertical-align: baseline;\">) for holding the record for the most valid reports submitted to the Google Play Security Reward Program, and WANG,YONG (</span><a href=\"https://x.com/ThomasKing2014\"><span style=\"color: #1155cc; font-family: Arial, sans-serif; font-size: 11pt; vertical-align: baseline;\">@ThomasKing2014</span></a><span style=\"font-family: Arial, sans-serif; font-size: 11pt; vertical-align: baseline;\">) for groundbreaking research on rooting Android devices with kernel MTE enabled. We also appreciate all researchers who participated in last year's bugSWAT event in M\u00e1laga. Your contributions are invaluable!&nbsp;</span></p><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 12pt; margin-top: 12pt;\"><span style=\"font-family: Arial, sans-serif; font-size: 11pt; vertical-align: baseline;\"><br /></span></p><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 12pt; margin-top: 12pt;\"><span style=\"font-family: Arial, sans-serif; font-size: 11pt; vertical-align: baseline;\"><br /></span></p><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"><span style=\"font-family: Arial, sans-serif; font-size: 11pt; font-weight: 700; vertical-align: baseline;\">Chrome</span></p><br /><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"><span style=\"font-family: Arial, sans-serif; font-size: 11pt; vertical-align: baseline;\">Chrome did some remodeling in 2024 as we </span><a href=\"https://bughunters.google.com/blog/5302044291629056/chrome-vrp-reward-updates-to-incentivize-deeper-research\"><span style=\"color: #1155cc; font-family: Arial, sans-serif; font-size: 11pt; vertical-align: baseline;\">updated our reward amounts and structure to incentivize deeper research</span></a><span style=\"font-family: Arial, sans-serif; font-size: 11pt; vertical-align: baseline;\">. For example, we increased our maximum reward for a single issue to $250,000 for demonstrating RCE in the browser or other non-sandboxed process, and more if done directly without requiring a renderer compromise.&nbsp;</span></p><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"><span style=\"font-family: Arial, sans-serif; font-size: 11pt; vertical-align: baseline;\"><br /></span></p><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"><span style=\"font-family: Arial, sans-serif; font-size: 11pt; vertical-align: baseline;\"><br /></span></p><br /><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"><span style=\"font-family: Arial, sans-serif; font-size: 11pt; vertical-align: baseline;\">In 2024, UAF mitigation MiraclePtr was fully launched across all platforms, and a year after the initial launch, MiraclePtr-protected bugs are no longer being considered exploitable security bugs. In tandem, we increased the </span><a href=\"https://g.co/chrome/vrp#miracleptr-bypass-reward\"><span style=\"color: #1155cc; font-family: Arial, sans-serif; font-size: 11pt; vertical-align: baseline;\">MiraclePtr Bypass Reward </span></a><span style=\"font-family: Arial, sans-serif; font-size: 11pt; vertical-align: baseline;\">to $250,128. Between April and November, we also launched the first and second iterations of the </span><a href=\"https://g.co/chrome/vrp#v8-sandbox-bypass-rewards\"><span style=\"color: #1155cc; font-family: Arial, sans-serif; font-size: 11pt; vertical-align: baseline;\">V8 Sandbox Bypass Rewards</span></a><span style=\"font-family: Arial, sans-serif; font-size: 11pt; vertical-align: baseline;\"> as part of the progression towards the V8 sandbox, eventually becoming a security boundary in Chrome.&nbsp;</span></p><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"><span style=\"font-family: Arial, sans-serif; font-size: 11pt; vertical-align: baseline;\"><br /></span></p><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"><span style=\"font-family: Arial, sans-serif; font-size: 11pt; vertical-align: baseline;\"><br /></span></p><br /><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"><span style=\"font-family: Arial, sans-serif; font-size: 11pt; vertical-align: baseline;\">We received 337 reports of unique, valid security bugs in Chrome during 2024, and awarded 137 Chrome VRP researchers $3.4 million in total. The highest single reward of 2024 was $100,115 and was awarded to Mickey for their report of a </span><a href=\"https://issues.chromium.org/issues/340122160\"><span style=\"color: #1155cc; font-family: Arial, sans-serif; font-size: 11pt; vertical-align: baseline;\">MiraclePtr Bypass</span></a><span style=\"font-family: Arial, sans-serif; font-size: 11pt; vertical-align: baseline;\"> after MiraclePtr was initially enabled across most platforms in Chrome M115 in 2023. We rounded out the year by announcing the </span><a href=\"https://issues.chromium.org/issues/386306231\"><span style=\"color: #1155cc; font-family: Arial, sans-serif; font-size: 11pt; vertical-align: baseline;\">top 20 Chrome VRP researchers for 2024</span></a><span style=\"font-family: Arial, sans-serif; font-size: 11pt; vertical-align: baseline;\">, all of whom were gifted new Chrome VRP swag, featuring our new Chrome VRP mascot, </span><a href=\"https://bsky.app/profile/amyre.bsky.social/post/3lhmecymobk2k\"><span style=\"color: #1155cc; font-family: Arial, sans-serif; font-size: 11pt; vertical-align: baseline;\">Bug</span></a><span style=\"font-family: Arial, sans-serif; font-size: 11pt; vertical-align: baseline;\">.</span></p><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"><span style=\"font-family: Arial, sans-serif; font-size: 11pt; vertical-align: baseline;\"><br /></span></p><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"><span style=\"font-family: Arial, sans-serif; font-size: 11pt; vertical-align: baseline;\"><br /></span></p><br /><br /><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"><span style=\"font-family: Arial, sans-serif; font-size: 11pt; font-weight: 700; vertical-align: baseline;\">Cloud VRP</span></p><br /><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"><span style=\"font-family: Arial, sans-serif; font-size: 11pt; vertical-align: baseline;\">The </span><a href=\"https://cloud.google.com/blog/products/identity-security/google-cloud-launches-new-vulnerability-rewards-program\"><span style=\"color: #1155cc; font-family: Arial, sans-serif; font-size: 11pt; vertical-align: baseline;\">Cloud VRP</span></a><span style=\"font-family: Arial, sans-serif; font-size: 11pt; vertical-align: baseline;\"> launched in October as a Cloud-focused vulnerability reward program dedicated to Google Cloud products and services. As part of the launch, we also updated our product tiering and improved our reward structure to better align our reports with their impact on Google Cloud. This resulted in over 150 Google Cloud products coming under the top two reward tiers, enabling better rewards for our Cloud researchers and a more secure cloud.</span></p><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"><span style=\"font-family: Arial, sans-serif; font-size: 11pt; vertical-align: baseline;\"><br /></span></p><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"><span style=\"font-family: Arial, sans-serif; font-size: 11pt; vertical-align: baseline;\"><br /></span></p><br /><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"><span style=\"font-family: Arial, sans-serif; font-size: 11pt; vertical-align: baseline;\">Since its launch, Google Cloud VRP triaged over 400 reports and filed over 200 unique security vulnerabilities for Google Cloud products and services leading to over $500,000 in researcher rewards.&nbsp;</span></p><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"><span style=\"font-family: Arial, sans-serif; font-size: 11pt; vertical-align: baseline;\"><br /></span></p><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"><span style=\"font-family: Arial, sans-serif; font-size: 11pt; vertical-align: baseline;\"><br /></span></p><br /><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"><span style=\"font-family: Arial, sans-serif; font-size: 11pt; vertical-align: baseline;\">Our highlight last year was launching at the bugSWAT event in M\u00e1laga where we got to meet many of our amazing researchers who make our program so successful! The overwhelming positive feedback from the researcher community continues to propel us to mature Google Cloud VRP further this year. Stay tuned for some exciting announcements!</span></p><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"><span style=\"font-family: Arial, sans-serif; font-size: 11pt; vertical-align: baseline;\"><br /></span></p><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"><span style=\"font-family: Arial, sans-serif; font-size: 11pt; vertical-align: baseline;\"><br /></span></p><br /><br /><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"><span style=\"font-family: Arial, sans-serif; font-size: 11pt; font-weight: 700; vertical-align: baseline;\">Generative AI</span><span style=\"font-family: Arial, sans-serif; font-size: 11pt; font-weight: 700; vertical-align: baseline;\"><br /><br /></span></p><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"><span style=\"font-family: Arial, sans-serif; font-size: 11pt; vertical-align: baseline;\">We\u2019re celebrating an exciting </span><a href=\"https://bughunters.google.com/blog/5474186394206208/celebrating-one-year-of-ai-bug-bounties-at-alphabet\"><span style=\"color: #1155cc; font-family: Arial, sans-serif; font-size: 11pt; vertical-align: baseline;\">first year of AI bug bounties. </span></a><span style=\"font-family: Arial, sans-serif; font-size: 11pt; vertical-align: baseline;\">&nbsp;We received over 150 bug reports \u2013 over $55,000 in rewards so far \u2013 with one-in-six leading to key improvements.&nbsp;</span></p><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"><span style=\"font-family: Arial, sans-serif; font-size: 11pt; vertical-align: baseline;\"><br /></span></p><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"><span style=\"font-family: Arial, sans-serif; font-size: 11pt; vertical-align: baseline;\"><br /></span></p><br /><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"><span style=\"font-family: Arial, sans-serif; font-size: 11pt; vertical-align: baseline;\">We also ran a bugSWAT live-hacking event targeting LLM products and received 35 reports, totaling more than $87,000 \u2013 including issues like \u201c</span><a href=\"https://embracethered.com/blog/posts/2023/google-bard-data-exfiltration/\"><span style=\"color: #1155cc; font-family: Arial, sans-serif; font-size: 11pt; vertical-align: baseline;\">Hacking Google Bard - From Prompt Injection to Data Exfiltration</span></a><span style=\"font-family: Arial, sans-serif; font-size: 11pt; vertical-align: baseline;\">\u201d and \u201c</span><a href=\"https://www.landh.tech/blog/20240304-google-hack-50000/\"><span style=\"color: #1155cc; font-family: Arial, sans-serif; font-size: 11pt; vertical-align: baseline;\">We Hacked Google A.I. for $50,000</span></a><span style=\"font-family: Arial, sans-serif; font-size: 11pt; vertical-align: baseline;\">\u201d.</span></p><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"><span style=\"font-family: Arial, sans-serif; font-size: 11pt; vertical-align: baseline;\"><br /></span></p><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"><span style=\"font-family: Arial, sans-serif; font-size: 11pt; vertical-align: baseline;\"><br /></span></p><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 12pt; margin-top: 12pt;\"><span style=\"font-family: Arial, sans-serif; font-size: 11pt; vertical-align: baseline;\">Keep an eye on Gen AI in 2025 as we focus on expanding scope and sharing additional ways for our researcher community to contribute.&nbsp;</span></p><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"><span style=\"font-family: Arial, sans-serif; font-size: 11pt; vertical-align: baseline;\"><br /><br /></span></p><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"><span style=\"font-family: Arial, sans-serif; font-size: 11pt; font-weight: 700; vertical-align: baseline;\">Looking Forward to 2025</span><span style=\"font-family: Arial, sans-serif; font-size: 11pt; font-weight: 700; vertical-align: baseline;\"><br /><br /></span></p><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"><span style=\"font-family: Arial, sans-serif; font-size: 11pt; vertical-align: baseline;\">In 2025, we will be celebrating 15 years of VRP at Google, during which we have remained fully committed to fostering collaboration, innovation, and transparency with the security community, and will continue to do so in the future. Our goal remains to stay ahead of emerging threats, adapt to evolving technologies, and continue to strengthen the security posture of Google\u2019s products and services.&nbsp;</span></p><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"><span style=\"font-family: Arial, sans-serif; font-size: 11pt; vertical-align: baseline;\"><br /></span></p><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"><span style=\"font-family: Arial, sans-serif; font-size: 11pt; vertical-align: baseline;\"><br /></span></p><br /><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"><span style=\"font-family: Arial, sans-serif; font-size: 11pt; vertical-align: baseline;\">We want to send a huge thank you to our bug hunter community for helping us make Google products and platforms more safe and secure for our users around the world \u2013 and invite researchers not yet engaged with the Vulnerability Reward Program to join us in our mission to keep Google safe!&nbsp;</span></p><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"><span style=\"font-family: Arial, sans-serif; font-size: 11pt; vertical-align: baseline;\"><br /></span></p><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"><span style=\"font-family: Arial, sans-serif; font-size: 11pt; vertical-align: baseline;\"><br /></span></p><br /><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"><span style=\"font-family: Arial, sans-serif; font-size: 11pt; font-style: italic; vertical-align: baseline;\">Thank you to Dirk G\u00f6hmann, Amy Ressler, Eduardo Vela, Jan Keller, Krzysztof Kotowicz, Martin Straka, Michael Cote, Mike Antares, Sri Tulasiram, and Tony Mendez.</span></p><br /><br /><br /><br /><span style=\"font-family: Arial, sans-serif; font-size: 11pt; vertical-align: baseline;\">Tip: Want to be informed of new developments and events around our Vulnerability Reward Program? Follow the </span><a href=\"https://x.com/GoogleVRP\"><span style=\"color: #1155cc; font-family: Arial, sans-serif; font-size: 11pt; vertical-align: baseline;\">Google VRP channel</span></a><span style=\"font-family: Arial, sans-serif; font-size: 11pt; vertical-align: baseline;\"> on X to stay in the loop and be sure to check out the </span><a href=\"https://bughunters.google.com/blog\"><span style=\"color: #1155cc; font-family: Arial, sans-serif; font-size: 11pt; vertical-align: baseline;\">Security Engineering blog,</span></a><span style=\"font-family: Arial, sans-serif; font-size: 11pt; vertical-align: baseline;\"> which covers topics ranging from VRP updates to security practices and vulnerability descriptions (30 posts in 2024)!</span><span style=\"font-family: Arial, sans-serif; font-size: 11pt; vertical-align: baseline;\"><br /></span></span><br /></div>",
            "links": [
                {
                    "href": "http://security.googleblog.com/feeds/2746219251958853689/comments/default",
                    "rel": "replies",
                    "title": "Post Comments",
                    "type": "application/atom+xml"
                },
                {
                    "href": "http://www.blogger.com/comment/fullpage/post/1176949257541686127/2746219251958853689?isPopup=true",
                    "rel": "replies",
                    "title": "0 Comments",
                    "type": "text/html"
                },
                {
                    "href": "http://www.blogger.com/feeds/1176949257541686127/posts/default/2746219251958853689",
                    "rel": "edit",
                    "type": "application/atom+xml"
                },
                {
                    "href": "http://www.blogger.com/feeds/1176949257541686127/posts/default/2746219251958853689",
                    "rel": "self",
                    "type": "application/atom+xml"
                },
                {
                    "href": "http://security.googleblog.com/2025/03/vulnerability-reward-program-2024-in.html",
                    "rel": "alternate",
                    "title": "Vulnerability Reward Program: 2024 in Review",
                    "type": "text/html"
                }
            ],
            "authors": [
                {
                    "name": "Kimberly Samra",
                    "href": "http://www.blogger.com/profile/17209446531010386292",
                    "email": "noreply@blogger.com"
                }
            ],
            "author_detail": {
                "name": "Kimberly Samra",
                "href": "http://www.blogger.com/profile/17209446531010386292",
                "email": "noreply@blogger.com"
            },
            "href": "",
            "author": "Kimberly Samra (noreply@blogger.com)",
            "gd_image": {
                "height": "16",
                "rel": "http://schemas.google.com/g/2005#thumbnail",
                "src": "https://img1.blogblog.com/img/b16-rounded.gif",
                "width": "16"
            },
            "media_thumbnail": [
                {
                    "height": "72",
                    "url": "https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgykfc4B2pIcSR8GbN-6N_nP-pVCR2VhnG6USVmkwjkbT70jNidQXhZrDnLp9O4KK2OEFkDVt_ytqzafMIN3oxh4-JHhm43uJsPv60KGuxkkQ9CXlHuNqyT1ecbOhwI-AjnRkK6F0rBKOlZqHN9w6Y-AX26XaBA0hpD68-eXMHGzDrG_-RBDnUiz5tvlxn2/s72-w614-h301-c/Screenshot%202025-03-07%20at%2011.07.56%E2%80%AFAM.png",
                    "width": "72"
                }
            ],
            "thr_total": "0"
        },
        {
            "id": "tag:blogger.com,1999:blog-1176949257541686127.post-7487222855150187635",
            "guidislink": true,
            "link": "http://security.googleblog.com/2025/03/new-ai-powered-scam-detection-features.html",
            "published": "2025-03-04T11:59:00.000-05:00",
            "published_parsed": [
                2025,
                3,
                4,
                16,
                59,
                0,
                1,
                63,
                0
            ],
            "updated": "2025-03-04T11:59:32.949-05:00",
            "updated_parsed": [
                2025,
                3,
                4,
                16,
                59,
                32,
                1,
                63,
                0
            ],
            "tags": [
                {
                    "term": "android",
                    "scheme": "http://www.blogger.com/atom/ns#",
                    "label": null
                },
                {
                    "term": "android security",
                    "scheme": "http://www.blogger.com/atom/ns#",
                    "label": null
                },
                {
                    "term": "pixel",
                    "scheme": "http://www.blogger.com/atom/ns#",
                    "label": null
                }
            ],
            "title": "New AI-Powered Scam Detection Features to Help Protect You on Android",
            "title_detail": {
                "type": "text/plain",
                "language": null,
                "base": "http://feeds.feedburner.com/GoogleOnlineSecurityBlog",
                "value": "New AI-Powered Scam Detection Features to Help Protect You on Android"
            },
            "content": [
                {
                    "type": "text/html",
                    "language": null,
                    "base": "http://feeds.feedburner.com/GoogleOnlineSecurityBlog",
                    "value": "<span class=\"byline-author\">Posted by Lyubov Farafonova, Product Manager, Phone by Google; Alberto Pastor Nieto, Sr. Product Manager Google Messages and RCS Spam and Abuse</span>\n\n<p>\nGoogle has been at the forefront of protecting users from the ever-growing threat of <a href=\"https://blog.google/products/android/android-scam-and-phishing-protection/\">scams</a> and <a href=\"https://blog.google/products/android/how-android-helps-you-stay-safe-from-mobile-fraud-apps/\">fraud</a> with <a href=\"https://security.googleblog.com/2024/05/io-2024-whats-new-in-android-security.html\">cutting-edge technologies and security expertise</a> for years. In 2024, scammers used increasingly sophisticated tactics and generative AI-powered tools to steal more than $1 trillion from mobile consumers globally, <a href=\"https://www.gasa.org/post/global-state-of-scams-report-2024-1-trillion-stolen-in-12-months-gasa-feedzai\">according to the Global Anti-Scam Alliance</a>. And with the majority of scams now delivered through phone calls and text messages, we\u2019ve been focused on making Android\u2019s safeguards even more intelligent with powerful Google AI to help keep your financial information and data safe.\n</p>\n<p>\nToday, we\u2019re launching two new industry-leading AI-powered scam detection features for calls and text messages, designed to protect users from increasingly complex and damaging scams. These features specifically target conversational scams, which can often appear initially harmless before evolving into harmful situations. <br /><br />To enhance our detection capabilities, we partnered with financial institutions around the world to better understand the latest advanced and most common scams their customers are facing. For example, users are experiencing more conversational text scams that begin innocently, but gradually manipulate victims into sharing sensitive data, handing over funds, or switching to other messaging apps. And more phone calling scammers are using spoofing techniques to hide their real numbers and pretend to be trusted companies. \n</p>\n<p>\nTraditional spam protections are focused on protecting users before the conversation starts, and are less effective against these latest tactics from scammers that turn dangerous mid-conversation and use social engineering techniques. To better protect users, we invested in new, intelligent AI models capable of detecting suspicious patterns and delivering real-time warnings over the course of a conversation, all while prioritizing user privacy. \n</p>\n<h3>Scam Detection for messages</h3>\n<p>\nWe\u2019re building on our <a href=\"https://security.googleblog.com/2024/10/5-new-protections-on-google-messages.html\">enhancements to existing Spam Protection in Google Messages</a> that strengthen defenses against job and delivery scams, which are continuing to roll out to users. We\u2019re now introducing Scam Detection to detect a wider range of fraudulent activities. <br /><br />Scam Detection in Google Messages uses powerful Google AI to proactively address conversational scams by providing real-time detection even after initial messages are received. When the on-device AI detects a suspicious pattern in SMS, MMS, and RCS messages, users will now get a message warning of a likely scam with an option to dismiss or report and block the sender. \n</p>\n<div class=\"separator\" style=\"clear: both;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgIyU-fEhIoz3CIVleuuPXK3rusITDaVfONA_0NcCiYpV-dAYbd16jETa9rSutRPm5d5QIT8dL1iKUeNfHq2XWp6wcHTnMR9bKJs68P4bd82EWSc6EGFFBUxZbajBi75SxlalFNQZEBTazAk0g-kNqBHqLtF3-pnLjS1rlnJcexy-lyxWh_5LXxswKb3wEg/s1078/Pixel%209%20Pro_Scam%20Detection%20-%20Google%20Messages.png\" style=\"display: block; padding: 1em 0; text-align: center;\"><img alt=\"\" border=\"0\" height=\"600\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgIyU-fEhIoz3CIVleuuPXK3rusITDaVfONA_0NcCiYpV-dAYbd16jETa9rSutRPm5d5QIT8dL1iKUeNfHq2XWp6wcHTnMR9bKJs68P4bd82EWSc6EGFFBUxZbajBi75SxlalFNQZEBTazAk0g-kNqBHqLtF3-pnLjS1rlnJcexy-lyxWh_5LXxswKb3wEg/s600/Pixel%209%20Pro_Scam%20Detection%20-%20Google%20Messages.png\" /></a></div>\n\n</p>\n<p>\nAs part of the Spam Protection setting, Scam Detection on Google Messages is on by default and only applies to conversations with non-contacts. Your privacy is protected with Scam Detection in Google Messages, with all message <a href=\"https://support.google.com/messages/answer/9327903?hl=en\">processing remaining on-device</a>. Your conversations remain private to you; if you choose to report a conversation to help reduce widespread spam, only sender details and recent messages with that sender are shared with Google and carriers. You can turn off Spam Protection, which includes Scam Detection, in your Google Messages at any time.\n</p>\n<p>\nScam Detection in Google Messages is launching in English first in the U.S., U.K. and Canada and will expand to more countries soon. \n</p>\n<h3>Scam Detection for calls</h3>\n<p>\nMore than half of Americans <a href=\"https://services.google.com/fh/files/misc/2025_phone_by_google_call_scam_report.pdf\">reported</a> receiving at least one scam call per day in 2024. To combat the rise of sophisticated conversational scams that deceive victims over the course of a phone call, we <a href=\"https://security.googleblog.com/2024/11/new-real-time-protections-on-Android.html\">introduced</a> Scam Detection late last year to U.S.-based English-speaking Phone by Google public beta users on Pixel phones. \n</p>\n<p>\nWe use AI models processed on-device to analyze conversations in real-time and warn users of potential scams. If a caller, for example, tries to get you to provide payment via gift cards to complete a delivery, Scam Detection will alert you through audio and haptic notifications and display a warning on your phone that the call may be a scam. \n</p>\n<p>\nDuring our <a href=\"https://security.googleblog.com/2024/11/new-real-time-protections-on-Android.html\">limited beta</a>, we analyzed calls with Gemini Nano, Google\u2019s built-in, on-device foundation model, on Pixel 9 devices and used smaller, robust on-device machine-learning models for Pixel 6+ users. Our testing showed that Gemini Nano outperformed other models, so as a result, we're currently expanding the availability of the beta to bring the most capable Scam Detection to all English-speaking Pixel 9+ users in the U.S.\n</p>\n<div class=\"separator\" style=\"clear: both;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgfEwOWvGCqqF3Rdofhvk8BJea9bZzRF81ZlrWja9HzmYjIDJUiwwepS-wDtqOe9Qa3RNo5ZltN6v83stA7MOuwJfp_ZOzXtBYbmY25PauKfQsahLw-0yFJMIJYZsTk4Tr5RB1_Xf4xFqi2xRQIRZaWRjMe9ijUnkOVWFvXKUD4Dg79aA9zY6PfdQgfTssJ/s1078/Pixel%209%20Pro_Scam%20Detection%20-%20Phone%20by%20Google.png\" style=\"display: block; padding: 1em 0; text-align: center;\"><img alt=\"\" border=\"0\" height=\"600\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgfEwOWvGCqqF3Rdofhvk8BJea9bZzRF81ZlrWja9HzmYjIDJUiwwepS-wDtqOe9Qa3RNo5ZltN6v83stA7MOuwJfp_ZOzXtBYbmY25PauKfQsahLw-0yFJMIJYZsTk4Tr5RB1_Xf4xFqi2xRQIRZaWRjMe9ijUnkOVWFvXKUD4Dg79aA9zY6PfdQgfTssJ/s600/Pixel%209%20Pro_Scam%20Detection%20-%20Phone%20by%20Google.png\" /></a></div>\n\n</p>\n<p>\nSimilar to Scam Detection in messaging, we built this feature to protect your privacy by processing everything on-device. Call audio is processed ephemerally and no conversation audio or transcription is recorded, stored on the device, or sent to Google or third parties. Scam Detection in Phone by Google is off by default to give users control over this feature, as phone call audio is more ephemeral compared to messages, which are stored on devices. Scam Detection only applies to calls that could potentially be scams, and is never used during calls with your contacts. If enabled, Scam Detection will beep at the start and during the call to notify participants the feature is on. You can turn off Scam Detection at any time, during an individual call or for all future calls.\n</p>\n<p>\nAccording to our <a href=\"https://services.google.com/fh/files/misc/2025_phone_by_google_call_scam_report.pdf\">research</a> and a Scam Detection beta user survey, these types of alerts have already helped people be more cautious on the phone, detect suspicious activity, and avoid falling victim to conversational scams.\n</p>\n\n<h3>Keeping Android users safe with the power of Google AI</h3><br />\n\nWe're committed to keeping Android users safe, and that means constantly evolving our defenses against increasingly sophisticated scams and fraud. Our investment in intelligent protection is having real-world impact for billions of users. <a href=\"https://www.leviathansecurity.com/\">Leviathan Security Group</a>, a cybersecurity firm, conducted a funded evaluation of fraud protection features on a number of smartphones and found that <a href=\"https://www.leviathansecurity.com/blog/2025-mobile-platform-fraud-prevention-assessment\">Android smartphones, led by the Pixel 9 Pro, scored highest</a> for built-in security features and anti-fraud efficacy<sup id=\"fnref1\"><a href=\"http://feeds.feedburner.com/GoogleOnlineSecurityBlog#fn1\" rel=\"footnote\">1</a></sup>. \n</p>\n<p>\nWith AI-powered innovations like Scam Detection in Messages and Phone by Google, we're giving you more tools to stay one step ahead of bad actors. We're constantly working with our partners across the Android ecosystem to help bring new security features to even more users. Together, we\u2019re always working to keep you safe on Android.\n</p>\n\n<!-- Footnotes themselves at the bottom. -->\n\n<h2>Notes</h2>\n<div class=\"footnotes\">\n<hr />\n<ol><li id=\"fn1\">\n<p>\n     <em>Based on third-party research funded by Google LLC in Feb 2025 comparing the Pixel 9 Pro, iPhone 16 Pro, Samsung S24+ and Xiaomi 14 Ultra. Evaluation based on no-cost smartphone features enabled by default. Some features may not be available in all countries.</em>&nbsp;<a href=\"http://feeds.feedburner.com/GoogleOnlineSecurityBlog#fnref1\" rev=\"footnote\">&#8617;</a>\n\n</ol></div>"
                }
            ],
            "summary": "<span class=\"byline-author\">Posted by Lyubov Farafonova, Product Manager, Phone by Google; Alberto Pastor Nieto, Sr. Product Manager Google Messages and RCS Spam and Abuse</span>\n\n<p>\nGoogle has been at the forefront of protecting users from the ever-growing threat of <a href=\"https://blog.google/products/android/android-scam-and-phishing-protection/\">scams</a> and <a href=\"https://blog.google/products/android/how-android-helps-you-stay-safe-from-mobile-fraud-apps/\">fraud</a> with <a href=\"https://security.googleblog.com/2024/05/io-2024-whats-new-in-android-security.html\">cutting-edge technologies and security expertise</a> for years. In 2024, scammers used increasingly sophisticated tactics and generative AI-powered tools to steal more than $1 trillion from mobile consumers globally, <a href=\"https://www.gasa.org/post/global-state-of-scams-report-2024-1-trillion-stolen-in-12-months-gasa-feedzai\">according to the Global Anti-Scam Alliance</a>. And with the majority of scams now delivered through phone calls and text messages, we\u2019ve been focused on making Android\u2019s safeguards even more intelligent with powerful Google AI to help keep your financial information and data safe.\n</p>\n<p>\nToday, we\u2019re launching two new industry-leading AI-powered scam detection features for calls and text messages, designed to protect users from increasingly complex and damaging scams. These features specifically target conversational scams, which can often appear initially harmless before evolving into harmful situations. <br /><br />To enhance our detection capabilities, we partnered with financial institutions around the world to better understand the latest advanced and most common scams their customers are facing. For example, users are experiencing more conversational text scams that begin innocently, but gradually manipulate victims into sharing sensitive data, handing over funds, or switching to other messaging apps. And more phone calling scammers are using spoofing techniques to hide their real numbers and pretend to be trusted companies. \n</p>\n<p>\nTraditional spam protections are focused on protecting users before the conversation starts, and are less effective against these latest tactics from scammers that turn dangerous mid-conversation and use social engineering techniques. To better protect users, we invested in new, intelligent AI models capable of detecting suspicious patterns and delivering real-time warnings over the course of a conversation, all while prioritizing user privacy. \n</p>\n<h3>Scam Detection for messages</h3>\n<p>\nWe\u2019re building on our <a href=\"https://security.googleblog.com/2024/10/5-new-protections-on-google-messages.html\">enhancements to existing Spam Protection in Google Messages</a> that strengthen defenses against job and delivery scams, which are continuing to roll out to users. We\u2019re now introducing Scam Detection to detect a wider range of fraudulent activities. <br /><br />Scam Detection in Google Messages uses powerful Google AI to proactively address conversational scams by providing real-time detection even after initial messages are received. When the on-device AI detects a suspicious pattern in SMS, MMS, and RCS messages, users will now get a message warning of a likely scam with an option to dismiss or report and block the sender. \n</p>\n<div class=\"separator\" style=\"clear: both;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgIyU-fEhIoz3CIVleuuPXK3rusITDaVfONA_0NcCiYpV-dAYbd16jETa9rSutRPm5d5QIT8dL1iKUeNfHq2XWp6wcHTnMR9bKJs68P4bd82EWSc6EGFFBUxZbajBi75SxlalFNQZEBTazAk0g-kNqBHqLtF3-pnLjS1rlnJcexy-lyxWh_5LXxswKb3wEg/s1078/Pixel%209%20Pro_Scam%20Detection%20-%20Google%20Messages.png\" style=\"display: block; padding: 1em 0; text-align: center;\"><img alt=\"\" border=\"0\" height=\"600\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgIyU-fEhIoz3CIVleuuPXK3rusITDaVfONA_0NcCiYpV-dAYbd16jETa9rSutRPm5d5QIT8dL1iKUeNfHq2XWp6wcHTnMR9bKJs68P4bd82EWSc6EGFFBUxZbajBi75SxlalFNQZEBTazAk0g-kNqBHqLtF3-pnLjS1rlnJcexy-lyxWh_5LXxswKb3wEg/s600/Pixel%209%20Pro_Scam%20Detection%20-%20Google%20Messages.png\" /></a></div>\n\n</p>\n<p>\nAs part of the Spam Protection setting, Scam Detection on Google Messages is on by default and only applies to conversations with non-contacts. Your privacy is protected with Scam Detection in Google Messages, with all message <a href=\"https://support.google.com/messages/answer/9327903?hl=en\">processing remaining on-device</a>. Your conversations remain private to you; if you choose to report a conversation to help reduce widespread spam, only sender details and recent messages with that sender are shared with Google and carriers. You can turn off Spam Protection, which includes Scam Detection, in your Google Messages at any time.\n</p>\n<p>\nScam Detection in Google Messages is launching in English first in the U.S., U.K. and Canada and will expand to more countries soon. \n</p>\n<h3>Scam Detection for calls</h3>\n<p>\nMore than half of Americans <a href=\"https://services.google.com/fh/files/misc/2025_phone_by_google_call_scam_report.pdf\">reported</a> receiving at least one scam call per day in 2024. To combat the rise of sophisticated conversational scams that deceive victims over the course of a phone call, we <a href=\"https://security.googleblog.com/2024/11/new-real-time-protections-on-Android.html\">introduced</a> Scam Detection late last year to U.S.-based English-speaking Phone by Google public beta users on Pixel phones. \n</p>\n<p>\nWe use AI models processed on-device to analyze conversations in real-time and warn users of potential scams. If a caller, for example, tries to get you to provide payment via gift cards to complete a delivery, Scam Detection will alert you through audio and haptic notifications and display a warning on your phone that the call may be a scam. \n</p>\n<p>\nDuring our <a href=\"https://security.googleblog.com/2024/11/new-real-time-protections-on-Android.html\">limited beta</a>, we analyzed calls with Gemini Nano, Google\u2019s built-in, on-device foundation model, on Pixel 9 devices and used smaller, robust on-device machine-learning models for Pixel 6+ users. Our testing showed that Gemini Nano outperformed other models, so as a result, we're currently expanding the availability of the beta to bring the most capable Scam Detection to all English-speaking Pixel 9+ users in the U.S.\n</p>\n<div class=\"separator\" style=\"clear: both;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgfEwOWvGCqqF3Rdofhvk8BJea9bZzRF81ZlrWja9HzmYjIDJUiwwepS-wDtqOe9Qa3RNo5ZltN6v83stA7MOuwJfp_ZOzXtBYbmY25PauKfQsahLw-0yFJMIJYZsTk4Tr5RB1_Xf4xFqi2xRQIRZaWRjMe9ijUnkOVWFvXKUD4Dg79aA9zY6PfdQgfTssJ/s1078/Pixel%209%20Pro_Scam%20Detection%20-%20Phone%20by%20Google.png\" style=\"display: block; padding: 1em 0; text-align: center;\"><img alt=\"\" border=\"0\" height=\"600\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgfEwOWvGCqqF3Rdofhvk8BJea9bZzRF81ZlrWja9HzmYjIDJUiwwepS-wDtqOe9Qa3RNo5ZltN6v83stA7MOuwJfp_ZOzXtBYbmY25PauKfQsahLw-0yFJMIJYZsTk4Tr5RB1_Xf4xFqi2xRQIRZaWRjMe9ijUnkOVWFvXKUD4Dg79aA9zY6PfdQgfTssJ/s600/Pixel%209%20Pro_Scam%20Detection%20-%20Phone%20by%20Google.png\" /></a></div>\n\n</p>\n<p>\nSimilar to Scam Detection in messaging, we built this feature to protect your privacy by processing everything on-device. Call audio is processed ephemerally and no conversation audio or transcription is recorded, stored on the device, or sent to Google or third parties. Scam Detection in Phone by Google is off by default to give users control over this feature, as phone call audio is more ephemeral compared to messages, which are stored on devices. Scam Detection only applies to calls that could potentially be scams, and is never used during calls with your contacts. If enabled, Scam Detection will beep at the start and during the call to notify participants the feature is on. You can turn off Scam Detection at any time, during an individual call or for all future calls.\n</p>\n<p>\nAccording to our <a href=\"https://services.google.com/fh/files/misc/2025_phone_by_google_call_scam_report.pdf\">research</a> and a Scam Detection beta user survey, these types of alerts have already helped people be more cautious on the phone, detect suspicious activity, and avoid falling victim to conversational scams.\n</p>\n\n<h3>Keeping Android users safe with the power of Google AI</h3><br />\n\nWe're committed to keeping Android users safe, and that means constantly evolving our defenses against increasingly sophisticated scams and fraud. Our investment in intelligent protection is having real-world impact for billions of users. <a href=\"https://www.leviathansecurity.com/\">Leviathan Security Group</a>, a cybersecurity firm, conducted a funded evaluation of fraud protection features on a number of smartphones and found that <a href=\"https://www.leviathansecurity.com/blog/2025-mobile-platform-fraud-prevention-assessment\">Android smartphones, led by the Pixel 9 Pro, scored highest</a> for built-in security features and anti-fraud efficacy<sup id=\"fnref1\"><a href=\"http://feeds.feedburner.com/GoogleOnlineSecurityBlog#fn1\" rel=\"footnote\">1</a></sup>. \n</p>\n<p>\nWith AI-powered innovations like Scam Detection in Messages and Phone by Google, we're giving you more tools to stay one step ahead of bad actors. We're constantly working with our partners across the Android ecosystem to help bring new security features to even more users. Together, we\u2019re always working to keep you safe on Android.\n</p>\n\n<!-- Footnotes themselves at the bottom. -->\n\n<h2>Notes</h2>\n<div class=\"footnotes\">\n<hr />\n<ol><li id=\"fn1\">\n<p>\n     <em>Based on third-party research funded by Google LLC in Feb 2025 comparing the Pixel 9 Pro, iPhone 16 Pro, Samsung S24+ and Xiaomi 14 Ultra. Evaluation based on no-cost smartphone features enabled by default. Some features may not be available in all countries.</em>&nbsp;<a href=\"http://feeds.feedburner.com/GoogleOnlineSecurityBlog#fnref1\" rev=\"footnote\">&#8617;</a>\n\n</ol></div>",
            "links": [
                {
                    "href": "http://security.googleblog.com/feeds/7487222855150187635/comments/default",
                    "rel": "replies",
                    "title": "Post Comments",
                    "type": "application/atom+xml"
                },
                {
                    "href": "http://www.blogger.com/comment/fullpage/post/1176949257541686127/7487222855150187635?isPopup=true",
                    "rel": "replies",
                    "title": "0 Comments",
                    "type": "text/html"
                },
                {
                    "href": "http://www.blogger.com/feeds/1176949257541686127/posts/default/7487222855150187635",
                    "rel": "edit",
                    "type": "application/atom+xml"
                },
                {
                    "href": "http://www.blogger.com/feeds/1176949257541686127/posts/default/7487222855150187635",
                    "rel": "self",
                    "type": "application/atom+xml"
                },
                {
                    "href": "http://security.googleblog.com/2025/03/new-ai-powered-scam-detection-features.html",
                    "rel": "alternate",
                    "title": "New AI-Powered Scam Detection Features to Help Protect You on Android",
                    "type": "text/html"
                }
            ],
            "authors": [
                {
                    "name": "Edward Fernandez",
                    "href": "http://www.blogger.com/profile/03784424747198152685",
                    "email": "noreply@blogger.com"
                }
            ],
            "author_detail": {
                "name": "Edward Fernandez",
                "href": "http://www.blogger.com/profile/03784424747198152685",
                "email": "noreply@blogger.com"
            },
            "href": "",
            "author": "Edward Fernandez (noreply@blogger.com)",
            "gd_image": {
                "height": "16",
                "rel": "http://schemas.google.com/g/2005#thumbnail",
                "src": "https://img1.blogblog.com/img/b16-rounded.gif",
                "width": "16"
            },
            "media_thumbnail": [
                {
                    "height": "72",
                    "url": "https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgIyU-fEhIoz3CIVleuuPXK3rusITDaVfONA_0NcCiYpV-dAYbd16jETa9rSutRPm5d5QIT8dL1iKUeNfHq2XWp6wcHTnMR9bKJs68P4bd82EWSc6EGFFBUxZbajBi75SxlalFNQZEBTazAk0g-kNqBHqLtF3-pnLjS1rlnJcexy-lyxWh_5LXxswKb3wEg/s72-c/Pixel%209%20Pro_Scam%20Detection%20-%20Google%20Messages.png",
                    "width": "72"
                }
            ],
            "thr_total": "0"
        },
        {
            "id": "tag:blogger.com,1999:blog-1176949257541686127.post-4284088541533635953",
            "guidislink": true,
            "link": "http://security.googleblog.com/2025/05/whats-new-in-android-security-privacy-2025.html",
            "published": "2025-05-13T12:59:00.019-04:00",
            "published_parsed": [
                2025,
                5,
                13,
                16,
                59,
                0,
                1,
                133,
                0
            ],
            "updated": "2025-05-14T12:28:23.434-04:00",
            "updated_parsed": [
                2025,
                5,
                14,
                16,
                28,
                23,
                2,
                134,
                0
            ],
            "tags": [
                {
                    "term": "android",
                    "scheme": "http://www.blogger.com/atom/ns#",
                    "label": null
                },
                {
                    "term": "android security",
                    "scheme": "http://www.blogger.com/atom/ns#",
                    "label": null
                }
            ],
            "title": "What\u2019s New in Android Security and Privacy in 2025",
            "title_detail": {
                "type": "text/plain",
                "language": null,
                "base": "http://feeds.feedburner.com/GoogleOnlineSecurityBlog",
                "value": "What\u2019s New in Android Security and Privacy in 2025"
            },
            "content": [
                {
                    "type": "text/html",
                    "language": null,
                    "base": "http://feeds.feedburner.com/GoogleOnlineSecurityBlog",
                    "value": "<span class=\"byline-author\">Posted by Dave Kleidermacher, VP Engineering, Android Security and Privacy\n</span>\n\n<p>\nAndroid\u2019s intelligent protections keep you safe from everyday dangers. Our dedication to your security is validated by security experts, who consistently <a href=\"https://omdia.tech.informa.com/om124947/mobile-device-security-scorecard-2024\">rank</a> top Android devices highest in security, and score Android smartphones, led by the Pixel 9 Pro, as <a href=\"https://www.leviathansecurity.com/blog/2025-mobile-platform-fraud-prevention-assessment\">leaders in anti-fraud efficacy</a>.<br /><br />Android is always developing new protections to keep you, your device, and your data safe. Today, we\u2019re announcing new features and enhancements that build on our industry-leading protections to help keep you safe from scams, fraud, and theft on Android.\n</p>\n<h3><strong>Smarter protections against phone call scams</strong></h3>\n\n\n<p>\nOur research shows that phone scammers often try to trick people into performing specific actions to initiate a scam, like changing default device security settings or granting elevated permissions to an app. These actions can result in spying, fraud, and other abuse by giving an attacker deeper access to your device and data. To combat phone scammers, we\u2019re working to block specific actions and warn you of these sophisticated attempts. This happens completely on device and is applied only with conversations with non-contacts.  \n</p>\n<p>\nAndroid\u2019s new in-call protections<sup id=\"fnref1\"><a href=\"http://feeds.feedburner.com/GoogleOnlineSecurityBlog#fn1\" rel=\"footnote\">1</a></sup> provide an additional layer of defense, preventing you from taking risky security actions during a call like:\n</p>\n<ul>\n\n<li>Disabling <a href=\"https://support.google.com/googleplay/answer/2812853?hl=en\">Google Play Protect</a>, Android\u2019s built-in security protection, that is on by default and continuously scans for malicious app behavior, no matter the download source.</li>\n\n<li>Sideloading an app for the first time from a web browser, messaging app or other source \u2013 which may not have been vetted for security and privacy by Google. </li>\n\n<li>Granting accessibility permissions, which can give a newly downloaded malicious app access to gain control over the user's device and steal sensitive/private data, like banking information. </li>\n</ul>\n<p>\nAnd if you\u2019re screen sharing during a phone call, Android will now automatically prompt you to stop sharing at the end of a call. These protections help safeguard you against scammers that attempt to gain access to sensitive information to conduct fraud. \n</p>\n\n<div class=\"separator\" style=\"clear: both;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjow61g9yHqra-E4XmwWfw1eGul9-mS1FzQEpgk65h0LkwTG9sojL0eSKruDS4LjZ31AGDOkNbSCM3A8zo5EEQQziHfxV6yZmo0883nK_JeoGBzKQowypG26j07kcR1mUOaKasvPEIM7z_BbKdHn51Zz4ZSvU4UKCDCVibJpxXWQWvE9T75OxMIuDscDfFt/s3852/In-call%20scam%20protections.png\" style=\"display: block; padding: 1em 0; text-align: center;\"><img alt=\"\" border=\"0\" height=\"400\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjow61g9yHqra-E4XmwWfw1eGul9-mS1FzQEpgk65h0LkwTG9sojL0eSKruDS4LjZ31AGDOkNbSCM3A8zo5EEQQziHfxV6yZmo0883nK_JeoGBzKQowypG26j07kcR1mUOaKasvPEIM7z_BbKdHn51Zz4ZSvU4UKCDCVibJpxXWQWvE9T75OxMIuDscDfFt/s400/In-call%20scam%20protections.png\" /></a></div>\n</p>\n<p>\n<h3><strong>Piloting enhanced in-call protection for banking apps</strong></h3><br />Screen sharing scams are becoming quite common, with fraudsters often impersonating banks, government agencies, and other trusted institutions \u2013 using screen sharing to guide users to perform costly actions such as mobile banking transfers. To better protect you from these attacks, we\u2019re piloting new in-call protections for banking apps, starting in the UK. \n</p>\n<p>\nWhen you launch a participating banking app while screen sharing with an unknown contact, your Android device will warn you about the potential dangers and give you the option to end the call and to stop screen sharing with one tap. \n</p>\n<p>\nThis feature will be enabled automatically for participating banking apps whenever you're on a phone call with an unknown contact on Android 11+ devices. We are working with UK banks Monzo, NatWest and Revolut to pilot this feature for their customers in the coming weeks and will assess the results of the pilot ahead of a wider roll out. \n</p>\n\n<div class=\"separator\" style=\"clear: both;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgazI7OnC0_YruQgR-UJnwAW9pMl9EhAv4S46-smwzVK5E2L9Ba9y8BnkejL1p_RsoblFqiQ0eTOmoscdozHKclGdO6eimKZvBaEJldWVPZHC6TOI5LsHq0T75dWUSiqZ5CK2_sq3MFoD8_FmSdSTgRelChy_EhxtuDmeXtdWHpoIW-T0QHnLrR46cI2UoT/s3852/Bank%20App%20Scam%20Warning.png\" style=\"display: block; padding: 1em 0; text-align: center;\"><img alt=\"\" border=\"0\" height=\"400\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgazI7OnC0_YruQgR-UJnwAW9pMl9EhAv4S46-smwzVK5E2L9Ba9y8BnkejL1p_RsoblFqiQ0eTOmoscdozHKclGdO6eimKZvBaEJldWVPZHC6TOI5LsHq0T75dWUSiqZ5CK2_sq3MFoD8_FmSdSTgRelChy_EhxtuDmeXtdWHpoIW-T0QHnLrR46cI2UoT/s400/Bank%20App%20Scam%20Warning.png\" /></a></div>\n\n</p>\n<h3><br /><strong>Making real-time Scam Detection in Google Messages even more intelligent</strong></h3>\n\n\n<p>\n<strong><br /></strong>We <a href=\"https://security.googleblog.com/2025/03/new-ai-powered-scam-detection-features.html\">recently launched</a> AI-powered Scam Detection in Google Messages and Phone by Google to protect you from conversational scams that might sound innocent at first, but turn malicious and can lead to financial loss or data theft. When Scam Detection discovers a suspicious conversation pattern, it warns you in real-time so you can react before falling victim to a costly scam. <br /><br />AI-powered Scam Detection is always improving to help keep you safe while also keeping your privacy in mind. With Google\u2019s advanced on-device AI, your conversations stay private to you. All message processing remains on-device and you\u2019re always in control. You can turn off Spam Protection, which includes Scam Detection, in your Google Messages at any time.\n</p>\n<p>\nPrior to targeting conversational scams, Scam Detection in Google Messages focused on analyzing and detecting <a href=\"https://security.googleblog.com/2024/10/5-new-protections-on-google-messages.html\">package delivery and job seeking scams</a>. We\u2019ve now expanded our detections to help protect you from a wider variety of sophisticated scams including: \n</p>\n<ul>\n\n<li>Toll road and other billing fee scams  </li>\n\n<li>Crypto scams</li>\n\n<li>Financial impersonation scams </li>\n\n<li>Gift card and prize scams </li>\n\n<li>Technical support scams  </li>\n\n<li>And more</li>\n</ul>\n\nThese enhancements apply to all Google Messages users.\n\n\n<div class=\"separator\" style=\"clear: both;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiiq6VPWebm1gTF3gjiRENp_h6p9FWGJ2f6BzjgCD-tEeO6Phek7d9Z2S1RG5qa2mWxZ9riVnKipcR7wQTsbssIoojt5veJ52ZeKQvm7LQ6mK0APyS3y8YQuOeX1x1i__za5VvOYQBlaqUOW-O45Z-q_J-GApDIFoPIBbIoubFGt8Mf3Ib2iu5oEXYh0oG9/s3835/Scam%20Detection%20%28Caiman%29.png\" style=\"display: block; padding: 1em 0; text-align: center;\"><img alt=\"\" border=\"0\" height=\"400\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiiq6VPWebm1gTF3gjiRENp_h6p9FWGJ2f6BzjgCD-tEeO6Phek7d9Z2S1RG5qa2mWxZ9riVnKipcR7wQTsbssIoojt5veJ52ZeKQvm7LQ6mK0APyS3y8YQuOeX1x1i__za5VvOYQBlaqUOW-O45Z-q_J-GApDIFoPIBbIoubFGt8Mf3Ib2iu5oEXYh0oG9/s400/Scam%20Detection%20%28Caiman%29.png\" /></a></div>\n\n</p><br />\n\n<h3><strong>Fighting fraud and impersonation with Key Verifier</strong><br /></h3>\n\n\n<p>\nTo help protect you from scammers who try to impersonate someone you know, we\u2019re launching a helpful tool called Key Verifier. The feature allows you and the person you\u2019re messaging to verify the identity of the other party through public encryption keys, protecting your end-to-end encrypted messages in Google Messages. By verifying contact keys in your Google Contacts app (through a QR code scanning or number comparison), you can have an extra layer of assurance that the person on the other end is genuine and that your conversation is private with them. <br />\n</p>\n<p>\nKey Verifier provides a visual way for you and your contact to quickly confirm that your secret keys match, strengthening your confidence that you\u2019re communicating with the intended recipient and not a scammer. For example, if an attacker gains access to a friend\u2019s phone number and uses it on another device to send you a message \u2013 which can happen as a result of a SIM swap attack \u2013 their contact's verification status will be marked as no longer verified in the Google Contacts app, suggesting your friend\u2019s account may be compromised or has been changed. Key Verifier will launch later this summer in Google Messages on Android 10+ devices. \n</p>\n\n<div class=\"separator\" style=\"clear: both;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgpeph5euEeeDQHOlrJJ9kB136S2AATQd6QqzZ9v3K8P72lpeOKJkY7aYxfg2Va4PdAUXj1jVP2og-0FOMX5Un7MBRS4Bkm-_JMFW4yGpu0xHD89fBQLL9HR7yCYUt2aH0S3N4piTHcqfXo_VuXAwLtbLiclIcd3KPH0GtsYfVstcgsaUVhzOJ6m7pM8GET/s3891/Key%20Verifier%20combined.png\" style=\"display: block; padding: 1em 0; text-align: center;\"><img alt=\"\" border=\"0\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgpeph5euEeeDQHOlrJJ9kB136S2AATQd6QqzZ9v3K8P72lpeOKJkY7aYxfg2Va4PdAUXj1jVP2og-0FOMX5Un7MBRS4Bkm-_JMFW4yGpu0xHD89fBQLL9HR7yCYUt2aH0S3N4piTHcqfXo_VuXAwLtbLiclIcd3KPH0GtsYfVstcgsaUVhzOJ6m7pM8GET/s400/Key%20Verifier%20combined.png\" width=\"400\" /></a></div>\n\n</p>\n<h3><strong>Comprehensive mobile theft protection, now even stronger</strong></h3>\n\n\n<p>\n<br />Physical device theft can lead to financial fraud and data theft, with the value of your banking and payment information many times exceeding the value of your phone. This is one of the reasons why last year we launched the mobile industry\u2019s most comprehensive suite of <a href=\"https://security.googleblog.com/2024/10/android-theft-protection.html\">theft protection</a> features to protect you before, during, and after a theft. Since launch, our theft protection features have helped protect data on hundreds of thousands of devices that may have fallen into the wrong hands. This includes devices that were locked by Remote Lock or Theft Detection Lock and remained locked for over 48 hours. \n</p>\n<p>\nMost recently, we launched <a href=\"https://security.googleblog.com/2025/01/android-theft-protection-identity-check-expanded-features.html\">Identity Check</a> for Pixel and Samsung One UI 7 devices, providing an extra layer of security even if your PIN or password is compromised. This protection will also now be available from more device manufacturers on supported devices that upgrade to Android 16. \n</p>\n<p>\nComing later this year, we\u2019re further hardening Factory Reset protections, which will restrict all functionalities on devices that are reset without the owner\u2019s authorization. You'll also gain more control over our <a href=\"https://support.google.com/accounts/answer/6160491?hl=en\">Remote Lock</a> feature with the addition of a security challenge question, helping to prevent unauthorized actions.\n</p>\n<div class=\"separator\" style=\"clear: both;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiKABHmoqb3bZSeHL4335vvdxmjy3YtYhiA-umoOjCpme8DBW_xGmOncmxYsBzdiA5iM6ArfvvAxPSJESedWd9ei-J_tnPT4tU2M2TSz-8NVay6Py2EI6YERWgofmq2dGr8KH08DqGXHRmBQMz_El669tceurFkA14qpZNZlfCpnDqOp9ArHfw9rE6jGGCd/s3891/FRP%20and%20Remote%20Lock%20security%20question%20combined.png\" style=\"display: block; padding: 1em 0; text-align: center;\"><img alt=\"\" border=\"0\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiKABHmoqb3bZSeHL4335vvdxmjy3YtYhiA-umoOjCpme8DBW_xGmOncmxYsBzdiA5iM6ArfvvAxPSJESedWd9ei-J_tnPT4tU2M2TSz-8NVay6Py2EI6YERWgofmq2dGr8KH08DqGXHRmBQMz_El669tceurFkA14qpZNZlfCpnDqOp9ArHfw9rE6jGGCd/s400/FRP%20and%20Remote%20Lock%20security%20question%20combined.png\" width=\"400\" /></a></div>\n\n</p>\n<p>\nWe\u2019re also enhancing your security against thieves in Android 16 by providing more protection for one-time passwords that are received when your phone is locked.<strong> </strong>In higher risk scenarios<sup id=\"fnref2\"><a href=\"http://feeds.feedburner.com/GoogleOnlineSecurityBlog#fn2\" rel=\"footnote\">2</a></sup>, Android will hide one-time passwords on your lock screen, ensuring that only you can see them after unlocking your device. <br /><br />\n</p>\n\n<div class=\"separator\" style=\"clear: both;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiWyK3UKkP2KDahi0NNKJl2dBz0EnAuYuxSDVmWY0Zu4y5dHvrPvoAqk4yrOdIrMxlVNtHHBw46N7KdIZ_DAOOvfOxLe5gdATM3hRyBcHRLIMf5LH35NobLh87TXxtQPDLxQciCneyhF9MXWLtT-90JylcOGeGUrnFwjYk8Mf5N8cGal6kn4B2rCQHQmu-i/s3852/OTP%20lock%20screen%20protection.png\" style=\"display: block; padding: 1em 0; text-align: center;\"><img alt=\"\" border=\"0\" height=\"400\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiWyK3UKkP2KDahi0NNKJl2dBz0EnAuYuxSDVmWY0Zu4y5dHvrPvoAqk4yrOdIrMxlVNtHHBw46N7KdIZ_DAOOvfOxLe5gdATM3hRyBcHRLIMf5LH35NobLh87TXxtQPDLxQciCneyhF9MXWLtT-90JylcOGeGUrnFwjYk8Mf5N8cGal6kn4B2rCQHQmu-i/s400/OTP%20lock%20screen%20protection.png\" /></a></div>\n</p>\n<h3><strong>Advanced Protection: Google\u2019s strongest security for mobile devices</strong></h3>\n\n\n<p>\nProtecting users who need heightened security has been a long-standing commitment at Google, which is why we have our <a href=\"https://landing.google.com/intl/en_in/advancedprotection/\">Advanced Protection Program</a> that provides Google\u2019s strongest protections against targeted attacks.<br /><br />To enhance these existing device defenses, Android 16 extends Advanced Protection with a device-level security setting for Android users. Whether you\u2019re an at-risk individual \u2013 such as a journalist, elected official, or public figure \u2013 or you just prioritize security, Advanced Protection gives you the ability to activate Google\u2019s strongest security for mobile devices, providing greater peace of mind that you\u2019re protected against the most sophisticated threats.\n</p>\n<p>\nAdvanced Protection is available on devices with Android 16. Learn more in our <a href=\"https://security.googleblog.com/2025/05/advanced-protection-mobile-devices.html\">blog</a>. \n</p>\n<div class=\"separator\" style=\"clear: both;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhia8RAF24s4G62lyYo_53G1UngXY2d7M8bflBlJvpTUKhwwCiLJ9NrOc43SGOMO_ZIJD3X6E1QJy_HMO-LLh4UK07iCabwQuy5c1fnf0_k9HMxlIgR4WNnvVTKEvHHrI2-KA8SnqsH2pzwypEWw56BzNxaXg7-8MgPSSYyW9pMsZJpkWBdnGMT33-3Hu4b/s3852/Advanced%20Protection.png\" style=\"display: block; padding: 1em 0; text-align: center;\"><img alt=\"\" border=\"0\" height=\"400\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhia8RAF24s4G62lyYo_53G1UngXY2d7M8bflBlJvpTUKhwwCiLJ9NrOc43SGOMO_ZIJD3X6E1QJy_HMO-LLh4UK07iCabwQuy5c1fnf0_k9HMxlIgR4WNnvVTKEvHHrI2-KA8SnqsH2pzwypEWw56BzNxaXg7-8MgPSSYyW9pMsZJpkWBdnGMT33-3Hu4b/s400/Advanced%20Protection.png\" /></a></div>\n\n</p>\n<h3><strong> More intelligent defenses against bad apps with Google Play Protect</strong></h3>\n\n\n<p>\nOne way malicious developers try to trick people is by hiding or changing their app icon, making unsafe apps more difficult to find and remove. Now, Google Play Protect <a href=\"https://security.googleblog.com/2024/11/new-real-time-protections-on-Android.html\">live threat detection</a> will catch apps and alert you when we detect this deceptive behavior. This feature will be available to Google Pixel 6+ and a selection of new devices from other manufacturers in the coming months.\n</p>\n<div class=\"separator\" style=\"clear: both;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiFOWqW8D-v4sSdWKr2dg3JBnZ91Tk4Yi1LJpnrt72HxwrjY-bBIb28AJPaZ_aD3Wbw6l3v1cbO2OHGZrC-9Bw83sKvG1TkOrp42PCiFwClUTuk3rb4HoQr4yANgBvROQnHxRJe_KTf1N5W_q1vzVKinf8Ql9EznSo4TpwQQHayVgSMxjaKIAMW6zU-asdt/s1926/Live%20threat%20detection%20%281%29%20%281%29.png\" style=\"display: block; padding: 1em 0; text-align: center;\"><img alt=\"\" border=\"0\" height=\"400\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiFOWqW8D-v4sSdWKr2dg3JBnZ91Tk4Yi1LJpnrt72HxwrjY-bBIb28AJPaZ_aD3Wbw6l3v1cbO2OHGZrC-9Bw83sKvG1TkOrp42PCiFwClUTuk3rb4HoQr4yANgBvROQnHxRJe_KTf1N5W_q1vzVKinf8Ql9EznSo4TpwQQHayVgSMxjaKIAMW6zU-asdt/s400/Live%20threat%20detection%20%281%29%20%281%29.png\" /></a></div>\n\n</p>\n<p>\nGoogle Play Protect always checks each app before it gets installed on your device, regardless of the install source. It conducts <a href=\"https://security.googleblog.com/2023/10/enhanced-google-play-protect-real-time.html\">real-time scanning</a> of an app, enhanced by on-device machine learning, when users try to install an app that has never been seen by Google Play Protect to help detect emerging threats. \n</p>\n<p>\nWe\u2019ve made Google Play Protect\u2019s on-device capabilities smarter to help us identify more malicious applications even faster to keep you safe. Google Play Protect now uses a new set of on-device <a href=\"https://virustotal.github.io/yara/\">rules</a> to specifically look for text or binary patterns to quickly identify malware families. If an app shows these malicious patterns, we can alert you before you even install it. And to keep you safe from new and emerging malware and their variants, we will update these rules frequently for better classification over time.\n</p>\n<p>\nThis update to Google Play Protect is now available globally for all Android users with Google Play services. \n</p>\n<h3><strong> Always advancing Android security</strong></h3>\n\n\n<p>\n<br />In addition to new features that come in numbered Android releases, we're constantly enhancing your protection on Android through seamless Google Play services updates and other <a href=\"https://blog.google/technology/safety-security/how-were-using-ai-to-combat-the-latest-scams/\">improvements</a>, ensuring you benefit from the latest security advancements continuously. This allows us to rapidly deploy critical defenses and keep you ahead of emerging threats, making your Android experience safer every day.<br /><br />Through close collaboration with our partners across the Android ecosystem and the broader security community, we remain focused on bringing you security enhancements and innovative new features to help keep you safe.\n</p>\n\n<!-- Footnotes themselves at the bottom. -->\n\n<h2>Notes</h2>\n<div class=\"footnotes\">\n<hr />\n<ol><li id=\"fn1\">\n<p>\n     In-call protection for disabling Google Play Protect is available on Android 6+ devices. Protections for sideloading an app and turning on accessibility permissions are available on Android 16 devices.&nbsp;<a href=\"http://feeds.feedburner.com/GoogleOnlineSecurityBlog#fnref1\" rev=\"footnote\">&#8617;</a><li id=\"fn2\">\n<p>\n     When a user\u2019s device is not connected to Wi-Fi and has not been recently unlocked&nbsp;<a href=\"http://feeds.feedburner.com/GoogleOnlineSecurityBlog#fnref2\" rev=\"footnote\">&#8617;</a>\n\n</ol></div>"
                }
            ],
            "summary": "<span class=\"byline-author\">Posted by Dave Kleidermacher, VP Engineering, Android Security and Privacy\n</span>\n\n<p>\nAndroid\u2019s intelligent protections keep you safe from everyday dangers. Our dedication to your security is validated by security experts, who consistently <a href=\"https://omdia.tech.informa.com/om124947/mobile-device-security-scorecard-2024\">rank</a> top Android devices highest in security, and score Android smartphones, led by the Pixel 9 Pro, as <a href=\"https://www.leviathansecurity.com/blog/2025-mobile-platform-fraud-prevention-assessment\">leaders in anti-fraud efficacy</a>.<br /><br />Android is always developing new protections to keep you, your device, and your data safe. Today, we\u2019re announcing new features and enhancements that build on our industry-leading protections to help keep you safe from scams, fraud, and theft on Android.\n</p>\n<h3><strong>Smarter protections against phone call scams</strong></h3>\n\n\n<p>\nOur research shows that phone scammers often try to trick people into performing specific actions to initiate a scam, like changing default device security settings or granting elevated permissions to an app. These actions can result in spying, fraud, and other abuse by giving an attacker deeper access to your device and data. To combat phone scammers, we\u2019re working to block specific actions and warn you of these sophisticated attempts. This happens completely on device and is applied only with conversations with non-contacts.  \n</p>\n<p>\nAndroid\u2019s new in-call protections<sup id=\"fnref1\"><a href=\"http://feeds.feedburner.com/GoogleOnlineSecurityBlog#fn1\" rel=\"footnote\">1</a></sup> provide an additional layer of defense, preventing you from taking risky security actions during a call like:\n</p>\n<ul>\n\n<li>Disabling <a href=\"https://support.google.com/googleplay/answer/2812853?hl=en\">Google Play Protect</a>, Android\u2019s built-in security protection, that is on by default and continuously scans for malicious app behavior, no matter the download source.</li>\n\n<li>Sideloading an app for the first time from a web browser, messaging app or other source \u2013 which may not have been vetted for security and privacy by Google. </li>\n\n<li>Granting accessibility permissions, which can give a newly downloaded malicious app access to gain control over the user's device and steal sensitive/private data, like banking information. </li>\n</ul>\n<p>\nAnd if you\u2019re screen sharing during a phone call, Android will now automatically prompt you to stop sharing at the end of a call. These protections help safeguard you against scammers that attempt to gain access to sensitive information to conduct fraud. \n</p>\n\n<div class=\"separator\" style=\"clear: both;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjow61g9yHqra-E4XmwWfw1eGul9-mS1FzQEpgk65h0LkwTG9sojL0eSKruDS4LjZ31AGDOkNbSCM3A8zo5EEQQziHfxV6yZmo0883nK_JeoGBzKQowypG26j07kcR1mUOaKasvPEIM7z_BbKdHn51Zz4ZSvU4UKCDCVibJpxXWQWvE9T75OxMIuDscDfFt/s3852/In-call%20scam%20protections.png\" style=\"display: block; padding: 1em 0; text-align: center;\"><img alt=\"\" border=\"0\" height=\"400\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjow61g9yHqra-E4XmwWfw1eGul9-mS1FzQEpgk65h0LkwTG9sojL0eSKruDS4LjZ31AGDOkNbSCM3A8zo5EEQQziHfxV6yZmo0883nK_JeoGBzKQowypG26j07kcR1mUOaKasvPEIM7z_BbKdHn51Zz4ZSvU4UKCDCVibJpxXWQWvE9T75OxMIuDscDfFt/s400/In-call%20scam%20protections.png\" /></a></div>\n</p>\n<p>\n<h3><strong>Piloting enhanced in-call protection for banking apps</strong></h3><br />Screen sharing scams are becoming quite common, with fraudsters often impersonating banks, government agencies, and other trusted institutions \u2013 using screen sharing to guide users to perform costly actions such as mobile banking transfers. To better protect you from these attacks, we\u2019re piloting new in-call protections for banking apps, starting in the UK. \n</p>\n<p>\nWhen you launch a participating banking app while screen sharing with an unknown contact, your Android device will warn you about the potential dangers and give you the option to end the call and to stop screen sharing with one tap. \n</p>\n<p>\nThis feature will be enabled automatically for participating banking apps whenever you're on a phone call with an unknown contact on Android 11+ devices. We are working with UK banks Monzo, NatWest and Revolut to pilot this feature for their customers in the coming weeks and will assess the results of the pilot ahead of a wider roll out. \n</p>\n\n<div class=\"separator\" style=\"clear: both;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgazI7OnC0_YruQgR-UJnwAW9pMl9EhAv4S46-smwzVK5E2L9Ba9y8BnkejL1p_RsoblFqiQ0eTOmoscdozHKclGdO6eimKZvBaEJldWVPZHC6TOI5LsHq0T75dWUSiqZ5CK2_sq3MFoD8_FmSdSTgRelChy_EhxtuDmeXtdWHpoIW-T0QHnLrR46cI2UoT/s3852/Bank%20App%20Scam%20Warning.png\" style=\"display: block; padding: 1em 0; text-align: center;\"><img alt=\"\" border=\"0\" height=\"400\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgazI7OnC0_YruQgR-UJnwAW9pMl9EhAv4S46-smwzVK5E2L9Ba9y8BnkejL1p_RsoblFqiQ0eTOmoscdozHKclGdO6eimKZvBaEJldWVPZHC6TOI5LsHq0T75dWUSiqZ5CK2_sq3MFoD8_FmSdSTgRelChy_EhxtuDmeXtdWHpoIW-T0QHnLrR46cI2UoT/s400/Bank%20App%20Scam%20Warning.png\" /></a></div>\n\n</p>\n<h3><br /><strong>Making real-time Scam Detection in Google Messages even more intelligent</strong></h3>\n\n\n<p>\n<strong><br /></strong>We <a href=\"https://security.googleblog.com/2025/03/new-ai-powered-scam-detection-features.html\">recently launched</a> AI-powered Scam Detection in Google Messages and Phone by Google to protect you from conversational scams that might sound innocent at first, but turn malicious and can lead to financial loss or data theft. When Scam Detection discovers a suspicious conversation pattern, it warns you in real-time so you can react before falling victim to a costly scam. <br /><br />AI-powered Scam Detection is always improving to help keep you safe while also keeping your privacy in mind. With Google\u2019s advanced on-device AI, your conversations stay private to you. All message processing remains on-device and you\u2019re always in control. You can turn off Spam Protection, which includes Scam Detection, in your Google Messages at any time.\n</p>\n<p>\nPrior to targeting conversational scams, Scam Detection in Google Messages focused on analyzing and detecting <a href=\"https://security.googleblog.com/2024/10/5-new-protections-on-google-messages.html\">package delivery and job seeking scams</a>. We\u2019ve now expanded our detections to help protect you from a wider variety of sophisticated scams including: \n</p>\n<ul>\n\n<li>Toll road and other billing fee scams  </li>\n\n<li>Crypto scams</li>\n\n<li>Financial impersonation scams </li>\n\n<li>Gift card and prize scams </li>\n\n<li>Technical support scams  </li>\n\n<li>And more</li>\n</ul>\n\nThese enhancements apply to all Google Messages users.\n\n\n<div class=\"separator\" style=\"clear: both;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiiq6VPWebm1gTF3gjiRENp_h6p9FWGJ2f6BzjgCD-tEeO6Phek7d9Z2S1RG5qa2mWxZ9riVnKipcR7wQTsbssIoojt5veJ52ZeKQvm7LQ6mK0APyS3y8YQuOeX1x1i__za5VvOYQBlaqUOW-O45Z-q_J-GApDIFoPIBbIoubFGt8Mf3Ib2iu5oEXYh0oG9/s3835/Scam%20Detection%20%28Caiman%29.png\" style=\"display: block; padding: 1em 0; text-align: center;\"><img alt=\"\" border=\"0\" height=\"400\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiiq6VPWebm1gTF3gjiRENp_h6p9FWGJ2f6BzjgCD-tEeO6Phek7d9Z2S1RG5qa2mWxZ9riVnKipcR7wQTsbssIoojt5veJ52ZeKQvm7LQ6mK0APyS3y8YQuOeX1x1i__za5VvOYQBlaqUOW-O45Z-q_J-GApDIFoPIBbIoubFGt8Mf3Ib2iu5oEXYh0oG9/s400/Scam%20Detection%20%28Caiman%29.png\" /></a></div>\n\n</p><br />\n\n<h3><strong>Fighting fraud and impersonation with Key Verifier</strong><br /></h3>\n\n\n<p>\nTo help protect you from scammers who try to impersonate someone you know, we\u2019re launching a helpful tool called Key Verifier. The feature allows you and the person you\u2019re messaging to verify the identity of the other party through public encryption keys, protecting your end-to-end encrypted messages in Google Messages. By verifying contact keys in your Google Contacts app (through a QR code scanning or number comparison), you can have an extra layer of assurance that the person on the other end is genuine and that your conversation is private with them. <br />\n</p>\n<p>\nKey Verifier provides a visual way for you and your contact to quickly confirm that your secret keys match, strengthening your confidence that you\u2019re communicating with the intended recipient and not a scammer. For example, if an attacker gains access to a friend\u2019s phone number and uses it on another device to send you a message \u2013 which can happen as a result of a SIM swap attack \u2013 their contact's verification status will be marked as no longer verified in the Google Contacts app, suggesting your friend\u2019s account may be compromised or has been changed. Key Verifier will launch later this summer in Google Messages on Android 10+ devices. \n</p>\n\n<div class=\"separator\" style=\"clear: both;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgpeph5euEeeDQHOlrJJ9kB136S2AATQd6QqzZ9v3K8P72lpeOKJkY7aYxfg2Va4PdAUXj1jVP2og-0FOMX5Un7MBRS4Bkm-_JMFW4yGpu0xHD89fBQLL9HR7yCYUt2aH0S3N4piTHcqfXo_VuXAwLtbLiclIcd3KPH0GtsYfVstcgsaUVhzOJ6m7pM8GET/s3891/Key%20Verifier%20combined.png\" style=\"display: block; padding: 1em 0; text-align: center;\"><img alt=\"\" border=\"0\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgpeph5euEeeDQHOlrJJ9kB136S2AATQd6QqzZ9v3K8P72lpeOKJkY7aYxfg2Va4PdAUXj1jVP2og-0FOMX5Un7MBRS4Bkm-_JMFW4yGpu0xHD89fBQLL9HR7yCYUt2aH0S3N4piTHcqfXo_VuXAwLtbLiclIcd3KPH0GtsYfVstcgsaUVhzOJ6m7pM8GET/s400/Key%20Verifier%20combined.png\" width=\"400\" /></a></div>\n\n</p>\n<h3><strong>Comprehensive mobile theft protection, now even stronger</strong></h3>\n\n\n<p>\n<br />Physical device theft can lead to financial fraud and data theft, with the value of your banking and payment information many times exceeding the value of your phone. This is one of the reasons why last year we launched the mobile industry\u2019s most comprehensive suite of <a href=\"https://security.googleblog.com/2024/10/android-theft-protection.html\">theft protection</a> features to protect you before, during, and after a theft. Since launch, our theft protection features have helped protect data on hundreds of thousands of devices that may have fallen into the wrong hands. This includes devices that were locked by Remote Lock or Theft Detection Lock and remained locked for over 48 hours. \n</p>\n<p>\nMost recently, we launched <a href=\"https://security.googleblog.com/2025/01/android-theft-protection-identity-check-expanded-features.html\">Identity Check</a> for Pixel and Samsung One UI 7 devices, providing an extra layer of security even if your PIN or password is compromised. This protection will also now be available from more device manufacturers on supported devices that upgrade to Android 16. \n</p>\n<p>\nComing later this year, we\u2019re further hardening Factory Reset protections, which will restrict all functionalities on devices that are reset without the owner\u2019s authorization. You'll also gain more control over our <a href=\"https://support.google.com/accounts/answer/6160491?hl=en\">Remote Lock</a> feature with the addition of a security challenge question, helping to prevent unauthorized actions.\n</p>\n<div class=\"separator\" style=\"clear: both;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiKABHmoqb3bZSeHL4335vvdxmjy3YtYhiA-umoOjCpme8DBW_xGmOncmxYsBzdiA5iM6ArfvvAxPSJESedWd9ei-J_tnPT4tU2M2TSz-8NVay6Py2EI6YERWgofmq2dGr8KH08DqGXHRmBQMz_El669tceurFkA14qpZNZlfCpnDqOp9ArHfw9rE6jGGCd/s3891/FRP%20and%20Remote%20Lock%20security%20question%20combined.png\" style=\"display: block; padding: 1em 0; text-align: center;\"><img alt=\"\" border=\"0\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiKABHmoqb3bZSeHL4335vvdxmjy3YtYhiA-umoOjCpme8DBW_xGmOncmxYsBzdiA5iM6ArfvvAxPSJESedWd9ei-J_tnPT4tU2M2TSz-8NVay6Py2EI6YERWgofmq2dGr8KH08DqGXHRmBQMz_El669tceurFkA14qpZNZlfCpnDqOp9ArHfw9rE6jGGCd/s400/FRP%20and%20Remote%20Lock%20security%20question%20combined.png\" width=\"400\" /></a></div>\n\n</p>\n<p>\nWe\u2019re also enhancing your security against thieves in Android 16 by providing more protection for one-time passwords that are received when your phone is locked.<strong> </strong>In higher risk scenarios<sup id=\"fnref2\"><a href=\"http://feeds.feedburner.com/GoogleOnlineSecurityBlog#fn2\" rel=\"footnote\">2</a></sup>, Android will hide one-time passwords on your lock screen, ensuring that only you can see them after unlocking your device. <br /><br />\n</p>\n\n<div class=\"separator\" style=\"clear: both;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiWyK3UKkP2KDahi0NNKJl2dBz0EnAuYuxSDVmWY0Zu4y5dHvrPvoAqk4yrOdIrMxlVNtHHBw46N7KdIZ_DAOOvfOxLe5gdATM3hRyBcHRLIMf5LH35NobLh87TXxtQPDLxQciCneyhF9MXWLtT-90JylcOGeGUrnFwjYk8Mf5N8cGal6kn4B2rCQHQmu-i/s3852/OTP%20lock%20screen%20protection.png\" style=\"display: block; padding: 1em 0; text-align: center;\"><img alt=\"\" border=\"0\" height=\"400\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiWyK3UKkP2KDahi0NNKJl2dBz0EnAuYuxSDVmWY0Zu4y5dHvrPvoAqk4yrOdIrMxlVNtHHBw46N7KdIZ_DAOOvfOxLe5gdATM3hRyBcHRLIMf5LH35NobLh87TXxtQPDLxQciCneyhF9MXWLtT-90JylcOGeGUrnFwjYk8Mf5N8cGal6kn4B2rCQHQmu-i/s400/OTP%20lock%20screen%20protection.png\" /></a></div>\n</p>\n<h3><strong>Advanced Protection: Google\u2019s strongest security for mobile devices</strong></h3>\n\n\n<p>\nProtecting users who need heightened security has been a long-standing commitment at Google, which is why we have our <a href=\"https://landing.google.com/intl/en_in/advancedprotection/\">Advanced Protection Program</a> that provides Google\u2019s strongest protections against targeted attacks.<br /><br />To enhance these existing device defenses, Android 16 extends Advanced Protection with a device-level security setting for Android users. Whether you\u2019re an at-risk individual \u2013 such as a journalist, elected official, or public figure \u2013 or you just prioritize security, Advanced Protection gives you the ability to activate Google\u2019s strongest security for mobile devices, providing greater peace of mind that you\u2019re protected against the most sophisticated threats.\n</p>\n<p>\nAdvanced Protection is available on devices with Android 16. Learn more in our <a href=\"https://security.googleblog.com/2025/05/advanced-protection-mobile-devices.html\">blog</a>. \n</p>\n<div class=\"separator\" style=\"clear: both;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhia8RAF24s4G62lyYo_53G1UngXY2d7M8bflBlJvpTUKhwwCiLJ9NrOc43SGOMO_ZIJD3X6E1QJy_HMO-LLh4UK07iCabwQuy5c1fnf0_k9HMxlIgR4WNnvVTKEvHHrI2-KA8SnqsH2pzwypEWw56BzNxaXg7-8MgPSSYyW9pMsZJpkWBdnGMT33-3Hu4b/s3852/Advanced%20Protection.png\" style=\"display: block; padding: 1em 0; text-align: center;\"><img alt=\"\" border=\"0\" height=\"400\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhia8RAF24s4G62lyYo_53G1UngXY2d7M8bflBlJvpTUKhwwCiLJ9NrOc43SGOMO_ZIJD3X6E1QJy_HMO-LLh4UK07iCabwQuy5c1fnf0_k9HMxlIgR4WNnvVTKEvHHrI2-KA8SnqsH2pzwypEWw56BzNxaXg7-8MgPSSYyW9pMsZJpkWBdnGMT33-3Hu4b/s400/Advanced%20Protection.png\" /></a></div>\n\n</p>\n<h3><strong> More intelligent defenses against bad apps with Google Play Protect</strong></h3>\n\n\n<p>\nOne way malicious developers try to trick people is by hiding or changing their app icon, making unsafe apps more difficult to find and remove. Now, Google Play Protect <a href=\"https://security.googleblog.com/2024/11/new-real-time-protections-on-Android.html\">live threat detection</a> will catch apps and alert you when we detect this deceptive behavior. This feature will be available to Google Pixel 6+ and a selection of new devices from other manufacturers in the coming months.\n</p>\n<div class=\"separator\" style=\"clear: both;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiFOWqW8D-v4sSdWKr2dg3JBnZ91Tk4Yi1LJpnrt72HxwrjY-bBIb28AJPaZ_aD3Wbw6l3v1cbO2OHGZrC-9Bw83sKvG1TkOrp42PCiFwClUTuk3rb4HoQr4yANgBvROQnHxRJe_KTf1N5W_q1vzVKinf8Ql9EznSo4TpwQQHayVgSMxjaKIAMW6zU-asdt/s1926/Live%20threat%20detection%20%281%29%20%281%29.png\" style=\"display: block; padding: 1em 0; text-align: center;\"><img alt=\"\" border=\"0\" height=\"400\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiFOWqW8D-v4sSdWKr2dg3JBnZ91Tk4Yi1LJpnrt72HxwrjY-bBIb28AJPaZ_aD3Wbw6l3v1cbO2OHGZrC-9Bw83sKvG1TkOrp42PCiFwClUTuk3rb4HoQr4yANgBvROQnHxRJe_KTf1N5W_q1vzVKinf8Ql9EznSo4TpwQQHayVgSMxjaKIAMW6zU-asdt/s400/Live%20threat%20detection%20%281%29%20%281%29.png\" /></a></div>\n\n</p>\n<p>\nGoogle Play Protect always checks each app before it gets installed on your device, regardless of the install source. It conducts <a href=\"https://security.googleblog.com/2023/10/enhanced-google-play-protect-real-time.html\">real-time scanning</a> of an app, enhanced by on-device machine learning, when users try to install an app that has never been seen by Google Play Protect to help detect emerging threats. \n</p>\n<p>\nWe\u2019ve made Google Play Protect\u2019s on-device capabilities smarter to help us identify more malicious applications even faster to keep you safe. Google Play Protect now uses a new set of on-device <a href=\"https://virustotal.github.io/yara/\">rules</a> to specifically look for text or binary patterns to quickly identify malware families. If an app shows these malicious patterns, we can alert you before you even install it. And to keep you safe from new and emerging malware and their variants, we will update these rules frequently for better classification over time.\n</p>\n<p>\nThis update to Google Play Protect is now available globally for all Android users with Google Play services. \n</p>\n<h3><strong> Always advancing Android security</strong></h3>\n\n\n<p>\n<br />In addition to new features that come in numbered Android releases, we're constantly enhancing your protection on Android through seamless Google Play services updates and other <a href=\"https://blog.google/technology/safety-security/how-were-using-ai-to-combat-the-latest-scams/\">improvements</a>, ensuring you benefit from the latest security advancements continuously. This allows us to rapidly deploy critical defenses and keep you ahead of emerging threats, making your Android experience safer every day.<br /><br />Through close collaboration with our partners across the Android ecosystem and the broader security community, we remain focused on bringing you security enhancements and innovative new features to help keep you safe.\n</p>\n\n<!-- Footnotes themselves at the bottom. -->\n\n<h2>Notes</h2>\n<div class=\"footnotes\">\n<hr />\n<ol><li id=\"fn1\">\n<p>\n     In-call protection for disabling Google Play Protect is available on Android 6+ devices. Protections for sideloading an app and turning on accessibility permissions are available on Android 16 devices.&nbsp;<a href=\"http://feeds.feedburner.com/GoogleOnlineSecurityBlog#fnref1\" rev=\"footnote\">&#8617;</a><li id=\"fn2\">\n<p>\n     When a user\u2019s device is not connected to Wi-Fi and has not been recently unlocked&nbsp;<a href=\"http://feeds.feedburner.com/GoogleOnlineSecurityBlog#fnref2\" rev=\"footnote\">&#8617;</a>\n\n</ol></div>",
            "links": [
                {
                    "href": "http://security.googleblog.com/feeds/4284088541533635953/comments/default",
                    "rel": "replies",
                    "title": "Post Comments",
                    "type": "application/atom+xml"
                },
                {
                    "href": "http://www.blogger.com/comment/fullpage/post/1176949257541686127/4284088541533635953?isPopup=true",
                    "rel": "replies",
                    "title": "0 Comments",
                    "type": "text/html"
                },
                {
                    "href": "http://www.blogger.com/feeds/1176949257541686127/posts/default/4284088541533635953",
                    "rel": "edit",
                    "type": "application/atom+xml"
                },
                {
                    "href": "http://www.blogger.com/feeds/1176949257541686127/posts/default/4284088541533635953",
                    "rel": "self",
                    "type": "application/atom+xml"
                },
                {
                    "href": "http://security.googleblog.com/2025/05/whats-new-in-android-security-privacy-2025.html",
                    "rel": "alternate",
                    "title": "What\u2019s New in Android Security and Privacy in 2025",
                    "type": "text/html"
                }
            ],
            "authors": [
                {
                    "name": "Edward Fernandez",
                    "href": "http://www.blogger.com/profile/03784424747198152685",
                    "email": "noreply@blogger.com"
                }
            ],
            "author_detail": {
                "name": "Edward Fernandez",
                "href": "http://www.blogger.com/profile/03784424747198152685",
                "email": "noreply@blogger.com"
            },
            "href": "",
            "author": "Edward Fernandez (noreply@blogger.com)",
            "gd_image": {
                "height": "16",
                "rel": "http://schemas.google.com/g/2005#thumbnail",
                "src": "https://img1.blogblog.com/img/b16-rounded.gif",
                "width": "16"
            },
            "media_thumbnail": [
                {
                    "height": "72",
                    "url": "https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjow61g9yHqra-E4XmwWfw1eGul9-mS1FzQEpgk65h0LkwTG9sojL0eSKruDS4LjZ31AGDOkNbSCM3A8zo5EEQQziHfxV6yZmo0883nK_JeoGBzKQowypG26j07kcR1mUOaKasvPEIM7z_BbKdHn51Zz4ZSvU4UKCDCVibJpxXWQWvE9T75OxMIuDscDfFt/s72-c/In-call%20scam%20protections.png",
                    "width": "72"
                }
            ],
            "thr_total": "0"
        },
        {
            "id": "tag:blogger.com,1999:blog-1176949257541686127.post-3412153442126761276",
            "guidislink": true,
            "link": "http://security.googleblog.com/2025/05/advanced-protection-mobile-devices.html",
            "published": "2025-05-13T12:59:00.017-04:00",
            "published_parsed": [
                2025,
                5,
                13,
                16,
                59,
                0,
                1,
                133,
                0
            ],
            "updated": "2025-05-13T14:04:26.321-04:00",
            "updated_parsed": [
                2025,
                5,
                13,
                18,
                4,
                26,
                1,
                133,
                0
            ],
            "tags": [
                {
                    "term": "android",
                    "scheme": "http://www.blogger.com/atom/ns#",
                    "label": null
                },
                {
                    "term": "android security",
                    "scheme": "http://www.blogger.com/atom/ns#",
                    "label": null
                }
            ],
            "title": "Advanced Protection: Google\u2019s Strongest Security for Mobile Devices",
            "title_detail": {
                "type": "text/plain",
                "language": null,
                "base": "http://feeds.feedburner.com/GoogleOnlineSecurityBlog",
                "value": "Advanced Protection: Google\u2019s Strongest Security for Mobile Devices"
            },
            "content": [
                {
                    "type": "text/html",
                    "language": null,
                    "base": "http://feeds.feedburner.com/GoogleOnlineSecurityBlog",
                    "value": "<span class=\"byline-author\">Posted by Il-Sung Lee, Group Product Manager, Android Security</span>\n\n<p>\nProtecting users who need heightened security has been a long-standing commitment at Google, which is why we have our <a href=\"https://landing.google.com/intl/en_in/advancedprotection/\">Advanced Protection Program</a> that provides Google\u2019s strongest protections against targeted attacks.<br /><br />To enhance these existing device defenses, Android 16 extends Advanced Protection with a device-level security setting for Android users. Whether you\u2019re an at-risk individual \u2013 such as a journalist, elected official, or public figure \u2013 or you just prioritize security, Advanced Protection gives you the ability to activate Google\u2019s strongest security for mobile devices, providing greater peace of mind that you\u2019re protected against the most sophisticated threats.\n</p>\n<p>\n<h3><strong>Simple to activate, powerful in protection</strong></h3><p>Advanced Protection ensures all of Android's highest security features are enabled and are seamlessly working together to safeguard you against online attacks, harmful apps, and data risks. <br /><br />Advanced Protection activates a powerful array of security features, combining new capabilities with pre-existing ones that have earned top ratings in <a href=\"https://services.google.com/fh/files/misc/mobile_device_security_scorecard_2024.pdf\">security comparisons</a>, all designed to protect your device across several critical areas.<br /><br />We're also introducing innovative, Android-specific features, such as Intrusion Logging. This industry-first feature securely backs up device logs in a privacy-preserving and tamper-resistant way, accessible only to the user. These logs enable a forensic analysis if a device compromise is ever suspected. \n</p>\n<p>\nAdvanced Protection gives users:\n</p>\n<ul>\n\n<li><strong>Best-in-class protection, minimal disruption:</strong> Advanced Protection gives users the option to equip their devices with Android\u2019s most effective security features for proactive defense, with a user-friendly and low-friction experience.</li>\n\n<li><strong>Easy activation:</strong> Advanced Protection makes security easy and accessible. You don\u2019t need to be a security expert to benefit from enhanced security. </li>\n\n<li><strong>Defense-in-depth: </strong>Once a user turns on Advanced Protection, the system prevents accidental or malicious disablement of the individual security features under the Advanced Protection umbrella. This reflects a \"defense-in-depth\" strategy, where multiple security layers work together.</li>\n\n<li><strong>Seamless security integration with apps: </strong>Advanced Protection acts as a single control point that enables important security settings across many of your favorite Google apps, including Chrome, Google Message, and Phone by Google. Advanced Protection will also incorporate third-party applications that choose to integrate in the future.<strong><br /></strong></li>\n</ul>\n\n<div class=\"separator\" style=\"clear: both;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgpOX6brq1JJ9qQqy7w91bC9E00p_ctgmF1AXRQUKBBcZuzXeqENMhWcwSLiXtITkRmXs9x4-ecPkQyc5Op29Etv4jU-FoqYiknAPhOSuHx-wh4QPSNfgloKz3QLopk8XIlIXwuII7rpC3SkqtPdasiYckOfrP_3eAGR6NEYxXc9s0T5qss0f_YsL2umBpL/s3867/Advanced%20Protection%20combined.png\" style=\"display: block; padding: 1em 0; text-align: center;\"><img alt=\"\" border=\"0\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgpOX6brq1JJ9qQqy7w91bC9E00p_ctgmF1AXRQUKBBcZuzXeqENMhWcwSLiXtITkRmXs9x4-ecPkQyc5Op29Etv4jU-FoqYiknAPhOSuHx-wh4QPSNfgloKz3QLopk8XIlIXwuII7rpC3SkqtPdasiYckOfrP_3eAGR6NEYxXc9s0T5qss0f_YsL2umBpL/s400/Advanced%20Protection%20combined.png\" width=\"400\" /></a></div>\n<p>\n<h3><strong>How your Android device becomes fortified with Advanced Protection </strong></h3>\n</p>\n<p>\nAdvanced Protection manages the following existing and new security features for your device, ensuring they are activated and cannot be disabled across critical protection areas:\n</p>\n<p>\n<div class=\"separator\" style=\"clear: both;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhx660nq5Ioqk6mXsxweVu-BGO5l_KG5g5LOmib66vr7e3keic8QeXzteB8Ad-EbB52RcEDeYbuE6B9OJ62s51VxmCU3jw5niqEeQx8p0uByWDAr6Zb2H3zANvZM5r69hQoBL7HxLETlSnuppW6Et28jkgLLpsE1-z8Vu6SoYHs2zXjHl5Ck79K9qzkAiXK/s1600/Advanced%20Protection%20table%20%281%20column%29.png\" style=\"display: block; padding: 1em 0; text-align: center;\"><img alt=\"\" border=\"0\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhx660nq5Ioqk6mXsxweVu-BGO5l_KG5g5LOmib66vr7e3keic8QeXzteB8Ad-EbB52RcEDeYbuE6B9OJ62s51VxmCU3jw5niqEeQx8p0uByWDAr6Zb2H3zANvZM5r69hQoBL7HxLETlSnuppW6Et28jkgLLpsE1-z8Vu6SoYHs2zXjHl5Ck79K9qzkAiXK/s1600/Advanced%20Protection%20table%20%281%20column%29.png\" /></a></div>\n  \n<h3><strong> Continuously evolving Advanced Protection</strong></h3><p>With the release of Android 16, users who choose to activate Advanced Protection will gain immediate access to a core suite of enhanced security features. Additional Advanced Protection features like Intrusion Logging, USB protection, the option to disable auto-reconnect to insecure networks, and integration with Scam Detection for Phone by Google will become available later this year. \n</p>\n<p>\n\nWe are committed to continuously expanding the security and privacy capabilities within Advanced Protection, so users can benefit from the best of Android\u2019s powerful security features. \n</p>"
                }
            ],
            "summary": "<span class=\"byline-author\">Posted by Il-Sung Lee, Group Product Manager, Android Security</span>\n\n<p>\nProtecting users who need heightened security has been a long-standing commitment at Google, which is why we have our <a href=\"https://landing.google.com/intl/en_in/advancedprotection/\">Advanced Protection Program</a> that provides Google\u2019s strongest protections against targeted attacks.<br /><br />To enhance these existing device defenses, Android 16 extends Advanced Protection with a device-level security setting for Android users. Whether you\u2019re an at-risk individual \u2013 such as a journalist, elected official, or public figure \u2013 or you just prioritize security, Advanced Protection gives you the ability to activate Google\u2019s strongest security for mobile devices, providing greater peace of mind that you\u2019re protected against the most sophisticated threats.\n</p>\n<p>\n<h3><strong>Simple to activate, powerful in protection</strong></h3><p>Advanced Protection ensures all of Android's highest security features are enabled and are seamlessly working together to safeguard you against online attacks, harmful apps, and data risks. <br /><br />Advanced Protection activates a powerful array of security features, combining new capabilities with pre-existing ones that have earned top ratings in <a href=\"https://services.google.com/fh/files/misc/mobile_device_security_scorecard_2024.pdf\">security comparisons</a>, all designed to protect your device across several critical areas.<br /><br />We're also introducing innovative, Android-specific features, such as Intrusion Logging. This industry-first feature securely backs up device logs in a privacy-preserving and tamper-resistant way, accessible only to the user. These logs enable a forensic analysis if a device compromise is ever suspected. \n</p>\n<p>\nAdvanced Protection gives users:\n</p>\n<ul>\n\n<li><strong>Best-in-class protection, minimal disruption:</strong> Advanced Protection gives users the option to equip their devices with Android\u2019s most effective security features for proactive defense, with a user-friendly and low-friction experience.</li>\n\n<li><strong>Easy activation:</strong> Advanced Protection makes security easy and accessible. You don\u2019t need to be a security expert to benefit from enhanced security. </li>\n\n<li><strong>Defense-in-depth: </strong>Once a user turns on Advanced Protection, the system prevents accidental or malicious disablement of the individual security features under the Advanced Protection umbrella. This reflects a \"defense-in-depth\" strategy, where multiple security layers work together.</li>\n\n<li><strong>Seamless security integration with apps: </strong>Advanced Protection acts as a single control point that enables important security settings across many of your favorite Google apps, including Chrome, Google Message, and Phone by Google. Advanced Protection will also incorporate third-party applications that choose to integrate in the future.<strong><br /></strong></li>\n</ul>\n\n<div class=\"separator\" style=\"clear: both;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgpOX6brq1JJ9qQqy7w91bC9E00p_ctgmF1AXRQUKBBcZuzXeqENMhWcwSLiXtITkRmXs9x4-ecPkQyc5Op29Etv4jU-FoqYiknAPhOSuHx-wh4QPSNfgloKz3QLopk8XIlIXwuII7rpC3SkqtPdasiYckOfrP_3eAGR6NEYxXc9s0T5qss0f_YsL2umBpL/s3867/Advanced%20Protection%20combined.png\" style=\"display: block; padding: 1em 0; text-align: center;\"><img alt=\"\" border=\"0\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgpOX6brq1JJ9qQqy7w91bC9E00p_ctgmF1AXRQUKBBcZuzXeqENMhWcwSLiXtITkRmXs9x4-ecPkQyc5Op29Etv4jU-FoqYiknAPhOSuHx-wh4QPSNfgloKz3QLopk8XIlIXwuII7rpC3SkqtPdasiYckOfrP_3eAGR6NEYxXc9s0T5qss0f_YsL2umBpL/s400/Advanced%20Protection%20combined.png\" width=\"400\" /></a></div>\n<p>\n<h3><strong>How your Android device becomes fortified with Advanced Protection </strong></h3>\n</p>\n<p>\nAdvanced Protection manages the following existing and new security features for your device, ensuring they are activated and cannot be disabled across critical protection areas:\n</p>\n<p>\n<div class=\"separator\" style=\"clear: both;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhx660nq5Ioqk6mXsxweVu-BGO5l_KG5g5LOmib66vr7e3keic8QeXzteB8Ad-EbB52RcEDeYbuE6B9OJ62s51VxmCU3jw5niqEeQx8p0uByWDAr6Zb2H3zANvZM5r69hQoBL7HxLETlSnuppW6Et28jkgLLpsE1-z8Vu6SoYHs2zXjHl5Ck79K9qzkAiXK/s1600/Advanced%20Protection%20table%20%281%20column%29.png\" style=\"display: block; padding: 1em 0; text-align: center;\"><img alt=\"\" border=\"0\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhx660nq5Ioqk6mXsxweVu-BGO5l_KG5g5LOmib66vr7e3keic8QeXzteB8Ad-EbB52RcEDeYbuE6B9OJ62s51VxmCU3jw5niqEeQx8p0uByWDAr6Zb2H3zANvZM5r69hQoBL7HxLETlSnuppW6Et28jkgLLpsE1-z8Vu6SoYHs2zXjHl5Ck79K9qzkAiXK/s1600/Advanced%20Protection%20table%20%281%20column%29.png\" /></a></div>\n  \n<h3><strong> Continuously evolving Advanced Protection</strong></h3><p>With the release of Android 16, users who choose to activate Advanced Protection will gain immediate access to a core suite of enhanced security features. Additional Advanced Protection features like Intrusion Logging, USB protection, the option to disable auto-reconnect to insecure networks, and integration with Scam Detection for Phone by Google will become available later this year. \n</p>\n<p>\n\nWe are committed to continuously expanding the security and privacy capabilities within Advanced Protection, so users can benefit from the best of Android\u2019s powerful security features. \n</p>",
            "links": [
                {
                    "href": "http://security.googleblog.com/feeds/3412153442126761276/comments/default",
                    "rel": "replies",
                    "title": "Post Comments",
                    "type": "application/atom+xml"
                },
                {
                    "href": "http://www.blogger.com/comment/fullpage/post/1176949257541686127/3412153442126761276?isPopup=true",
                    "rel": "replies",
                    "title": "0 Comments",
                    "type": "text/html"
                },
                {
                    "href": "http://www.blogger.com/feeds/1176949257541686127/posts/default/3412153442126761276",
                    "rel": "edit",
                    "type": "application/atom+xml"
                },
                {
                    "href": "http://www.blogger.com/feeds/1176949257541686127/posts/default/3412153442126761276",
                    "rel": "self",
                    "type": "application/atom+xml"
                },
                {
                    "href": "http://security.googleblog.com/2025/05/advanced-protection-mobile-devices.html",
                    "rel": "alternate",
                    "title": "Advanced Protection: Google\u2019s Strongest Security for Mobile Devices",
                    "type": "text/html"
                }
            ],
            "authors": [
                {
                    "name": "Edward Fernandez",
                    "href": "http://www.blogger.com/profile/03784424747198152685",
                    "email": "noreply@blogger.com"
                }
            ],
            "author_detail": {
                "name": "Edward Fernandez",
                "href": "http://www.blogger.com/profile/03784424747198152685",
                "email": "noreply@blogger.com"
            },
            "href": "",
            "author": "Edward Fernandez (noreply@blogger.com)",
            "gd_image": {
                "height": "16",
                "rel": "http://schemas.google.com/g/2005#thumbnail",
                "src": "https://img1.blogblog.com/img/b16-rounded.gif",
                "width": "16"
            },
            "media_thumbnail": [
                {
                    "height": "72",
                    "url": "https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgpOX6brq1JJ9qQqy7w91bC9E00p_ctgmF1AXRQUKBBcZuzXeqENMhWcwSLiXtITkRmXs9x4-ecPkQyc5Op29Etv4jU-FoqYiknAPhOSuHx-wh4QPSNfgloKz3QLopk8XIlIXwuII7rpC3SkqtPdasiYckOfrP_3eAGR6NEYxXc9s0T5qss0f_YsL2umBpL/s72-c/Advanced%20Protection%20combined.png",
                    "width": "72"
                }
            ],
            "thr_total": "0"
        },
        {
            "id": "tag:blogger.com,1999:blog-1176949257541686127.post-6392506608742168193",
            "guidislink": true,
            "link": "http://security.googleblog.com/2025/05/using-ai-to-stop-tech-support-scams-in.html",
            "published": "2025-05-08T12:59:00.001-04:00",
            "published_parsed": [
                2025,
                5,
                8,
                16,
                59,
                0,
                3,
                128,
                0
            ],
            "updated": "2025-05-08T12:59:22.695-04:00",
            "updated_parsed": [
                2025,
                5,
                8,
                16,
                59,
                22,
                3,
                128,
                0
            ],
            "title": "Using AI to stop tech support scams in Chrome",
            "title_detail": {
                "type": "text/plain",
                "language": null,
                "base": "http://feeds.feedburner.com/GoogleOnlineSecurityBlog",
                "value": "Using AI to stop tech support scams in Chrome"
            },
            "content": [
                {
                    "type": "text/html",
                    "language": null,
                    "base": "http://feeds.feedburner.com/GoogleOnlineSecurityBlog",
                    "value": "<span class=\"byline-author\">Posted by Jasika Bawa, Andy Lim, and Xinghui Lu, Google Chrome Security</span>\n\n<p>\nTech support scams are an increasingly prevalent form of cybercrime, characterized by deceptive tactics aimed at extorting money or gaining unauthorized access to sensitive data. In a tech support scam, the goal of the scammer is to trick you into believing your computer has a serious problem, such as a virus or malware infection, and then convince you to pay for unnecessary services, software, or grant them remote access to your device. Tech support scams on the web often employ alarming pop-up warnings mimicking legitimate security alerts. We've also observed them to use full-screen takeovers and disable keyboard and mouse input to create a sense of crisis. \n</p>\n<p>\nChrome has always worked with Google Safe Browsing to help keep you safe online. Now, with this week's launch of Chrome 137, Chrome will offer an additional layer of protection using the on-device Gemini Nano large language model (LLM). This new feature will leverage the LLM to generate signals that will be used by Safe Browsing in order to deliver higher confidence verdicts about potentially dangerous sites like tech support scams.\n</p>\n<p>\nInitial research using LLMs has shown that they are relatively effective at understanding and classifying the varied, complex nature of websites. As such, we believe we can leverage LLMs to help detect scams at scale and adapt to new tactics more quickly. But why on-device? Leveraging LLMs on-device allows us to see threats <em>when</em> users see them. We\u2019ve found that the average malicious site exists for less than 10 minutes, so on-device protection allows us to detect and block attacks that haven't been crawled before. The on-device approach also empowers us to see threats <em>the way</em> users see them. Sites can render themselves differently for different users, often for legitimate purposes (e.g. to account for device differences, offer personalization, provide time-sensitive content), but sometimes for illegitimate purposes (e.g. to evade security crawlers) \u2013 as such, having visibility into how sites are presenting themselves to real users enhances our ability to assess the web.\n</p>\n<p>\n<strong>How it works</strong>\n</p>\n<p>\nAt a high level, here's how this new layer of protection works. \n</p>\n<div class=\"separator\" style=\"clear: both;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgdBy208g6OvBj96GRY-gYdb-cZ_IgKRDRkXh3-hLO3hR8IyCBIZifB6dnNP_vIfLFkoDb18TQeNJ-rDQKftNE9784jClEgqkx_8jsI1EJeaKcAaVSGhp41a2frCVKtBkjAhpCwI3u7bnW2wEJ8V9VQoTwxc-gsWE6oKNh6Ps01FPQg54tHxCzOq2Nk_O2g/s1600/Screenshot%202025-05-07%20at%202.35.55%E2%80%AFPM.png\" style=\"display: block; padding: 1em 0; text-align: center;\"><img alt=\"\" border=\"0\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgdBy208g6OvBj96GRY-gYdb-cZ_IgKRDRkXh3-hLO3hR8IyCBIZifB6dnNP_vIfLFkoDb18TQeNJ-rDQKftNE9784jClEgqkx_8jsI1EJeaKcAaVSGhp41a2frCVKtBkjAhpCwI3u7bnW2wEJ8V9VQoTwxc-gsWE6oKNh6Ps01FPQg54tHxCzOq2Nk_O2g/s1600/Screenshot%202025-05-07%20at%202.35.55%E2%80%AFPM.png\" /></a></div>\n\n<p style=\"text-align: center;\">\nOverview of how on-device LLM assistance in mitigating scams works\n</p>\n<p>\nWhen a user navigates to a potentially dangerous page, specific triggers that are characteristic of tech support scams (for example, the use of the <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Keyboard/lock\">keyboard lock API</a>) will cause Chrome to evaluate the page using the on-device Gemini Nano LLM. Chrome provides the LLM with the contents of the page that the user is on and queries it to extract security signals, such as the intent of the page. This information is then sent to Safe Browsing for a final verdict. If Safe Browsing determines that the page is likely to be a scam based on the LLM output it receives from the client, in addition to other intelligence and metadata about the site, Chrome will show a warning interstitial.\n</p>\n<p>\nThis is all done in a way that preserves performance and privacy. In addition to ensuring that the LLM is only triggered sparingly and run locally on the device, we carefully manage resource consumption by considering the number of tokens used, running the process asynchronously to avoid interrupting browser activity, and implementing throttling and quota enforcement mechanisms to limit GPU usage. LLM-summarized security signals are only sent to Safe Browsing for users who have opted-in to the <a href=\"https://support.google.com/chrome/answer/9890866?hl=en&amp;co=GENIE.Platform%3DDesktop&amp;oco=0#zippy=%2Cenhanced-protection\">Enhanced Protection mode of Safe Browsing</a> in Chrome, giving them protection against threats Google may not have seen before. Standard Protection users will also benefit indirectly from this feature as we add newly discovered dangerous sites to blocklists.\n</p>\n<p>\n<strong>Future considerations</strong>\n</p>\n<p>\nThe scam landscape continues to evolve, with bad actors constantly adapting their tactics. Beyond tech support scams, in the future we plan to use the capabilities described in this post to help detect other popular scam types, such as package tracking scams and unpaid toll scams. We also plan to utilize the growing power of Gemini to extract additional signals from website content, which will further enhance our detection capabilities. To protect even more users from scams, we are working on rolling out this feature to Chrome on Android later this year. And finally, we are collaborating with our research counterparts to explore solutions to potential exploits such as prompt injection in content and timing bypass.\n</p>"
                }
            ],
            "summary": "<span class=\"byline-author\">Posted by Jasika Bawa, Andy Lim, and Xinghui Lu, Google Chrome Security</span>\n\n<p>\nTech support scams are an increasingly prevalent form of cybercrime, characterized by deceptive tactics aimed at extorting money or gaining unauthorized access to sensitive data. In a tech support scam, the goal of the scammer is to trick you into believing your computer has a serious problem, such as a virus or malware infection, and then convince you to pay for unnecessary services, software, or grant them remote access to your device. Tech support scams on the web often employ alarming pop-up warnings mimicking legitimate security alerts. We've also observed them to use full-screen takeovers and disable keyboard and mouse input to create a sense of crisis. \n</p>\n<p>\nChrome has always worked with Google Safe Browsing to help keep you safe online. Now, with this week's launch of Chrome 137, Chrome will offer an additional layer of protection using the on-device Gemini Nano large language model (LLM). This new feature will leverage the LLM to generate signals that will be used by Safe Browsing in order to deliver higher confidence verdicts about potentially dangerous sites like tech support scams.\n</p>\n<p>\nInitial research using LLMs has shown that they are relatively effective at understanding and classifying the varied, complex nature of websites. As such, we believe we can leverage LLMs to help detect scams at scale and adapt to new tactics more quickly. But why on-device? Leveraging LLMs on-device allows us to see threats <em>when</em> users see them. We\u2019ve found that the average malicious site exists for less than 10 minutes, so on-device protection allows us to detect and block attacks that haven't been crawled before. The on-device approach also empowers us to see threats <em>the way</em> users see them. Sites can render themselves differently for different users, often for legitimate purposes (e.g. to account for device differences, offer personalization, provide time-sensitive content), but sometimes for illegitimate purposes (e.g. to evade security crawlers) \u2013 as such, having visibility into how sites are presenting themselves to real users enhances our ability to assess the web.\n</p>\n<p>\n<strong>How it works</strong>\n</p>\n<p>\nAt a high level, here's how this new layer of protection works. \n</p>\n<div class=\"separator\" style=\"clear: both;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgdBy208g6OvBj96GRY-gYdb-cZ_IgKRDRkXh3-hLO3hR8IyCBIZifB6dnNP_vIfLFkoDb18TQeNJ-rDQKftNE9784jClEgqkx_8jsI1EJeaKcAaVSGhp41a2frCVKtBkjAhpCwI3u7bnW2wEJ8V9VQoTwxc-gsWE6oKNh6Ps01FPQg54tHxCzOq2Nk_O2g/s1600/Screenshot%202025-05-07%20at%202.35.55%E2%80%AFPM.png\" style=\"display: block; padding: 1em 0; text-align: center;\"><img alt=\"\" border=\"0\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgdBy208g6OvBj96GRY-gYdb-cZ_IgKRDRkXh3-hLO3hR8IyCBIZifB6dnNP_vIfLFkoDb18TQeNJ-rDQKftNE9784jClEgqkx_8jsI1EJeaKcAaVSGhp41a2frCVKtBkjAhpCwI3u7bnW2wEJ8V9VQoTwxc-gsWE6oKNh6Ps01FPQg54tHxCzOq2Nk_O2g/s1600/Screenshot%202025-05-07%20at%202.35.55%E2%80%AFPM.png\" /></a></div>\n\n<p style=\"text-align: center;\">\nOverview of how on-device LLM assistance in mitigating scams works\n</p>\n<p>\nWhen a user navigates to a potentially dangerous page, specific triggers that are characteristic of tech support scams (for example, the use of the <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Keyboard/lock\">keyboard lock API</a>) will cause Chrome to evaluate the page using the on-device Gemini Nano LLM. Chrome provides the LLM with the contents of the page that the user is on and queries it to extract security signals, such as the intent of the page. This information is then sent to Safe Browsing for a final verdict. If Safe Browsing determines that the page is likely to be a scam based on the LLM output it receives from the client, in addition to other intelligence and metadata about the site, Chrome will show a warning interstitial.\n</p>\n<p>\nThis is all done in a way that preserves performance and privacy. In addition to ensuring that the LLM is only triggered sparingly and run locally on the device, we carefully manage resource consumption by considering the number of tokens used, running the process asynchronously to avoid interrupting browser activity, and implementing throttling and quota enforcement mechanisms to limit GPU usage. LLM-summarized security signals are only sent to Safe Browsing for users who have opted-in to the <a href=\"https://support.google.com/chrome/answer/9890866?hl=en&amp;co=GENIE.Platform%3DDesktop&amp;oco=0#zippy=%2Cenhanced-protection\">Enhanced Protection mode of Safe Browsing</a> in Chrome, giving them protection against threats Google may not have seen before. Standard Protection users will also benefit indirectly from this feature as we add newly discovered dangerous sites to blocklists.\n</p>\n<p>\n<strong>Future considerations</strong>\n</p>\n<p>\nThe scam landscape continues to evolve, with bad actors constantly adapting their tactics. Beyond tech support scams, in the future we plan to use the capabilities described in this post to help detect other popular scam types, such as package tracking scams and unpaid toll scams. We also plan to utilize the growing power of Gemini to extract additional signals from website content, which will further enhance our detection capabilities. To protect even more users from scams, we are working on rolling out this feature to Chrome on Android later this year. And finally, we are collaborating with our research counterparts to explore solutions to potential exploits such as prompt injection in content and timing bypass.\n</p>",
            "links": [
                {
                    "href": "http://security.googleblog.com/feeds/6392506608742168193/comments/default",
                    "rel": "replies",
                    "title": "Post Comments",
                    "type": "application/atom+xml"
                },
                {
                    "href": "http://www.blogger.com/comment/fullpage/post/1176949257541686127/6392506608742168193?isPopup=true",
                    "rel": "replies",
                    "title": "0 Comments",
                    "type": "text/html"
                },
                {
                    "href": "http://www.blogger.com/feeds/1176949257541686127/posts/default/6392506608742168193",
                    "rel": "edit",
                    "type": "application/atom+xml"
                },
                {
                    "href": "http://www.blogger.com/feeds/1176949257541686127/posts/default/6392506608742168193",
                    "rel": "self",
                    "type": "application/atom+xml"
                },
                {
                    "href": "http://security.googleblog.com/2025/05/using-ai-to-stop-tech-support-scams-in.html",
                    "rel": "alternate",
                    "title": "Using AI to stop tech support scams in Chrome",
                    "type": "text/html"
                }
            ],
            "authors": [
                {
                    "name": "Google",
                    "href": "http://www.blogger.com/profile/11822708545141062574",
                    "email": "noreply@blogger.com"
                }
            ],
            "author_detail": {
                "name": "Google",
                "href": "http://www.blogger.com/profile/11822708545141062574",
                "email": "noreply@blogger.com"
            },
            "href": "",
            "author": "Google (noreply@blogger.com)",
            "gd_image": {
                "height": "16",
                "rel": "http://schemas.google.com/g/2005#thumbnail",
                "src": "https://img1.blogblog.com/img/b16-rounded.gif",
                "width": "16"
            },
            "media_thumbnail": [
                {
                    "height": "72",
                    "url": "https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgdBy208g6OvBj96GRY-gYdb-cZ_IgKRDRkXh3-hLO3hR8IyCBIZifB6dnNP_vIfLFkoDb18TQeNJ-rDQKftNE9784jClEgqkx_8jsI1EJeaKcAaVSGhp41a2frCVKtBkjAhpCwI3u7bnW2wEJ8V9VQoTwxc-gsWE6oKNh6Ps01FPQg54tHxCzOq2Nk_O2g/s72-c/Screenshot%202025-05-07%20at%202.35.55%E2%80%AFPM.png",
                    "width": "72"
                }
            ],
            "thr_total": "0"
        }
    ]
}